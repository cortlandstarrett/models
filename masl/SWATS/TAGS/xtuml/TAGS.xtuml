-- root-types-contained: Package_c
-- BP 7.1 content: StreamData syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000029",'An_Active_Object',2,'AAO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000034",'A_Passive_Static_Object',3,'APSO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000003f",'A_Passive_Array_Of_One_Object',4,'APAOOO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000004a",'Report_Data',5,'RD','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000055",'Check_On_Active_Object',6,'CHECK','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000060",'Test_Data',7,'TD','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000006b",'An_Active_Array_Of_One_Object',8,'AAAOOO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000076",'An_Active_Array_Of_Three_Objects',9,'AAAOTO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000081",'A_Passive_Array_Of_Three_Objects',10,'APAOTO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000008c",'Single_Tagged_Object',11,'STO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000097",'Many_Tagged_Objects',12,'MTO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000a2",'Active_Tagged_Single_Object',13,'ATSO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000ad",'Active_Tagged_Many_Objects',14,'ATMO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000b8",'Tagged_Many_Left',15,'TM_LEFT','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000c3",'Tagged_Many_Right',16,'TM_RIGHT','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000ce",'Tagged_Single_Assoc',17,'TS_ASSOC','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000d9",'Tagged_Many_Supertype',18,'TAG_SUPER','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000e4",'Subtype_1',19,'SUB_ONE','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000ef",'Subtype_2',20,'SUB_TWO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-0000000000fa",'Singleton_Glitch_Recovery',21,'SGR',' This object shall define several attributes, each to be stored in non-initialised memory for so called "glitch recovery". This is a singleton object.
',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000105",'Multiplicity_Glitch_Recovery',22,'MGR','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000110",'Active_Tagged_Many_Left',23,'ATML','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000011b",'Active_Tagged_Many_Right',24,'ATMR','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000126",'Active_Tagged_Single_Assoc',25,'ATSASSOC','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000131",'Active_Tagged_Supertype',26,'ATSUPER','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000013c",'Active_Tagged_Subtype_One',27,'ATSUBONE','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000147",'Active_Tagged_Subtype_Two',28,'ATSUBTWO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000152",'Active_Tagged_Subtype_Three',29,'ATSUBTHREE','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000015d",'Multiplicity_Single_Glitch_Recovery_Object',30,'MSGR','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000168",'A_Static_Object',31,'ASO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000173",'A_Single_Static_Object',32,'ASSO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-00000000017e",'A_Multiple_Static_Object',33,'AMSO','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_OBJ VALUES ( "00000000-0000-0000-0000-000000000189",'Just_Multiple',34,'JM','',"00000000-0000-0000-0000-000000000000" );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000034e","00000000-0000-0000-0000-000000000029","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000356","00000000-0000-0000-0000-000000000029","00000000-0000-0000-0000-00000000034e",'','','','Result',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000035f","00000000-0000-0000-0000-000000000029","00000000-0000-0000-0000-000000000356",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000045e","00000000-0000-0000-0000-000000000034","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000466","00000000-0000-0000-0000-000000000034","00000000-0000-0000-0000-00000000045e",'','','','Size',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000046c","00000000-0000-0000-0000-00000000003f","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000474","00000000-0000-0000-0000-00000000004a","00000000-0000-0000-0000-000000000000",'','','','Report_Data_Unique_id',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000047c","00000000-0000-0000-0000-00000000004a","00000000-0000-0000-0000-000000000474",'','','','Reported_Domain_Number',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000485","00000000-0000-0000-0000-000000000055","00000000-0000-0000-0000-000000000000",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000536","00000000-0000-0000-0000-000000000060","00000000-0000-0000-0000-000000000000",'','','','Number',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000053c","00000000-0000-0000-0000-000000000060","00000000-0000-0000-0000-000000000536",'',' Defines the operational environment.
','','Environment',0,"00000000-0000-0000-0000-00000000019a",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000547","00000000-0000-0000-0000-000000000060","00000000-0000-0000-0000-00000000053c",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000057f","00000000-0000-0000-0000-00000000006b","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000587","00000000-0000-0000-0000-00000000006b","00000000-0000-0000-0000-00000000057f",'','','','Result',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000591","00000000-0000-0000-0000-00000000006b","00000000-0000-0000-0000-000000000587",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000689","00000000-0000-0000-0000-000000000076","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000691","00000000-0000-0000-0000-000000000076","00000000-0000-0000-0000-000000000689",'','','','Result',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000069b","00000000-0000-0000-0000-000000000076","00000000-0000-0000-0000-000000000691",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000793","00000000-0000-0000-0000-000000000081","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-00000000008c","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000007a3","00000000-0000-0000-0000-00000000008c","00000000-0000-0000-0000-00000000079b",'','','','Attribute_One',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000007a9","00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-000000000000",'','','','Other_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000007b7","00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-000000000cd5",'','','','Attribute_Two',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000007c5","00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-0000000007bd",'','','','Attribute_One',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000007ce","00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-0000000007c5",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000811","00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-000000000cbc",'','','','Other_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000819","00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-000000000811",'','','','Attribute_Two',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000822","00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-000000000819",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000000b8","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000867","00000000-0000-0000-0000-0000000000b8","00000000-0000-0000-0000-00000000085f",'','','','Attribute_One',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000000c3","00000000-0000-0000-0000-000000000000",'','','','Other_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000875","00000000-0000-0000-0000-0000000000c3","00000000-0000-0000-0000-00000000086d",'','','','Attribute_Two',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000087b","00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-000000000000",'','','','Assoc_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000891","00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-000000000c9f",'','','','Attribute_Three',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000089f","00000000-0000-0000-0000-0000000000d9","00000000-0000-0000-0000-000000000897",'','','','Supertype_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008ad","00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-000000000c6a",'','','','Subtype_1_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008bb","00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-000000000c79",'','','','Subtype_2_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008c1","00000000-0000-0000-0000-0000000000fa","00000000-0000-0000-0000-000000000000",'','','','An_Integer',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008c7","00000000-0000-0000-0000-0000000000fa","00000000-0000-0000-0000-0000000008c1",'','','','A_Boolean',0,"ba5eda7a-def5-0000-0000-000000000001",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008cd","00000000-0000-0000-0000-0000000000fa","00000000-0000-0000-0000-0000000008c7",'','','','A_Real',0,"ba5eda7a-def5-0000-0000-000000000003",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008d3","00000000-0000-0000-0000-0000000000fa","00000000-0000-0000-0000-0000000008cd",'','','','Environment',0,"00000000-0000-0000-0000-00000000019a",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008d9","00000000-0000-0000-0000-000000000105","00000000-0000-0000-0000-000000000000",'','','','An_Integer',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008df","00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008e7","00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-0000000008df",'','','','Attribute_One',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000008f0","00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-0000000008e7",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-000000000000",'','','','Other_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000932","00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-00000000092a",'','','','Attribute_Two',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000093b","00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-000000000932",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-00000000097d","00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-000000000c4f",'','','','Attribute_Three',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000986","00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-00000000097d",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000009c8","00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-0000000009c0",'','','','Supertype_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-0000000009d1","00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-0000000009c8",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000a14","00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000c09",'','','','Subtype_One_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000a1a","00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000a14",'','','','Test_No',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000a23","00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000a1a",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000a6c","00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000c18",'','','','Subtype_Two_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000a72","00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000a6c",'','','','Test_No',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000a7b","00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000a72",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000abe","00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000c27",'','','','Subtype_Three_Data',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000ac4","00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000abe",'','','','Test_No',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000acd","00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000ac4",'','','','current_state',0,"ba5eda7a-def5-0000-0000-000000000006",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000b08","00000000-0000-0000-0000-00000000015d","00000000-0000-0000-0000-000000000000",'','','','Attribute_One',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000b0e","00000000-0000-0000-0000-00000000015d","00000000-0000-0000-0000-000000000b08",'','','','Attribute_Two',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000b14","00000000-0000-0000-0000-000000000168","00000000-0000-0000-0000-000000000000",'',' @@TAGS-V01-0003
','','Unique_ID',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000b1a","00000000-0000-0000-0000-000000000173","00000000-0000-0000-0000-000000000000",'','','','Unique_ID',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000b20","00000000-0000-0000-0000-00000000017e","00000000-0000-0000-0000-000000000000",'','','','Unique_ID',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000b26","00000000-0000-0000-0000-000000000189","00000000-0000-0000-0000-000000000000",'','','','idJM',0,"ba5eda7a-def5-0000-0000-000000000002",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c09","00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c18","00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c27","00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c4f","00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-000000000000",'','','','Assoc_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c6a","00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c79","00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c8c","00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-00000000087b",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000c9f","00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-000000000c8c",'','','','Other_Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000cbc","00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-000000000000",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ATTR VALUES ( "00000000-0000-0000-0000-000000000cd5","00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-0000000007a9",'','','','Unique_Identifier',0,"ba5eda7a-def5-0000-0000-000000000007",'','' );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000029" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000029" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000029" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000034" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000034" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000034" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000003f" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000003f" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000003f" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000055" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000055" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000055" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000060" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000060" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000060" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000076" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000076" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000076" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000081" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000081" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000081" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000097" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000097" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000097" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000e4" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000e4" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000e4" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000ef" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000ef" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000ef" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000105" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000105" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000105" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000110" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000110" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000110" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000126" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000126" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000126" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000131" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000131" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000131" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000147" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000147" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000147" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000152" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000152" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000152" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000168" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000168" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000168" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000173" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000173" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000173" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-00000000017e" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-00000000017e" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-00000000017e" );
INSERT INTO O_ID VALUES ( 0,"00000000-0000-0000-0000-000000000189" );
INSERT INTO O_ID VALUES ( 1,"00000000-0000-0000-0000-000000000189" );
INSERT INTO O_ID VALUES ( 2,"00000000-0000-0000-0000-000000000189" );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000034e","00000000-0000-0000-0000-000000000029",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000045e","00000000-0000-0000-0000-000000000034",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000046c","00000000-0000-0000-0000-00000000003f",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000474","00000000-0000-0000-0000-00000000004a",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000057f","00000000-0000-0000-0000-00000000006b",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000689","00000000-0000-0000-0000-000000000076",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000793","00000000-0000-0000-0000-000000000081",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-00000000008c",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-0000000007a9","00000000-0000-0000-0000-000000000097",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000000a2",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000811","00000000-0000-0000-0000-0000000000ad",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000000b8",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000000c3",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-0000000008df","00000000-0000-0000-0000-000000000110",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-00000000011b",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c09","00000000-0000-0000-0000-00000000013c",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c18","00000000-0000-0000-0000-000000000147",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c27","00000000-0000-0000-0000-000000000152",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c4f","00000000-0000-0000-0000-000000000126",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c6a","00000000-0000-0000-0000-0000000000e4",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c79","00000000-0000-0000-0000-0000000000ef",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c8c","00000000-0000-0000-0000-0000000000ce",0,'' );
INSERT INTO O_OIDA VALUES ( "00000000-0000-0000-0000-000000000c9f","00000000-0000-0000-0000-0000000000ce",0,'' );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000034e","00000000-0000-0000-0000-000000000029" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000356","00000000-0000-0000-0000-000000000029" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000035f","00000000-0000-0000-0000-000000000029" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000045e","00000000-0000-0000-0000-000000000034" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000466","00000000-0000-0000-0000-000000000034" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000046c","00000000-0000-0000-0000-00000000003f" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000474","00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000047c","00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000485","00000000-0000-0000-0000-000000000055" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000536","00000000-0000-0000-0000-000000000060" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000053c","00000000-0000-0000-0000-000000000060" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000547","00000000-0000-0000-0000-000000000060" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000057f","00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000587","00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000591","00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000689","00000000-0000-0000-0000-000000000076" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000691","00000000-0000-0000-0000-000000000076" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000069b","00000000-0000-0000-0000-000000000076" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000793","00000000-0000-0000-0000-000000000081" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000007a3","00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000007a9","00000000-0000-0000-0000-000000000097" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000007b7","00000000-0000-0000-0000-000000000097" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000007c5","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000007ce","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000811","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000819","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000822","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000867","00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000875","00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000087b","00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000891","00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000089f","00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008ad","00000000-0000-0000-0000-0000000000e4" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008bb","00000000-0000-0000-0000-0000000000ef" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008c1","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008c7","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008cd","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008d3","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008d9","00000000-0000-0000-0000-000000000105" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008df","00000000-0000-0000-0000-000000000110" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008e7","00000000-0000-0000-0000-000000000110" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000008f0","00000000-0000-0000-0000-000000000110" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000932","00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000093b","00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-00000000097d","00000000-0000-0000-0000-000000000126" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000986","00000000-0000-0000-0000-000000000126" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000009c8","00000000-0000-0000-0000-000000000131" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-0000000009d1","00000000-0000-0000-0000-000000000131" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000a14","00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000a1a","00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000a23","00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000a6c","00000000-0000-0000-0000-000000000147" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000a72","00000000-0000-0000-0000-000000000147" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000a7b","00000000-0000-0000-0000-000000000147" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000abe","00000000-0000-0000-0000-000000000152" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000ac4","00000000-0000-0000-0000-000000000152" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000acd","00000000-0000-0000-0000-000000000152" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000b08","00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000b0e","00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000b14","00000000-0000-0000-0000-000000000168" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000b1a","00000000-0000-0000-0000-000000000173" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000b20","00000000-0000-0000-0000-00000000017e" );
INSERT INTO O_BATTR VALUES ( "00000000-0000-0000-0000-000000000b26","00000000-0000-0000-0000-000000000189" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000034e","00000000-0000-0000-0000-000000000029" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000356","00000000-0000-0000-0000-000000000029" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000035f","00000000-0000-0000-0000-000000000029" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000045e","00000000-0000-0000-0000-000000000034" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000466","00000000-0000-0000-0000-000000000034" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000046c","00000000-0000-0000-0000-00000000003f" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000474","00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000047c","00000000-0000-0000-0000-00000000004a" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000485","00000000-0000-0000-0000-000000000055" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000536","00000000-0000-0000-0000-000000000060" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000053c","00000000-0000-0000-0000-000000000060" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000547","00000000-0000-0000-0000-000000000060" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000057f","00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000587","00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000591","00000000-0000-0000-0000-00000000006b" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000689","00000000-0000-0000-0000-000000000076" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000691","00000000-0000-0000-0000-000000000076" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000069b","00000000-0000-0000-0000-000000000076" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000793","00000000-0000-0000-0000-000000000081" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000007a3","00000000-0000-0000-0000-00000000008c" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000007a9","00000000-0000-0000-0000-000000000097" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000007b7","00000000-0000-0000-0000-000000000097" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000007c5","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000007ce","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000811","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000819","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000822","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000867","00000000-0000-0000-0000-0000000000b8" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000875","00000000-0000-0000-0000-0000000000c3" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000087b","00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000891","00000000-0000-0000-0000-0000000000ce" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000089f","00000000-0000-0000-0000-0000000000d9" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008ad","00000000-0000-0000-0000-0000000000e4" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008bb","00000000-0000-0000-0000-0000000000ef" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008c1","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008c7","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008cd","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008d3","00000000-0000-0000-0000-0000000000fa" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008d9","00000000-0000-0000-0000-000000000105" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008df","00000000-0000-0000-0000-000000000110" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008e7","00000000-0000-0000-0000-000000000110" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000008f0","00000000-0000-0000-0000-000000000110" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000932","00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000093b","00000000-0000-0000-0000-00000000011b" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-00000000097d","00000000-0000-0000-0000-000000000126" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000986","00000000-0000-0000-0000-000000000126" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000009c8","00000000-0000-0000-0000-000000000131" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-0000000009d1","00000000-0000-0000-0000-000000000131" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000a14","00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000a1a","00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000a23","00000000-0000-0000-0000-00000000013c" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000a6c","00000000-0000-0000-0000-000000000147" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000a72","00000000-0000-0000-0000-000000000147" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000a7b","00000000-0000-0000-0000-000000000147" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000abe","00000000-0000-0000-0000-000000000152" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000ac4","00000000-0000-0000-0000-000000000152" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000acd","00000000-0000-0000-0000-000000000152" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000b08","00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000b0e","00000000-0000-0000-0000-00000000015d" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000b14","00000000-0000-0000-0000-000000000168" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000b1a","00000000-0000-0000-0000-000000000173" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000b20","00000000-0000-0000-0000-00000000017e" );
INSERT INTO O_NBATTR VALUES ( "00000000-0000-0000-0000-000000000b26","00000000-0000-0000-0000-000000000189" );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c09","00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c18","00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c27","00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c4f","00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-00000000011b",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c6a","00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c79","00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c8c","00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000000b8",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000c9f","00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000000c3",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000cbc","00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000000a2",0,'' );
INSERT INTO O_RATTR VALUES ( "00000000-0000-0000-0000-000000000cd5","00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-00000000008c",0,'' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000131",0,"00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000335","00000000-0000-0000-0000-00000000032c","00000000-0000-0000-0000-000000000c09","00000000-0000-0000-0000-000000000c17","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000131",0,"00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000033e","00000000-0000-0000-0000-00000000032c","00000000-0000-0000-0000-000000000c18","00000000-0000-0000-0000-000000000c26","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000131",0,"00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000347","00000000-0000-0000-0000-00000000032c","00000000-0000-0000-0000-000000000c27","00000000-0000-0000-0000-000000000c35","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-000000000110",0,"00000000-0000-0000-0000-0000000008df","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-000000000305","00000000-0000-0000-0000-0000000002e9","00000000-0000-0000-0000-000000000c4f","00000000-0000-0000-0000-000000000c4e","00000000-0000-0000-0000-000000000c61",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-00000000011b",0,"00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-000000000305","00000000-0000-0000-0000-0000000002f2","00000000-0000-0000-0000-000000000c4f","00000000-0000-0000-0000-000000000c61","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-0000000000d9",0,"00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000317","00000000-0000-0000-0000-00000000030e","00000000-0000-0000-0000-000000000c6a","00000000-0000-0000-0000-000000000c78","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-0000000000d9",0,"00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000320","00000000-0000-0000-0000-00000000030e","00000000-0000-0000-0000-000000000c79","00000000-0000-0000-0000-000000000c87","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-0000000000b8",0,"00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002e0","00000000-0000-0000-0000-0000000002c4","00000000-0000-0000-0000-000000000c8c","00000000-0000-0000-0000-000000000c9e","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-0000000000c3",0,"00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002e0","00000000-0000-0000-0000-0000000002cd","00000000-0000-0000-0000-000000000c9f","00000000-0000-0000-0000-000000000cb1","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000000a2",0,"00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002b8","00000000-0000-0000-0000-0000000002af","00000000-0000-0000-0000-000000000cbc","00000000-0000-0000-0000-000000000cce","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_REF VALUES ( "00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-00000000008c",0,"00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-0000000002a3","00000000-0000-0000-0000-00000000029a","00000000-0000-0000-0000-000000000cd5","00000000-0000-0000-0000-000000000ce7","00000000-0000-0000-0000-000000000000",0,'','','','' );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-0000000009c0","00000000-0000-0000-0000-000000000131",0,"00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000032c" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-0000000008df","00000000-0000-0000-0000-000000000110",0,"00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002e9" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-00000000092a","00000000-0000-0000-0000-00000000011b",0,"00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002f2" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-000000000897","00000000-0000-0000-0000-0000000000d9",0,"00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-00000000030e" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-00000000085f","00000000-0000-0000-0000-0000000000b8",0,"00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002c4" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-00000000086d","00000000-0000-0000-0000-0000000000c3",0,"00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002cd" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-0000000007bd","00000000-0000-0000-0000-0000000000a2",0,"00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002af" );
INSERT INTO O_RTIDA VALUES ( "00000000-0000-0000-0000-00000000079b","00000000-0000-0000-0000-00000000008c",0,"00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-00000000029a" );
INSERT INTO O_TFR VALUES ( "00000000-0000-0000-0000-000000000542","00000000-0000-0000-0000-000000000060",'Call_Tagged_Terminators','',"ba5eda7a-def5-0000-0000-000000000000",0,'Output_From_One = 0
Input_To_One    = 99

Output_From_Two = 0
Input_To_Two    = 99

# Call Two tagged handcoded terminators in this bridge

[Output_From_One] = TT2:A_Tagged_Dummy_Terminator_One[Input_To_One]

[Output_From_Two] = TT4:A_Tagged_Dummy_Terminator_Two[Input_To_Two]

if Output_From_One = Input_To_One or \
   Output_From_Two = Input_To_Two then

   Two_Tags_Result = FALSE
else
   Two_Tags_Result = TRUE
endif
',3,'',"00000000-0000-0000-0000-000000000000",2,1 );
INSERT INTO O_TFR VALUES ( "00000000-0000-0000-0000-00000000058d","00000000-0000-0000-0000-00000000006b",'Do_Active_Single_Array_Tests',' @@TAGS-01-0004
',"ba5eda7a-def5-0000-0000-000000000000",0,'#--------------------------------------------------------------------------
# The array of 1 should be treated exactly the same way as an object tagged
# SINGLETON.
#--------------------------------------------------------------------------

# Create first of the single active array objects.

my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1 - Create first and only allowable instance of the object
#          This will be an asynchronous test.
#--------------------------------------------------------------------------

   First_Single = create unique An_Active_Array_Of_One_Object with Result = 0 & Current_State = ''Idle''

   Value_To_Add = 10
   Expected_Result_Value = 10

   generate AAAOOO1:Start(Test, Value_To_Add, "Create first object", Expected_Result_Value) to First_Single

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - This will be a synchronous test.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Single Array Active Object", "Inhibit second instance"]

   # Second_Single = create unique An_Active_Array_Of_One_Object with Result = 0 & Current_State = ''Idle''
   # {Set_Of_Single_Array} = find-all An_Active_Array_Of_One_Object
   # Number_Of_Single_Array = countof {Set_Of_Single_Array}
   # Should only be 1, but reporter widget expects a zero in the Failure field for a pass.
   # So if there are more than one instances found, this should be reported as an
   # error.
   # Failure_Value = Number_Of_Single_Array - 1
   # [] = TAGS5::Report_Now[Test, "Inhibit second instance", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Prove that the instance handle for the second instance is 
#          UNDEFINED, or in ada''s case, NULL.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Single Array Active Object", "Second instance is null"]

   # if Second_Single = UNDEFINED then
   #   Failure_Value = 0
   # else
   #   Failure_Value = 1
   #   # It isn''t supposed to be here, so get rid of it.
   #   delete Second_Single
   # endif
   # [] = TAGS5::Report_Now[Test, "Second instance is null", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   # Perform some synchronous tests as a result of this asynchronous service.

   generate AAAOOO3:Lets_Test() to First_Single
   

   # Prove that the first legal instance can be deleted and a new one created in it''s place.
   # This processing will be done when the event is unqueued. It shall effectively delete
   # First_Single instance, and create a new one and generate an event to the new instance
   # to prove that it can execute its'' state machine correctly.

   # In the wrong hands, this could turn into a recursive call. If the Phoenix event was sent to
   # the new instance in the state machine by the deleted state machine, there would be no return. 
   # Ever.

   generate AAAOOO4:Phoenix() to First_Single

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------

my_test.Number = Test
',3,'',"00000000-0000-0000-0000-000000000000",2,1 );
INSERT INTO O_TFR VALUES ( "00000000-0000-0000-0000-000000000697","00000000-0000-0000-0000-000000000076",'Do_Active_Many_Array_Tests','',"ba5eda7a-def5-0000-0000-000000000000",0,'#-----------------------------------------------------------------------------
# The array of 1 should be treated exactly the same way as an object tagged
# SINGLETON.
#-----------------------------------------------------------------------------
# @@TAGS-01-0005
# Create first of the single active array objects.

my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#-----------------------------------------------------------------------------
# Test 1 - Create first, second & third instances of the object
#          This will be an asynchronous test.
#-----------------------------------------------------------------------------

   First_Of_Three  = create unique An_Active_Array_Of_Three_Objects with Result = 0 & Current_State = ''Idle''
   Second_Of_Three = create unique An_Active_Array_Of_Three_Objects with Result = 0 & Current_State = ''Idle''
   Third_Of_Three  = create unique An_Active_Array_Of_Three_Objects with Result = 0 & Current_State = ''Idle''

   Value_To_Add = 10
   Expected_Result_Value = 10
  
   generate AAAOTO1:Start(Test, Value_To_Add, "Create first object", Expected_Result_Value) to First_Of_Three

   Test = Test + 1

# End Test 1
#-----------------------------------------------------------------------------
# Test 2
#-----------------------------------------------------------------------------

   generate AAAOTO1:Start(Test, Value_To_Add, "Create second object", Expected_Result_Value) to Second_Of_Three

   Test = Test + 1

# End Test 2

#-----------------------------------------------------------------------------
# Test 3
#-----------------------------------------------------------------------------

   generate AAAOTO1:Start(Test, Value_To_Add, "Create third object", Expected_Result_Value) to Third_Of_Three

   Test = Test + 1

# End Test 3

#-----------------------------------------------------------------------------
# Test 4 - This will be a synchronous test.
#-----------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Multiple Array Active Object", "Inhibit fourth instance"]

   # Fourth_Of_Three = create unique An_Active_Array_Of_Three_Objects with Result = 0 & Current_State = ''Idle''
   # {Set_Of_Multiple_Array} = find-all An_Active_Array_Of_Three_Objects
   # Number_Of_Multiple_Array = countof {Set_Of_Multiple_Array}
   # Should only be 3, but reporter widget expects a zero in the Failure field for a pass.
   # So if there are more than one instances found, this should be reported as an
   # error.
   # Failure_Value = Number_Of_Multiple_Array - 3
   # [] = TAGS5::Report_Now[Test, "Inhibit fourth instance", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 4

#-----------------------------------------------------------------------------
# Test 5 - Prove that the instance handle for the second instance is UNDEFINED
#          , or in ada''s case, NULL.
#-----------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Multiple Array Active Object", "Fourth instance is null"]


   # if Fourth_Of_Three = UNDEFINED then
   #   Failure_Value = 0
   # else
   #   Failure_Value = 1
   #   # It isn''t supposed to be here, so get rid of it.
   #   delete Fourth_Of_Three
   # endif
   # [] = TAGS5::Report_Now[Test, "Fourth instance is null", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

# End Test 5

#-----------------------------------------------------------------------------
# Test 6 - Perform some synchronous tests as a result of this asynchronous 
#          service.
#-----------------------------------------------------------------------------

   generate AAAOTO4:Do_More() to First_Of_Three
   generate AAAOTO4:Do_More() to Second_Of_Three
   generate AAAOTO4:Do_More() to Third_Of_Three

   # Prove that the first legal instance can be deleted and a new one created in it''s place.
   # This processing will be done when the event is unqueued. It shall effectively delete
   # First_Of_Three instance, and create a new one and generate an event to the new instance
   # to prove that it can execute its'' state machine correctly.

   # In the wrong hands, this could turn into a recursive call. If the Phoenix event was sent to
   # the new instance in the state machine by the deleted state machine, there would be no return. 
   # Ever.

   generate AAAOTO3:Phoenix() to First_Of_Three
   generate AAAOTO3:Phoenix() to Second_Of_Three
   generate AAAOTO3:Phoenix() to Third_Of_Three
 
   Test = Test + 1

# End Test 6

#-----------------------------------------------------------------------------
# Finally increment the test number to show the next available number.
#-----------------------------------------------------------------------------

my_test.Number = Test',3,'',"00000000-0000-0000-0000-000000000000",2,1 );
INSERT INTO O_TPARM VALUES ( "00000000-0000-0000-0000-000000000543","00000000-0000-0000-0000-000000000542",'Two_Tags_Result',"ba5eda7a-def5-0000-0000-000000000001",1,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000006","ba5eda7a-def5-0000-0000-000000000004",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000009","00000000-0000-0000-0000-000000000006",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000000c","00000000-0000-0000-0000-000000000006",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000000f","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000012","ba5eda7a-def5-0000-0000-000000000004",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000015","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000018","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000001b","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000001e","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000196","00000000-0000-0000-0000-000000000006",0,'integer' );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000002","00000000-0000-0000-0000-000000000002",'types','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000002","00000000-0000-0000-0000-000000000002",'TAGS','masl_domain',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'TAGS','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'Shared','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000194","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'types','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'functions','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'scenarios','',0 );
INSERT INTO S_EDT VALUES ( "00000000-0000-0000-0000-00000000019a" );
INSERT INTO S_ENUM VALUES ( "00000000-0000-0000-0000-00000000019d",'WACA','',"00000000-0000-0000-0000-00000000019a","00000000-0000-0000-0000-000000000000" );
INSERT INTO S_ENUM VALUES ( "00000000-0000-0000-0000-00000000019e",'ISIM','',"00000000-0000-0000-0000-00000000019a","00000000-0000-0000-0000-00000000019d" );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001a2","00000000-0000-0000-0000-000000000000",'Perform_Unique_Passive_Singleton_Object_Tests','','# A_Passive_Static_Object should be tagged as SINGLETON.
# ie. it should only be created once.


Local_Test = Test

Failure_Code = 0

My_Test_Data = find-one Test_Data

if My_Test_Data.Environment = ''WACA'' then
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton UNIQUE passive object", "Create one singleton instances"]

   The_Passive_Object = create unique A_Passive_Static_Object with Size = 1

   # Further attempts to create an object of this sort should be met with
   # complete indifference by WACA.

   # Another_Passive_Object = create A_Passive_Static_Object with Size = 2 & Unique_Identifier = 2

   if The_Passive_Object      = UNDEFINED then
      # Test Failed
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Create one singleton instance", Failure_Code, Supported]

   Local_Test = Local_Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "Null Requid", "TAGGING", "Singleton UNIQUE passive object", "Create another singleton instances"]

   # Creation of another singleton object will cause unpredictable actions by WACA, therefor this
   # test is unsupported for the moment.

   # Another_Passive_Object = create A_Passive_Static_Object with Size = 2 & Unique_Identifier = 2


   [] = RPT4:Test_Unsupported[Local_Test]

   Local_Test = Local_Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton UNIQUE passive object", "How many"]

   # A SINGLETON object is still around from previous test.
   # Check to see if the attempt to create another one has
   # messed up the set information.
 
   {Set_of_Singletons} = find-all A_Passive_Static_Object

   How_Many = countof {Set_of_Singletons}

   if How_Many != 1 then 
      Failure_Code = How_Many
   endif

   [] = TAGS5::Report_Now[Local_Test, "How many", Failure_Code, Supported]

   Local_Test = Local_Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton UNIQUE passive object", "Delete passive object"]

   # Now let''s try and delete the object

   delete The_Passive_Object

   {Set_of_Singletons} = find-all A_Passive_Static_Object

   How_Many = countof {Set_of_Singletons}

   if How_Many != 0 then 
      Failure_Code = How_Many
   endif

   [] = TAGS5::Report_Now[Local_Test, "Delete passive object", Failure_Code, Supported]

   Local_Test = Local_Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton UNIQUE passive object", "Create new passive object"]

   # Having sucessfully deleted the passive static object
   # let''s make the attempt to create a new one

   A_New_Passive_Object = create unique A_Passive_Static_Object with Size = 3

   if A_New_Passive_Object = UNDEFINED then
      # Test Failed
      Failure_Code = -4
   endif

   [] = TAGS5::Report_Now[Local_Test, "Create new passive object", Failure_Code, Supported]

   Local_Test = Local_Test + 1

   Failure_Code = 0

# End Test 5


#--------------------------------------------------------------------------
# Test 6
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "Null Requid", "TAGGING", "Singleton UNIQUE passive object", "Delete all passive objects"]

   # Tidy up here.
   if A_New_Passive_Object != UNDEFINED then
      delete A_New_Passive_Object
   endif

   if The_Passive_Object != UNDEFINED then
      delete The_Passive_Object
   endif

   {Set_of_Singletons} = find-all A_Passive_Static_Object

   How_Many = countof {Set_of_Singletons}

   if How_Many != 0 then 
      Failure_Code = How_Many
   endif

   [] = TAGS5::Report_Now[Local_Test, "Delete all passive objects", Failure_Code, Supported]

# End Test 6

#--------------------------------------------------------------------------

Returned_Test_Number = Local_Test


',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,1 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001af","00000000-0000-0000-0000-000000000000",'Create_Report_Data','','# Find out if there already is one of these.
# It is not inconceivable that a report object still exists from a previous run.
# Report objects are not deleted at the end of a run, as certain events may
# still be en-queued.

old_report = find-one Report_Data

if old_report != UNDEFINED then
   delete old_report
endif

My_Report = create unique Report_Data with Reported_Domain_Number = 0

[] = RPT6:Domain_Test_Start["TAGGING"]
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,2 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001b3","00000000-0000-0000-0000-000000000000",'Delete_Report_Domain','','This_Report = find-one Report_Data

if This_Report != UNDEFINED then
   This_Domain_Identifier = This_Report.Reported_Domain_Number
else
   This_Domain_Identifier = -1
endif

[] = RPT7:Domain_Test_Finished["TAGGING", This_Domain_Identifier]

# There are no events en-queued in this domain.

# Events are not tagged currently, or at least there is no call to do, yet.

if This_Domain_Identifier != -1 then
   delete This_Report
endif',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,3 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001b7","00000000-0000-0000-0000-000000000000",'Perform_Passive_Singleton_Object_Tests','','#--------------------------------------------------------------------------
# A_Passive_Static_Object should be tagged as SINGLETON.
# ie. it should only be created once.
#--------------------------------------------------------------------------

Local_Test = Test

Failure_Code = 0

My_Test_Data = find-one Test_Data

if My_Test_Data.Environment = ''WACA'' then
   Supported = TRUE
else
   Supported = FALSE
endif


#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton passive object", "Create one singleton instance"]

   The_Passive_Object = create A_Passive_Static_Object with  Unique_Identifier = 5 & Size = 1

   # Further attempts to create an object of this sort should be met with
   # complete indifference by WACA.

   # Another_Passive_Object = create A_Passive_Static_Object with Unique_Identifier = 6 & Size = 2

   if The_Passive_Object = UNDEFINED then
      Failure_Code = -5
   endif

   [] = TAGS5::Report_Now[Test, "Create one singleton instance", Failure_Code, Supported]

   Local_Test = Local_Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "Null Requid", "TAGGING", "Singleton passive object", "Create another singleton instance"]

   #Another_Passive_Object = create A_Passive_Static_Object with Unique_Identifier = 6 & Size = 2

   [] = RPT4:Test_Unsupported[Local_Test]

   Local_Test = Local_Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton passive object", "How many"]

   # A SINGLETON object is still around from previous test.
   # Check to see if the attempt to create another one has
   # messed up the set information.

   {Set_of_Singletons} = find-all A_Passive_Static_Object

   How_Many = countof {Set_of_Singletons}

   if How_Many != 1 then 
      Failure_Code = How_Many
   endif

   [] = TAGS5::Report_Now[Local_Test, "How many", Failure_Code, Supported]

   Local_Test = Local_Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton passive object", "Delete passive object"]

   # Now let''s try and delete the object
   delete The_Passive_Object

   {Set_of_Singletons} = find-all A_Passive_Static_Object

   How_Many = countof {Set_of_Singletons}

   if How_Many != 0 then 
      Failure_Code = How_Many
   endif

   [] = TAGS5::Report_Now[Local_Test, "Delete passive object", Failure_Code, Supported]

   Local_Test = Local_Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "1241-0000-01-0128", "TAGGING", "Singleton passive object", "Create new passive object"]

   # Having sucessfully deleted the passive static object
   # let''s make the attempt to create a new one
   A_New_Passive_Object = create A_Passive_Static_Object with Unique_Identifier = 8 & Size = 3

   if A_New_Passive_Object = UNDEFINED then
      Failure_Code = -8
   endif

   [] = TAGS5::Report_Now[Local_Test, "Create new passive object", Failure_Code, Supported]

   Local_Test = Local_Test + 1

   Failure_Code = 0

# End Test 5

#--------------------------------------------------------------------------
# Test 6
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Local_Test, "Null Requid", "TAGGING", "Singleton passive object", "Delete all passive objects"]

   # Tidy up here.
   if A_New_Passive_Object != UNDEFINED then
      delete A_New_Passive_Object
   endif

   if The_Passive_Object != UNDEFINED then
      delete The_Passive_Object
   endif

   {Set_of_Singletons} = find-all A_Passive_Static_Object

   How_Many = countof {Set_of_Singletons}

   if How_Many != 0 then 
      Failure_Code = How_Many
   endif

   [] = TAGS5::Report_Now[Local_Test, "Delete all passive objects", Failure_Code, Supported]

# End Test 6

#--------------------------------------------------------------------------

Returned_Test_Number = Local_Test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,4 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001bf","00000000-0000-0000-0000-000000000000",'Report_Now',' Test requirement Tag
 @@TAGS-01-0001
','if Failure = 0 then
   [] = RPT2:Test_Passed[Testing_For, Test_Number, Failure]
else

   if It_Is_Supported then
      [] = RPT3:Test_Failed[Testing_For, Test_Number, Failure]
   else
      [] = RPT4:Test_Unsupported[Test_Number]
   endif

endif
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,5 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001cb","00000000-0000-0000-0000-000000000000",'Set_Environment',' C insert to set attribute for I-SIM
 operation
','Local_Input = Input_Test_Data

# Call terminator bridge
[Environment_Variable] = ET2:Env_Number[]

Local_Input.Number = Environment_Variable

Output_Test_Data = Local_Input
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,6 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001d3","00000000-0000-0000-0000-000000000000",'Perform_Passive_Array_of_3_Objects_Tests','','
Test_Has_Passed  = FALSE
Failure_Code = -1

Test = Start_Test_Number

#--------------------------------------------------------------------------
# Test 1 - Create three passive data objects
#--------------------------------------------------------------------------

   count = 1
   loop
      Obj = create unique A_Passive_Array_Of_Three_Objects 
      breakif count = 3
      count = count + 1
   endloop

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Passive Array 3 UNIQUE object", "Create three"]

   # Return count of A_Passive_Array_Of_Three_Objects
   {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects

   total_count = countof {set_of_objects}

   if total_count = 3 then
      Test_Has_Passed  = TRUE
      Failure_Code = 0
   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Create three", Failure_Code, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Passive Array 3 UNIQUE object", "Delete one"]

   # Delete 1 of passive objects

   Any_Object = find-one A_Passive_Array_Of_Three_Objects

   delete Any_Object

   {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects
   total_count = countof {set_of_objects}

   if total_count = 2 then
      Test_Has_Passed  = TRUE
      Failure_Code = 0
   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Create three", Failure_Code, Supported]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Create extra passive object, total of three
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Passive Array 3 UNIQUE object", "Create one more"]

   replacement_object = create unique A_Passive_Array_Of_Three_Objects

   # Return count of A_Passive_Array_Of_Three_Objects
   {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects

   total_count = countof {set_of_objects}

   if total_count = 3 then
      Test_Has_Passed  = TRUE
      Failure_Code = 0
   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Create three", Failure_Code, Supported]

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4 - Attempt to create fourth object
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 3 UNIQUE object", "Create illegal object"]

   # Unsupported

   # illegal_object = create unique A_Passive_Array_Of_Three_Objects
   # Return count of A_Passive_Array_Of_Three_Objects
   # {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects
   # total_count = countof {set_of_objects}
   # Check for null
   # if illegal_object = UNDEFINED then 
   #   if total_count = 3 then
   #      Test_Has_Passed  = TRUE
   #      Failure_Code = 0
   #   else
   #      Test_Has_Passed  = FALSE
   #      Failure_Code = -1
   #   endif
   # else
   #   Test_Has_Passed = FALSE
   #   Failure_Code = -2
   # endif
   # [] = TAGS5::Report_Now[Test, "Create illegal object", Failure_Code, Supported]
 
   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5 - Attempt to delete all objects
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Passive Array 3 UNIQUE object", "Delete all objects"]

   # Return count of A_Passive_Array_Of_Three_Objects

   {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects
   total_count = countof {set_of_objects}

   if total_count = 3 then
      # Delete all objects
      for each_object in {set_of_objects} do
         delete each_object
      endfor

      {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects
      total_count = countof {set_of_objects}

      if total_count = 0 then
         new_object = create unique A_Passive_Array_Of_Three_Objects

         # Check that it is defined
         if new_object != UNDEFINED then
            {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects
            total_count = countof {set_of_objects}

            # and only one now exists
            if total_count = 1 then 
               Test_Has_Passed = TRUE
               Failure_Code = 0
            else
               Test_Has_Passed = FALSE
               Failure_Code = -4
            endif

         else
            Test_Has_Passed = FALSE
            Failure_Code = -3
         endif

      else
         Test_Has_Passed = FALSE
         Failure_Code = -2
      endif

   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Delete all objects", Failure_Code, Supported]

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------
# Test 6
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 3 UNIQUE object", "Delete final object"]

   # This won''t exist if the previous test failed due to it being unsupported.
   if Supported and Test_Has_Passed then
      # Delete new object, leaving none.
      # But only if the previous test worked and was supposed to.
      delete new_object
      {set_of_objects} = find-all A_Passive_Array_Of_Three_Objects
      total_count = countof {set_of_objects}

      # None exist
      if total_count = 0 then 
         Test_Has_Passed = TRUE
         Failure_Code = 0
      else
         Test_Has_Passed = FALSE
         Failure_Code = total_count
      endif

   else
      Test_Has_Passed = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Delete final object", Failure_Code, Supported]

# End Test 6

#--------------------------------------------------------------------------

Final_Test_Number = Test
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,7 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001dd","00000000-0000-0000-0000-000000000000",'Perform_Passive_Array_of_1_Object_Tests','','Test_Has_Passed  = FALSE
Failure_Code = -1

Test = Start_Test_Number

#--------------------------------------------------------------------------
# Test 1 - Create one passive data object
#--------------------------------------------------------------------------

   Obj = create unique A_Passive_Array_Of_One_Object
 
   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 1 UNIQUE object", "Create one"]

   # Return count of A_Passive_Array_Of_One_Object
   {set_of_objects} = find-all A_Passive_Array_Of_One_Object
   total_count = countof {set_of_objects}

   if total_count = 1 then
      Test_Has_Passed  = TRUE
      Failure_Code = 0
   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Create one", Failure_Code, Supported]

   Test = Test + 1

# Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 1 UNIQUE object", "Delete one"]

   # Delete 1 of passive objects
   Any_Object = find-one A_Passive_Array_Of_One_Object
   delete Any_Object

   {set_of_objects} = find-all A_Passive_Array_Of_One_Object
   total_count = countof {set_of_objects}

   if total_count = 0 then
      Test_Has_Passed  = TRUE
      Failure_Code = 0
   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Delete one", Failure_Code, Supported]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Create extra passive object, total of one
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 1 UNIQUE object", "Create one more"]

   replacement_object = create unique A_Passive_Array_Of_One_Object

   # Return count of A_Passive_Array_Of_One_Object

   {set_of_objects} = find-all A_Passive_Array_Of_One_Object
   total_count = countof {set_of_objects}

   if total_count = 1 then
      Test_Has_Passed  = TRUE
      Failure_Code = 0
   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Create one more",  Failure_Code, Supported]

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4 - Attempt to create second object
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 1 UNIQUE object", "Create illegal object"]

   # illegal_object = create unique A_Passive_Array_Of_One_Object
   # Return count of A_Passive_Array_Of_One_Object
   # {set_of_objects} = find-all A_Passive_Array_Of_One_Object
   # total_count = countof {set_of_objects}
   # Check for null
   # if illegal_object = UNDEFINED then 
   #   if total_count = 1 then
   #      Test_Has_Passed  = TRUE
   #      Failure_Code = 0
   #   else
   #      Test_Has_Passed  = FALSE
   #      Failure_Code = -1
   #   endif
   # else
   #   Test_Has_Passed = FALSE
   #   Failure_Code = -2
   # endif
   # [] = TAGS5::Report_Now[Test, "Create illegal object", Failure_Code, Supported]

   [] = RPT4:Test_Unsupported[Test]
 
   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 1 UNIQUE object", "Delete all objects"]

   # Return count of A_Passive_Array_Of_One_Object

   {set_of_objects} = find-all A_Passive_Array_Of_One_Object
   total_count = countof {set_of_objects}

   if total_count = 1 then

      for each_object in {set_of_objects} do
         delete each_object
      endfor

      {set_of_objects} = find-all A_Passive_Array_Of_One_Object
      total_count = countof {set_of_objects}

      if total_count = 0 then
         new_object = create unique A_Passive_Array_Of_One_Object

         # Check that it is defined
         if new_object != UNDEFINED then
            {set_of_objects} = find-all A_Passive_Array_Of_One_Object
            total_count = countof {set_of_objects}

            # and only one now exists
            if total_count = 1 then 
               Test_Has_Passed = TRUE
               Failure_Code = 0
            else
               Test_Has_Passed = FALSE
               Failure_Code = -4
            endif

         else
            Test_Has_Passed = FALSE
            Failure_Code = -3
         endif

      else
         Test_Has_Passed = FALSE
         Failure_Code = -2
      endif

   else
      Test_Has_Passed  = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Delete all objects", Failure_Code, Supported]

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------
# Test 6
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "TAGGING", "Passive Array 1 UNIQUE object", "Delete final object"]

   # This won''t exist if the previous test failed due to it being unsupported.
   if Supported and Test_Has_Passed then
      delete new_object

      {set_of_objects} = find-all A_Passive_Array_Of_One_Object
      total_count = countof {set_of_objects}

      if total_count = 0 then 
         Test_Has_Passed = TRUE
         Failure_Code = 0
      else
         Test_Has_Passed = FALSE
         Failure_Code = -2
      endif

   else
      Test_Has_Passed = FALSE
      Failure_Code = -1
   endif

   [] = TAGS5::Report_Now[Test, "Delete final object", Failure_Code, Supported]

# End Test 6

#--------------------------------------------------------------------------

Final_Test_Number = Test
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,8 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001e7","00000000-0000-0000-0000-000000000000",'Perform_One_To_Many_Tests','','# @@TAGS-01-0002

my_test = find-one Test_Data

Test = my_test.Number

Supported = FALSE

if my_test.Environment = ''WACA'' then
   Supported = TRUE
endif

Single_Tag     = create unique Single_Tagged_Object with Attribute_One = Test
First_Of_Many  = create unique Many_Tagged_Objects  with Attribute_Two = Test
Second_Of_Many = create unique Many_Tagged_Objects  with Attribute_Two = Test
Third_Of_Many  = create unique Many_Tagged_Objects  with Attribute_Two = Test


link Single_Tag R1 First_Of_Many
link Single_Tag R1 Second_Of_Many
link Single_Tag R1 Third_Of_Many

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Create three"]

   {Set_Of_Many} = Single_Tag -> R1.Many_Tagged_Objects

   How_Many = countof {Set_Of_Many}

   Failure_Value = How_Many - 3

   [] = TAGS5::Report_Now[Test, "Create three", Failure_Value, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Relationships", "Create one more"]

   # Create one more ih of Many_Tagged_Objects. 

   #Fourth_Of_Many  = create unique Many_Tagged_Objects  with Attribute_Two = Test

   #if Fourth_Of_Many = UNDEFINED then
   #   Failure_Value = 0
   #else
   #   Failure_Value = 1
   #   delete Fourth_Of_Many
   #endif

   #[] = TAGS5::Report_Now[Test, "Create one more", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Unlink one of three, and check that the navigation now returns 
#          two instances.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Unlink one & navigate"]

   # NB. Unlinked only, not deleted.
   unlink First_Of_Many R1 Single_Tag

   {Set_Of_Many} = Single_Tag -> R1.Many_Tagged_Objects

   How_Many_Navigation = countof {Set_Of_Many}

   Failure_Value = How_Many_Navigation - 2

   [] = TAGS5::Report_Now[Test, "Unlink one & navigate", Failure_Value, Supported]

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4 - Unlink one of three, and check that the FIND-ALL still returns 
#          three instances.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Unlink & find-all "]

   # NB. Unlinked only, not deleted.
   {Find_Many} = find-all Many_Tagged_Objects

   How_Many_Find = countof {Find_Many}
   Failure_Value = How_Many_Find - 3

   [] = TAGS5::Report_Now[Test, "Unlink & find-all", Failure_Value, Supported]

   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5 - Just because First_Of_Many has been unlinked, there still should 
#          be a restriction on the number created. So let''s try it.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Relationships", "Create one more"]

   #Fourth_Of_Many = create unique Many_Tagged_Objects  with Attribute_Two = Test

   #if Fourth_Of_Many = UNDEFINED then
   #   Failure_Value = 0
   #else
   #   Failure_Value = 1
   #   delete Fourth_Of_Many
   #endif

   #[] = TAGS5::Report_Now[Test, "Create one more", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------
# Test 6 - Now delete First_Of_Many and FIND-ALL on set.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Delete First instance & find"]

   delete First_Of_Many
   {Find_Many} = find-all Many_Tagged_Objects
   How_Many_Find = countof {Find_Many}

   Failure_Value = How_Many_Find - 2

   [] = TAGS5::Report_Now[Test, "Delete First instance & find", Failure_Value, Supported]

   Test = Test + 1

# End Test 6

#--------------------------------------------------------------------------
# Test 7 - Perform Navigation to set 
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Delete First instance & Navigate"]

   {Set_Of_Many} = Single_Tag -> R1.Many_Tagged_Objects

   How_Many_Navigation = countof {Set_Of_Many}

   Failure_Value = How_Many_Navigation - 2

   [] = TAGS5::Report_Now[Test, "Delete First instance & navigate", Failure_Value, Supported]

   Test = Test + 1

# End Test 7

#--------------------------------------------------------------------------
# Test 8 - ...and then create a replacement.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Replace deleted instance"]

   Replacement_First_Of_Many = create unique Many_Tagged_Objects  with Attribute_Two = Test

   if Replacement_First_Of_Many = UNDEFINED then
      Failure_Value = 1
   else
      link Single_Tag R1 Replacement_First_Of_Many

      {Find_Many} = find-all Many_Tagged_Objects
 
      How_Many_Find = countof {Find_Many}

      {Set_Of_Many} = Single_Tag -> R1.Many_Tagged_Objects

      How_Many_Navigation = countof {Set_Of_Many}

      # Magic number six arrived at :
      # Two sets of three instances expected, hence six.
      Failure_Value = (How_Many_Find + How_Many_Navigation) - 6
   endif

   [] = TAGS5::Report_Now[Test, "Replace deleted instance", Failure_Value, Supported]
  
   Test = Test + 1

# End Test 8

#--------------------------------------------------------------------------
# Test 9 - Tidy up and finish.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "1 to M Relationships", "Unlink and delete all"]

   for each_instance in {Set_Of_Many} do
      # Make sure that each instance is currently linked to the single instance
      # and then unlink it.

      # This is a navigate from an instance to the single instance end of the one to many
      # relationship.

      # There is a formalised relationship between this instance and the single end.
      # Get rid of it.
      unlink Single_Tag R1 each_instance

      delete each_instance
   endfor

   {Remaining} = Single_Tag -> R1.Many_Tagged_Objects

   How_Many_Remaining = countof {Remaining}

   if How_Many_Remaining = 0 then
      delete Single_Tag
   else
      [] = RPT5:Test_Text[How_Many_Remaining, "Still left linked"]
   endif

   {Find_Many} = find-all Many_Tagged_Objects
   {Find_Single} = find-all Single_Tagged_Object

   How_Many_Find   = countof {Find_Many}
   How_Single_Find = countof {Find_Single}

   # Should be zero.
   Failure_Value = How_Many_Find + How_Single_Find

   [] = TAGS5::Report_Now[Test, "Unlink and delete all", Failure_Value, Supported]

Test = Test + 1

# End Test 9

#--------------------------------------------------------------------------

my_test.Number = Test
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,9 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001eb","00000000-0000-0000-0000-000000000000",'Perform_Active_One_To_Many_Tests','','my_test = find-one Test_Data

Test = my_test.Number

Supported = FALSE

if my_test.Environment = ''WACA'' then
   Supported = TRUE
endif

Single_Tag     = create unique Active_Tagged_Single_Object with Attribute_One = Test & Current_State = ''Idle''
First_Of_Many  = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test & Current_State = ''Idle''
Second_Of_Many = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test & Current_State = ''Idle''
Third_Of_Many  = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test & Current_State = ''Idle''

link First_Of_Many  R2 Single_Tag
link Second_Of_Many R2 Single_Tag
link Third_Of_Many  R2 Single_Tag

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Create three"]

   {Set_Of_Many} = Single_Tag -> R2.Active_Tagged_Many_Objects

   How_Many = countof {Set_Of_Many}

   Failure_Value = How_Many - 3

   [] = TAGS5::Report_Now[Test, "Create three", Failure_Value, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Create one more"]

   # Create one more ih of Many_Tagged_Objects. 

   #Fourth_Of_Many  = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test & Current_State = ''Idle''

   #if Fourth_Of_Many = UNDEFINED then
   #   Failure_Value = 0
   #else
   #   Failure_Value = 1
   #   delete Fourth_Of_Many
   #endif

   #[] = TAGS5::Report_Now[Test, "Create one more", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Unlink one of three, and check that the navigation now returns 
#          two instances.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Unlink one & navigate"]

   unlink First_Of_Many R2 Single_Tag

   {Set_Of_Many} = Single_Tag -> R2.Active_Tagged_Many_Objects

   How_Many_Navigation = countof {Set_Of_Many}

   Failure_Value = How_Many_Navigation - 2

   [] = TAGS5::Report_Now[Test, "Unlink one & navigate", Failure_Value, Supported]

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4 - Unlink one of three, and check that the FIND-ALL still returns 
#          three instances.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Unlink & find-all "]

   {Find_Many} = find-all Active_Tagged_Many_Objects

   How_Many_Find = countof {Find_Many}

   Failure_Value = How_Many_Find - 3

   [] = TAGS5::Report_Now[Test, "Unlink & find-all", Failure_Value, Supported]

   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5 - Just because First_Of_Many has been unlinked, there still should 
#          be a restriction on the number created. So let''s try it.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Create one more"]

   #Fourth_Of_Many = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test  & Current_State = ''Idle''

   #if Fourth_Of_Many = UNDEFINED then
   #   Failure_Value = 0
   #else
   #   Failure_Value = 1
   #   delete Fourth_Of_Many
   #endif

   #[] = TAGS5::Report_Now[Test, "Create one more", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------
# Test 6 - Now delete First_Of_Many and FIND-ALL on set.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Delete First instance & find"]

   delete First_Of_Many

   {Find_Many} = find-all Active_Tagged_Many_Objects

   How_Many_Find = countof {Find_Many}

   Failure_Value = How_Many_Find - 2

   [] = TAGS5::Report_Now[Test, "Delete First instance & find", Failure_Value, Supported]

   Test = Test + 1

# End Test 6

#--------------------------------------------------------------------------
# Test 7 - Perform Navigation to set 
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Delete First instance & Navigate"]

   {Set_Of_Many} = Single_Tag -> R2.Active_Tagged_Many_Objects

   How_Many_Navigation = countof {Set_Of_Many}

   Failure_Value = How_Many_Navigation - 2

   [] = TAGS5::Report_Now[Test, "Delete First instance & navigate", Failure_Value, Supported]

   Test = Test + 1

# End Test 7

#--------------------------------------------------------------------------
# Test 8 - ...and then create a replacement.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Replace deleted instance"]

   Replacement_First_Of_Many = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test & Current_State = ''Idle''

   if Replacement_First_Of_Many = UNDEFINED then
      Failure_Value = 1
   else
      link Single_Tag R2 Replacement_First_Of_Many

      {Find_Many} = find-all Active_Tagged_Many_Objects

      How_Many_Find = countof {Find_Many}

      {Set_Of_Many} = Single_Tag -> R2.Active_Tagged_Many_Objects

      How_Many_Navigation = countof {Set_Of_Many}
 
      # Magic number six arrived at :
      # Two sets of three instances expected, hence six.
      Failure_Value = (How_Many_Find + How_Many_Navigation) - 6
   endif

   [] = TAGS5::Report_Now[Test, "Replace deleted instance", Failure_Value, Supported]

   Test = Test + 1

# End Test 8

#--------------------------------------------------------------------------
# Test 9 - Tidy up and finish.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "1 to M Active Relationships", "Unlink and delete all"]

   for each_instance in {Set_Of_Many} do

      # Make sure that each instance is currently linked to the single instance
      # and then unlink it.

      # This is a navigate from an instance to the single instance end of the one to many
      # relationship.

      # There is a formalised relationship between this instance and the single end.
      # Get rid of it.
      unlink Single_Tag R2 each_instance

      delete each_instance

   endfor

   {Remaining} = Single_Tag -> R2.Active_Tagged_Many_Objects

   How_Many_Remaining = countof {Remaining}

   if How_Many_Remaining = 0 then
      delete Single_Tag
   else
      [] = RPT5:Test_Text[How_Many_Remaining, "Still left linked"]
   endif

   {Find_Many} = find-all Active_Tagged_Many_Objects
   {Find_Single} = find-all Active_Tagged_Single_Object

   How_Many_Find   = countof {Find_Many}
   How_Single_Find = countof {Find_Single}

   # Should be zero.
   Failure_Value = How_Many_Find + How_Single_Find

   [] = TAGS5::Report_Now[Test, "Unlink and delete all", Failure_Value, Supported]

   Test = Test + 1

# End Test 9

#--------------------------------------------------------------------------
# Test 10 - Prove that the active object can be generated to
#--------------------------------------------------------------------------

   Active_Single_End = create unique Active_Tagged_Single_Object with Attribute_One = Test & Current_State = ''Idle''
   Active_Many_End_1 = create unique Active_Tagged_Many_Objects  with Attribute_Two = Test & Current_State = ''Idle''

   link Active_Single_End R2 Active_Many_End_1

   generate ATSO1:Run(Test) to Active_Single_End

   Test = Test + 1

# End Test 10 

#--------------------------------------------------------------------------
# Test 11 - Prove that the other end can still be generated to, too!
#--------------------------------------------------------------------------

   generate ATMO1:Go(Test) to Active_Many_End_1

   Test = Test + 1

# End Test 11

#--------------------------------------------------------------------------

my_test.Number = Test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,10 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001ef","00000000-0000-0000-0000-000000000000",'Perform_Passive_Many_To_Many_Tests','','
my_test = find-one Test_Data

Test = my_test.Number
Failure_Value = 0

Supported = TRUE

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   Left_One      = create unique Tagged_Many_Left  with Attribute_One   = Test
   Right_One     = create unique Tagged_Many_Right with Attribute_Two   = Test
   Assoc_One_One = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_One R3 Right_One using Assoc_One_One

   # navigate to prove link

   {Set_Of_Right} = Left_One -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 1

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Create first three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   Left_Two      = create unique Tagged_Many_Left  with Attribute_One   = Test
   Right_Two     = create unique Tagged_Many_Right with Attribute_Two   = Test
   Assoc_Two_Two = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_Two R3 Right_Two using Assoc_Two_Two

   # navigate to prove link

   {Set_Of_Right} = Left_Two -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 1

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Create second three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   Left_Three      = create unique Tagged_Many_Left  with Attribute_One   = Test
   Right_Three     = create unique Tagged_Many_Right with Attribute_Two   = Test
   Assoc_Three_Three = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_Three R3 Right_Three using Assoc_Three_Three

   # navigate to prove link
   {Set_Of_Right} = Left_Three -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 1

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Create third three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4
#--------------------------------------------------------------------------

   Assoc_One_Two = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_One R3 Right_Two using Assoc_One_Two

   # navigate to prove link
   {Set_Of_Right} = Left_One -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 2

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Link one to two via three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   Assoc_One_Three = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_One R3 Right_Three using Assoc_One_Three

   # navigate to prove link
   {Set_Of_Right} = Left_One -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 3

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Link one to three "]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------
# Test 6 
#--------------------------------------------------------------------------

   Assoc_Two_One = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_Two R3 Right_One using Assoc_Two_One

   # navigate to prove link
   {Set_Of_Right} = Left_Two -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 2

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Link two to one"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]
  
   Test = Test + 1

# End Test 6 

#--------------------------------------------------------------------------
# Test 7
#--------------------------------------------------------------------------

   Assoc_Two_Three = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_Two R3 Right_Three using Assoc_Two_Three

   # navigate to prove link
   {Set_Of_Right} = Left_Two -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 3

   Failure_Value = Number_In_Set - Expected_Number
   
   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Link two to three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 7

#--------------------------------------------------------------------------
# Test 8 
#--------------------------------------------------------------------------

   Assoc_Three_One = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_Three R3 Right_One using Assoc_Three_One

   # navigate to prove link
   {Set_Of_Right} = Left_Three -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 2

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Link three to one"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

#--------------------------------------------------------------------------
# Test 9 
#--------------------------------------------------------------------------

   Assoc_Three_Two = create Tagged_Single_Assoc with Attribute_Three = Test

   link Left_Three R3 Right_Two using Assoc_Three_Two

   # navigate to prove link
   {Set_Of_Right} = Left_Three -> R3.Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 3

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Passive Relationships", "Link three to two"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

#--------------------------------------------------------------------------

my_test.Number = Test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,11 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001f3","00000000-0000-0000-0000-000000000000",'Perform_Passive_Super_Sub_Tests','','my_test = find-one Test_Data

this_test = my_test.Number

supported = TRUE

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Passive Super Sub types", "One Super Sub relationship"]

   # Create one of one super type objects
   Super1 = create unique Tagged_Many_Supertype with Supertype_Data = this_test

   #create one of two sub type 1 objects
   Sub1_1 = create Subtype_1 with Subtype_1_Data = this_test 

   link Super1 R4 Sub1_1

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub1 = Super1 -> R4.Subtype_1

   failure_value = view_of_sub1.Subtype_1_Data - Super1.Supertype_Data

   [] = TAGS5::Report_Now[this_test, "One Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Passive Super Sub types", "Other Super Sub relationship"]

   # Create second of two sub type 1 objects
   Sub1_2 = create Subtype_1 with Subtype_1_Data = this_test

   # unlink first sub type from super type
   unlink Super1 R4 Sub1_1

   # Update super 1 data
   Super1.Supertype_Data = this_test

   #link second subtype to supertype
   link Super1 R4 Sub1_2

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub1 = Super1 -> R4.Subtype_1

   failure_value = view_of_sub1.Subtype_1_Data - Super1.Supertype_Data

   [] = TAGS5::Report_Now[this_test, "Other Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Passive Super Sub types", "Migrate Super Sub relationship"]

   # Create sub type 2 object
   Sub2 = create Subtype_2 with Subtype_2_Data = this_test

   # unlink first sub type from super type
   unlink Super1 R4 Sub1_2

   # Update super 1 data
   Super1.Supertype_Data = this_test

   #link second subtype to supertype
   link Super1 R4 Sub2

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub2 = Super1 -> R4.Subtype_2

   failure_value = view_of_sub2.Subtype_2_Data - Super1.Supertype_Data

   [] = TAGS5::Report_Now[this_test, "Migrate Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

# End Test 3

#--------------------------------------------------------------------------

my_test.Number = this_test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,12 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001f7","00000000-0000-0000-0000-000000000000",'Perform_Active_Many_To_Many_Tests','','my_test = find-one Test_Data

Test = my_test.Number
Failure_Value = 0

Supported = TRUE

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   Left_One      = create unique Active_Tagged_Many_Left  with Attribute_One   = Test & Current_State = ''Idle''
   Right_One     = create unique Active_Tagged_Many_Right with Attribute_Two   = Test & Current_State = ''Idle''
   Assoc_One_One = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_One R5 Right_One using Assoc_One_One

   # navigate to prove link
   {Set_Of_Right} = Left_One -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 1

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Create first three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   generate ATML1:Go(Test) to Left_One

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   generate ATMR1:Go(Test) to Right_One

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_One_One

   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   Left_Two      = create unique Active_Tagged_Many_Left  with Attribute_One   = Test & Current_State = ''Idle''
   Right_Two     = create unique Active_Tagged_Many_Right with Attribute_Two   = Test & Current_State = ''Idle''
   Assoc_Two_Two = create  Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''
 
   link Left_Two R5 Right_Two using Assoc_Two_Two

   # navigate to prove link
   {Set_Of_Right} = Left_Two -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 1

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Create second three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------
# Test 6 
#--------------------------------------------------------------------------

   generate ATML1:Go(Test) to Left_Two
 
   Test = Test + 1

# End Test 6

#--------------------------------------------------------------------------
# Test 7
#--------------------------------------------------------------------------

   generate ATMR1:Go(Test) to Right_Two

   Test = Test + 1

# End Test 7

#--------------------------------------------------------------------------
# Test 8 
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_Two_Two

   Test = Test + 1

# End Test 8

#--------------------------------------------------------------------------
# Test 9 
#--------------------------------------------------------------------------

   Left_Three      = create unique Active_Tagged_Many_Left  with Attribute_One = Test & Current_State = ''Idle''
   Right_Three     = create unique Active_Tagged_Many_Right with Attribute_Two = Test & Current_State = ''Idle''
   Assoc_Three_Three = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_Three R5 Right_Three using Assoc_Three_Three

   # navigate to prove link
   {Set_Of_Right} = Left_Three -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}
   
   Expected_Number = 1

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Create third three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 9

#--------------------------------------------------------------------------
# Test 10
#--------------------------------------------------------------------------

   generate ATML1:Go(Test) to Left_Three

   Test = Test + 1

# Test 10

#--------------------------------------------------------------------------
# Test 11
#--------------------------------------------------------------------------

   generate ATMR1:Go(Test) to Right_Three

   Test = Test + 1

# End Test 11

#--------------------------------------------------------------------------
# Test 12
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_Three_Three
  
   Test = Test + 1

# End Test 12

#--------------------------------------------------------------------------
# Test 13
#--------------------------------------------------------------------------

   Assoc_One_Two = create Active_Tagged_Single_Assoc with Attribute_Three = Test  & Current_State = ''Idle''

   link Left_One R5 Right_Two using Assoc_One_Two

   # navigate to prove link
   {Set_Of_Right} = Left_One -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 2

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Link one to two via three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 13

#--------------------------------------------------------------------------
# Test 14
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_One_Two
  
   Test = Test + 1

#--------------------------------------------------------------------------
# Test 15
#--------------------------------------------------------------------------

   Assoc_One_Three = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_One R5 Right_Three using Assoc_One_Three

   # navigate to prove link

   {Set_Of_Right} = Left_One -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 3

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Link one to three "]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 15

#--------------------------------------------------------------------------
# Test 16
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_One_Three

   Test = Test + 1

# End Test 16

#--------------------------------------------------------------------------
# Test 17
#--------------------------------------------------------------------------

   Assoc_Two_One = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_Two R5 Right_One using Assoc_Two_One

   # navigate to prove link
   {Set_Of_Right} = Left_Two -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 2

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Link two to one"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1


# End Test 17

#--------------------------------------------------------------------------
# Test 18
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_Two_One
  
   Test = Test + 1

# End Test 18

#--------------------------------------------------------------------------
# Test 19
#--------------------------------------------------------------------------

   Assoc_Two_Three = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_Two R5 Right_Three using Assoc_Two_Three

   # navigate to prove link
   {Set_Of_Right} = Left_Two -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 3

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Link two to three"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 19

#--------------------------------------------------------------------------
# Test 20
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_Two_Three

   Test = Test + 1

# End Test 20

#--------------------------------------------------------------------------
# Test 21
#--------------------------------------------------------------------------

   Assoc_Three_One = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_Three R5 Right_One using Assoc_Three_One

   # navigate to prove link
   {Set_Of_Right} = Left_Three -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 2

   Failure_Value = Number_In_Set - Expected_Number

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Link three to one"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 21

#--------------------------------------------------------------------------
# Test 22
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_Three_One

   Test = Test + 1

# End Test 22

#--------------------------------------------------------------------------
# Test 23
#--------------------------------------------------------------------------

   Assoc_Three_Two = create Active_Tagged_Single_Assoc with Attribute_Three = Test & Current_State = ''Idle''

   link Left_Three R5 Right_Two using Assoc_Three_Two

   # navigate to prove link
   {Set_Of_Right} = Left_Three -> R5.Active_Tagged_Many_Right

   Number_In_Set = countof {Set_Of_Right}

   Expected_Number = 3

   Failure_Value = Number_In_Set - Expected_Number
   
   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "Tagging", "M to M Active Relationships", "Link three to two"]

   [] = TAGS5::Report_Now[Test, "Create all three", Failure_Value, Supported]

   Test = Test + 1

# End Test 23

#--------------------------------------------------------------------------
# Test 24
#--------------------------------------------------------------------------

   generate ATSASSOC1:Go(Test) to Assoc_Three_Two

   Test = Test + 1

# End Test 24

#--------------------------------------------------------------------------

my_test.Number = Test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,13 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001fb","00000000-0000-0000-0000-000000000000",'Perform_Active_Super_Sub_Tests','','my_test = find-one Test_Data

this_test = my_test.Number

supported = TRUE

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Active Super Sub types", "Active One Super Sub relationship"]

   # Create one of one super type objects
   Super1 = create unique Active_Tagged_Supertype with Supertype_Data = this_test

   # create one of two sub type 1 objects
   Index_For_Subtype = this_test + 1

   # Increase index for test by one more than the test number so that the sub type, when it processes
   # the polymorphically delivered event, will report a different test number. This is so that the report
   # will be distinguished by the reporter domain as a separate test.

   Sub1_1 = create Active_Tagged_Subtype_One with Subtype_One_Data = this_test & Test_No = Index_For_Subtype 

   link Super1 R6 Sub1_1

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub1 = Super1 -> R6.Active_Tagged_Subtype_One

   failure_value = view_of_sub1.Subtype_One_Data - Super1.Supertype_Data

   [] = TAGS5::Report_Now[this_test, "Active One Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Active Super Sub types", "Other Super Sub relationship"]

   Index_For_Subtype = this_test + 1
  
   # Create second of two sub type 1 objects
   Sub1_2 = create Active_Tagged_Subtype_One with Subtype_One_Data = this_test & Test_No = Index_For_Subtype & Current_State = ''Idle''

   # unlink first sub type from super type
   unlink Super1 R6 Sub1_1

   # Update super type data so that it matches new sub type.
   Super1.Supertype_Data = this_test

   # link second subtype to supertype
   link Super1 R6 Sub1_2

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub1 = Super1 -> R6.Active_Tagged_Subtype_One

   failure_value = view_of_sub1.Subtype_One_Data - Super1.Supertype_Data 

   [] = TAGS5::Report_Now[this_test, "Other Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Active Super Sub types", "Migrate Super Sub relationship"]

   Index_For_Subtype = this_test + 1

   # Create sub type 2 object
   Sub2 = create Active_Tagged_Subtype_Two with Subtype_Two_Data = this_test & Test_No = Index_For_Subtype & Current_State = ''Idle''

   # unlink first sub type from super type
   unlink Super1 R6 Sub1_2
  
   # Update super type data so that it matches new sub type.
   Super1.Supertype_Data = this_test

   # link second subtype to supertype
   link Super1 R6 Sub2

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub2 = Super1 -> R6.Active_Tagged_Subtype_Two

   failure_value = view_of_sub2.Subtype_Two_Data - Super1.Supertype_Data

   [] = TAGS5::Report_Now[this_test, "Migrate Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

# End Test 3


#--------------------------------------------------------------------------
# Test 4
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0128", "Tagged", "Active Super Sub types", "Migrate Super Sub relationship again"]

   Index_For_Subtype = this_test + 1

   # Create sub type 2 object
   Sub3 = create Active_Tagged_Subtype_Three with Subtype_Three_Data = this_test & Test_No = Index_For_Subtype & Current_State = ''Idle''

   # unlink first sub type from super type
   unlink Super1 R6 Sub2

   # Update super type data so that it matches new sub type.
   Super1.Supertype_Data = this_test

   # link second subtype to supertype
   link Super1 R6 Sub3

   # Navigate from the super to the sub, and compare the data attribute
   view_of_sub3 = Super1 -> R6.Active_Tagged_Subtype_Three

   failure_value = view_of_sub3.Subtype_Three_Data - Super1.Supertype_Data

   [] = TAGS5::Report_Now[this_test, "Migrate Super Sub relationship", failure_value, supported]

   this_test = this_test + 1

# End Test 4

#--------------------------------------------------------------------------

my_test.Number = this_test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,14 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-0000000001ff","00000000-0000-0000-0000-000000000000",'Perform_Static_Tests','','my_test = find-one Test_Data

this_test = my_test.Number

supported = TRUE

#--------------------------------------------------------------------------
# Test 1 - Create a static object. By inspection check that there is no
#          delete option generated for this object
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0132", "Tagged", "TAGGING", "Create a STATIC object"]
   [] = RPT8:Specify_Requid[this_test, "1241-0000-01-0127"]
   [] = RPT5:Test_Text [this_test, "Must be tested by inspection"]

   firstStatic = create A_Static_Object with Unique_ID = 1

   if firstStatic != UNDEFINED and firstStatic.Unique_ID = 1 then
      [] = RPT2:Test_Passed["Create STATIC oject", this_test, 0]
   else
      [] = RPT3:Test_Failed["Create STATIC oject", this_test, -1]
   endif

   this_test = this_test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - Create a single static object. By inspection check that there is
#          no delete option generated for this object
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0132", "Tagged", "TAGGING", "Create a SINGLE STATIC object"] 
   [] = RPT8:Specify_Requid[this_test, "1241-0000-01-0127"]
   [] = RPT5:Test_Text [this_test, "Can only be tested by inspection"]

   firstSingleStatic = create A_Single_Static_Object with Unique_ID = 1

   if firstSingleStatic != UNDEFINED and firstSingleStatic.Unique_ID = 1 then
      [] = RPT2:Test_Passed["Create SINGLE STATIC oject", this_test, 0]
   else
      [] = RPT3:Test_Failed["Create SINGLE STATIC oject", this_test, -1]
   endif

   this_test = this_test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[this_test, "1241-0000-01-0132", "Tagged", "TAGGING", "Create a MULTIPLE STATIC objects"]
   [] = RPT8:Specify_Requid[this_test, "1241-0000-01-0127"]
   [] = RPT5:Test_Text [this_test, "Can only be tested by inspection"]

   firstMultiStatic = create A_Multiple_Static_Object with Unique_ID = 1

   if firstMultiStatic != UNDEFINED and firstMultiStatic.Unique_ID = 1 then
      [] = RPT2:Test_Passed["Create MULTIPLE STATIC oject", this_test, 0]
   else
      [] = RPT3:Test_Failed["Create MULTIPLE STATIC oject", this_test, -1]
   endif

   this_test = this_test + 1

# End Test 3

#--------------------------------------------------------------------------

my_test.Number = this_test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,15 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-00000000027e","00000000-0000-0000-0000-000000000000",'Start_TAGGED_Tests',' Start_TAGGED_Tests
','[] = TAGS2::Create_Report_Data[]

# Find the test details. If they already exist, it''s because an external
# created them, and this must be an I-SIM environment.

my_test = find-one Test_Data

if my_test = UNDEFINED then

   # Stick a ''C'' insert here to attempt to set an attribute.
   Test_Details = create Test_Data with Number = 0 & Environment = ''WACA'' & Current_State = ''Idle''

   # Use this function to set the test number to 1 using a ''C'' insert
   # if it returns set, then this must be I-SIM else WACA.
   [Test_Details] = TAGS6::Set_Environment[Test_Details]

   if Test_Details.Number = 1 then
      Test_Details.Environment = ''ISIM''
   else
      Test_Details.Number      = 1
      Test_Details.Environment = ''WACA''
   endif
 
endif',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,1 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000280","00000000-0000-0000-0000-000000000000",'Perform_Passive_Static_Tests',' Perform_Passive_Static_Tests
','my_test = find-one Test_Data

Test      = my_test.Number
Last_Test = 0

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [Last_Test] = TAGS1::Perform_Unique_Passive_Singleton_Object_Tests[Test]

   Test = Last_Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [Last_Test]  = TAGS4::Perform_Passive_Singleton_Object_Tests[Test]

   Test = Last_Test + 1

# End Test 2

#--------------------------------------------------------------------------

my_test.Number = Test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,2 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000282","00000000-0000-0000-0000-000000000000",'Perform_Active_Object_Tests',' Perform_Active_Object_Tests
','#--------------------------------------------------------------------------
# This scenario should always be called last, and the Test value be updated 
# with the next available test number.
#--------------------------------------------------------------------------

my_test = find-one Test_Data

Test = my_test.Number

Restart_Check_Object = TRUE
Finish_Check_Object  = FALSE

Find_It = TRUE
Lose_It = FALSE

# Create object for checking the results of the actions on the active object
How_Was_It_For_You = create Check_On_Active_Object with Current_State = ''Idle''

#--------------------------------------------------------------------------
# Test 1 - Create an active object tagged as singleton.
#--------------------------------------------------------------------------

   Create_And_Delete_Active_Object = create unique An_Active_Object with Current_State = ''Idle''

   delete Create_And_Delete_Active_Object

   Expected_Result = 0

   # Make sure that the active object has indeed gone.
   generate CHECK1:Start(Test,                            \
                         Create_And_Delete_Active_Object, \
                         "Create and Delete active",      \
                         Expected_Result,                 \
                         Lose_It,                         \
                         Restart_Check_Object) to How_Was_It_For_You   

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - This test shall cause the active object to transition from Idle
#          to Act and then back to Idle.
#--------------------------------------------------------------------------

   Base_Value_To_Start_With = 1
   Expected_Result          = 101

   First_Active_Object = create unique An_Active_Object with Result        = 0 &\ 
                                                             Current_State = ''Idle''

   generate AAO1:Start_Your_Engines(Base_Value_To_Start_With) to First_Active_Object

   generate AAO2:Switch_Off() to First_Active_Object

   generate CHECK1:Start(Test,                       \
                         First_Active_Object,        \
                         "Create and Delete active", \
                         Expected_Result,            \
                         Find_It,                    \
                         Restart_Check_Object) to How_Was_It_For_You

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - This test shall cause the previously defined active object to
#          transition from Idle to Act and then back to Idle.
#--------------------------------------------------------------------------

   Base_Value_To_Start_With = 2
   Expected_Result          = 203

   generate AAO1:Start_Your_Engines(Base_Value_To_Start_With) to First_Active_Object
 
   generate AAO2:Switch_Off() to First_Active_Object

   generate CHECK1:Start(Test,                             \
                         First_Active_Object,              \
                         "Create and Delete active again", \
                         Expected_Result,                  \
                         Find_It,                          \
                         Restart_Check_Object) to How_Was_It_For_You

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4 - This test shall cause the previously defined active object to
#          transition from Idle to Act and then to Terminate.
#--------------------------------------------------------------------------

   Base_Value_To_Start_With = 3
   Expected_Result          = 216

   generate AAO1:Start_Your_Engines(Base_Value_To_Start_With) to First_Active_Object

   generate AAO3:Floor_It() to First_Active_Object

   generate CHECK1:Start(Test,                             \
                         First_Active_Object,              \
                         "Create and Delete to Terminate", \
                         Expected_Result,                  \
                         Find_It,                          \
                         Restart_Check_Object) to How_Was_It_For_You

   Test = Test + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   Expected_Result = 0

   generate AAO4:Crash_It() to First_Active_Object

   generate CHECK1:Start(Test,                  \
                         First_Active_Object,   \
                         "Terminate to Expire", \
                         Expected_Result,       \
                         Lose_It,               \
                         Restart_Check_Object) to How_Was_It_For_You

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------

my_test.Number = Test
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,3 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000284","00000000-0000-0000-0000-000000000000",'Perform_Passive_Array_Tests',' Perform_Passive_Array_Tests
','# Separate requirement tag test
# @@TAGS-01-0012
my_test = find-one Test_Data

if my_test.Environment = ''WACA'' then
   This_Is_WACA = TRUE
else
   This_Is_WACA = FALSE
endif

Test = my_test.Number
Last_Test = 0

#--------------------------------------------------------------------------
# Test 1
#--------------------------------------------------------------------------

   [Last_Test] = TAGS8::Perform_Passive_Array_of_1_Object_Tests[Test,This_Is_WACA]

   Test = Last_Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [Last_Test] = TAGS7::Perform_Passive_Array_of_3_Objects_Tests[Test,This_Is_WACA]

   Test = Last_Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Create three passive data objects for Just Multiple
#--------------------------------------------------------------------------

   JM1 = create Just_Multiple with idJM = 1
   JM2 = create Just_Multiple with idJM = 1

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING",  "Multiple object", "Create two"]

   # Return count of A_Passive_Array_Of_Three_Objects
   {set_of_objects} = find-all Just_Multiple

   total_count = countof {set_of_objects}

   if total_count = 2 then
      [] = RPT2:Test_Passed["Created two", Test, 0]
   else
      [] = RPT3:Test_Failed["Failed to create two", Test, -10]
   endif

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Multiple object", "Delete one"]

   # Delete 1 of passive objects

   delete JM2

   {set_of_objects} = find-all Just_Multiple
   
   total_count = countof {set_of_objects}

   if total_count = 1 then
      [] = RPT2:Test_Passed["Delete one", Test, 0]
   else
      [] = RPT3:Test_Failed["Failed to delete one", Test, -10]
   endif

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Create extra passive object, total of three
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Multiple object", "Add one"]

   replacement_object = create Just_Multiple with idJM = 3

   # Return count of A_Passive_Array_Of_Three_Objects
   {set_of_objects} = find-all Just_Multiple

   total_count = countof {set_of_objects}

   if total_count = 2 then
      [] = RPT2:Test_Passed["Add one", Test, 0]
   else
      [] = RPT3:Test_Failed["Failed to add one", Test, -10]
   endif

   Test = Test + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 5 - Attempt to delete all objects
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "1241-0000-01-0128", "TAGGING", "Passive Array 3 UNIQUE object", "Delete all objects"]

   # Return count of A_Passive_Array_Of_Three_Objects

   {set_of_objects} = find-all Just_Multiple
   total_count = countof {set_of_objects}

   if total_count = 2 then
      # Delete all objects
      for each_object in {set_of_objects} do
         delete each_object
      endfor

      {set_of_objects} = find-all Just_Multiple
      total_count = countof {set_of_objects}

      if total_count = 0 then
         new_object = create Just_Multiple with idJM = 1

         # Check that it is defined
         if new_object != UNDEFINED then
            {set_of_objects} = find-all Just_Multiple
            total_count = countof {set_of_objects}

            # and only one now exists
            if total_count = 1 then 

               delete new_object

               [] = RPT2:Test_Passed["Deleted all", Test, 0]
            else
               [] = RPT3:Test_Failed["Failed to delete all", Test, -10]
            endif

         else
            [] = RPT3:Test_Failed["Failed to delete all", Test, -20]
         endif

      else
         [] = RPT3:Test_Failed["Failed to delete all", Test, -30]
      endif

   else
      [] = RPT3:Test_Failed["Failed to delete all", Test, -40]
   endif

   Test = Test + 1

# End Test 5

#--------------------------------------------------------------------------

my_test.Number = Test',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,4 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000286","00000000-0000-0000-0000-000000000000",'Finish_TAGGED_Tests',' Finish_TAGGED_Tests
','my_test = find-one Test_Data

generate TD1:Tests_Are_Over() to my_test
',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,5 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000288","00000000-0000-0000-0000-000000000000",'Perform_Active_Array_Tests',' Perform_Active_Array_Tests
','[] = AAAOTO1:Do_Active_Many_Array_Tests[]

[] = AAAOOO1:Do_Active_Single_Array_Tests[]

',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,6 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-00000000028a","00000000-0000-0000-0000-000000000000",'Perform_Single_To_Many_Navigations',' Perform_Single_To_Many_Navigations
','[] = TAGS9::Perform_One_To_Many_Tests[]

[] = TAGS10::Perform_Active_One_To_Many_Tests[]


',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,7 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-00000000028c","00000000-0000-0000-0000-000000000000",'Perform_Terminator_Tag_Tests',' Perform_Terminator_Tag_Tests
','# Perform calls to tagged terminator and untagged terminator

My_Test = find-one Test_Data

The_Test_Number = My_Test.Number

Where_Are_We = My_Test.Environment

#--------------------------------------------------------------------------
# Test 1 - Call tagged local terminator
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-1111", "Tagging", "Terminators", "Tagged locally defined"]
   [] = RPT8:Specify_Requid[The_Test_Number, "1101-0000-01-0112"]

   Local_Input_Parameter = 1
   Local_Output_Parameter = 0

   [Local_Output_Parameter] = TT1:A_Tagged_Local_Terminator[Local_Input_Parameter]

   if Where_Are_We = ''WACA'' then

      if Local_Output_Parameter = Local_Input_Parameter then
         [] = RPT3:Test_Failed["Tagged locally defined",The_Test_Number,  -1]
      else
         [] = RPT2:Test_Passed["Tagged locally defined",The_Test_Number,  0]
      endif

   else
      [] = RPT4:Test_Unsupported[The_Test_Number]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - Call tagged project terminator
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-1111", "Tagging", "Terminators", "Untagged local defined"]
 
   Local_Input_Parameter = 1
   Local_Output_Parameter = 0

   [Local_Output_Parameter] = UT1:An_Untagged_Local_Terminator[Local_Input_Parameter]

   if Where_Are_We = ''WACA'' then

      if Local_Output_Parameter != Local_Input_Parameter then
         [] = RPT3:Test_Failed["Untagged local defined",The_Test_Number,  Local_Output_Parameter]
      else
         [] = RPT2:Test_Passed["Untagged local defined",The_Test_Number,  0]
      endif

   else
      [] = RPT4:Test_Unsupported[The_Test_Number]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3 - Call local untagged terminator
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-1111", "Tagging", "Terminators", "Tagged project defined"]
   [] = RPT8:Specify_Requid[The_Test_Number, "1101-0000-01-0112"]

   Local_Input_Parameter = 1
   Local_Output_Parameter = 0

   [Local_Output_Parameter] = TT3:A_Tagged_Project_Terminator[Local_Input_Parameter]

   if Where_Are_We = ''WACA'' then

      if Local_Output_Parameter = Local_Input_Parameter then
         [] = RPT3:Test_Failed["Tagged project defined",The_Test_Number,  Local_Output_Parameter]
      else
         [] = RPT2:Test_Passed["Tagged project defined",The_Test_Number,  0]
      endif

   else
      [] = RPT4:Test_Unsupported[The_Test_Number]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4 - Call untagged project terminator
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-1111", "Tagging", "Terminators", "Untagged project defined"]

   Local_Input_Parameter = 1
   Local_Output_Parameter = 0

   [Local_Output_Parameter] = UT2:An_Untagged_Project_Terminator[Local_Input_Parameter]

   if Where_Are_We = ''WACA'' then

      if Local_Output_Parameter != Local_Input_Parameter then
         [] = RPT3:Test_Failed["Untagged project defined",The_Test_Number,  -1]
      else
         [] = RPT2:Test_Passed["Untagged project defined",The_Test_Number,  0]
      endif

   else
      [] = RPT4:Test_Unsupported[The_Test_Number]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 4

#--------------------------------------------------------------------------
# Test 5
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-1111", "Tagging", "Terminators", "Two tagged called from untagged terminator"]

   This_Result = FALSE

   [This_Result] = TD1:Call_Tagged_Terminators[]

   if Where_Are_We = ''WACA'' then

      if This_Result = FALSE then
         [] = RPT3:Test_Failed["Two tagged called from untagged terminator",The_Test_Number,  -1]
      else
         [] = RPT2:Test_Passed["Two tagged called from untagged terminator",The_Test_Number,  0]
      endif

   else
      [] = RPT4:Test_Unsupported[The_Test_Number]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 5

#--------------------------------------------------------------------------

My_Test.Number = The_Test_Number',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,8 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-00000000028e","00000000-0000-0000-0000-000000000000",'Perform_Glitch_Recovery_Tests',' Perform_Glitch_Recovery_Tests
','My_Test = find-one Test_Data

The_Test_Number = My_Test.Number

Failure_Code = 0

Test_Integer = 55
Test_Boolean = TRUE
Test_Real    = 1234.56
Test_Environment = My_Test.Environment

#--------------------------------------------------------------------------
# Test 1 - Glitch Recovery Object must be tagged either Singleton or 
#          Multiplicity.
#          If it isn''t, the new object will not be created at the same
#          memory location.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-0129", "Glitch Recovery", "Singleton", "Recreate at same location"]
   [] = RPT8:Specify_Requid[The_Test_Number, "1241-0000-01-0130"]

   First_Object = create Singleton_Glitch_Recovery with An_Integer  = Test_Integer &\
                                                        A_Boolean   = Test_Boolean &\
                                                        A_Real      = Test_Real    &\
                                                        Environment = Test_Environment

   if First_Object = UNDEFINED then
      # Test has fallen at the first hurdle
      Failure_Code = -1
   else
      delete First_Object

      if Test_Environment = ''WACA'' then
         # For Ada runs on host or Target, only create this object without
         # specifying the attributes.
         Second_Object = create Singleton_Glitch_Recovery
      else
         # This is for a ISIM run, obviously it should always pass.
         Second_Object = create Singleton_Glitch_Recovery with An_Integer  = Test_Integer &\
                                                               A_Boolean   = Test_Boolean &\
                                                               A_Real      = Test_Real    &\
                                                               Environment = Test_Environment
      endif

      if Second_Object.An_Integer = Test_Integer then

         if Second_Object.A_Boolean = Test_Boolean then

            if Second_Object.A_Real = Test_Real then

               if Second_Object.Environment = Test_Environment then
                  Failure_Code = 0
               else
                  Failure_Code = -2
               endif

            else
               Failure_Code = -3
            endif

         else
            Failure_Code = -4
         endif

      else
         Failure_Code = -5
      endif

      delete Second_Object

   endif

   if Failure_Code = 0 then
      [] = RPT2:Test_Passed["Singleton glitch",The_Test_Number, Failure_Code]
   else
      [] = RPT3:Test_Failed["Singleton glitch",The_Test_Number, Failure_Code]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2
#--------------------------------------------------------------------------

   int_one = 10
   int_two = 20
   int_three = 30

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-0129", "Glitch Recovery", "Multiplicity", "Recreate different name at same location"]
   [] = RPT8:Specify_Requid[The_Test_Number, "1241-0000-01-0130"]

   # Create three objects tagged MULTIPLICITY.

   Multi_First_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_one
   Multi_Second_Object = create Multiplicity_Glitch_Recovery with An_Integer  = int_two
   Multi_Third_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_three

   if Multi_First_Object = UNDEFINED then
      # Test has fallen at the first hurdle
      Failure_Code = -1
   else
      delete Multi_First_Object
      delete Multi_Second_Object
      delete Multi_Third_Object

      # This is an attempt to simulate what will happen when the system restarts and glitch recovery
      # is invoked. Since a system restart can not be simulated here without an enourmous
      # amount of buggering around, the created objects are deleted, and three more created in their
      # place. Naming is not important at this stage, though, for completeness the same name could 
      # be used. For the purposes of this test, a different set of names shall be used.

      if Test_Environment = ''WACA'' then
         # For Ada runs on host or Target, only create this object without
         # specifying the attributes.
         Fourth_Object = create Multiplicity_Glitch_Recovery
         Fifth_Object  = create Multiplicity_Glitch_Recovery
         Sixth_Object  = create Multiplicity_Glitch_Recovery
      else
         Fourth_Object = create Multiplicity_Glitch_Recovery with An_Integer  = int_one
         Fifth_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_two
         Sixth_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_three
      endif

      if Fourth_Object.An_Integer = int_one then

         if Fifth_Object.An_Integer = int_two then

            if Sixth_Object.An_Integer = int_three then
               Failure_Code = 0
            else
               Failure_Code = -2
            endif

         else
            Failure_Code = -3
         endif

      else
         Failure_Code = -4
      endif

      delete Fourth_Object
      delete Fifth_Object
      delete Sixth_Object

   endif

   if Failure_Code = 0 then
      [] = RPT2:Test_Passed["Multiplicity glitch",The_Test_Number, Failure_Code]
   else
      [] = RPT3:Test_Failed["Multiplicity glitch",The_Test_Number, Failure_Code]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 2

#--------------------------------------------------------------------------
# Test 3
#--------------------------------------------------------------------------

   int_one = 10
   int_two = 20
   int_three = 30

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-0129", "Glitch Recovery", "Multiplicity", "Recreate same name at same location"]
   [] = RPT8:Specify_Requid[The_Test_Number, "1241-0000-01-0130"]

   # Create three objects tagged MULTIPLICITY.
   Reuse_First_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_one
   Reuse_Second_Object = create Multiplicity_Glitch_Recovery with An_Integer  = int_two
   Reuse_Third_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_three

   if Reuse_First_Object = UNDEFINED then
      # Test has fallen at the first hurdle
      Failure_Code = -1
   else
      delete Reuse_First_Object
      delete Reuse_Second_Object
      delete Reuse_Third_Object

      # Naming is not important at this stage, though, for completeness the same name could 
      # be used. For the purposes of this test, the same set of names shall be used.
      if Test_Environment = ''WACA'' then
         # For Ada runs on host or Target, only create this object without
         # specifying the attributes.
         Reuse_First_Object = create Multiplicity_Glitch_Recovery
         Reuse_Second_Object  = create Multiplicity_Glitch_Recovery
         Reuse_Third_Object  = create Multiplicity_Glitch_Recovery
      else
         Reuse_First_Object = create Multiplicity_Glitch_Recovery with An_Integer  = int_one
         Reuse_Second_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_two
         Reuse_Third_Object  = create Multiplicity_Glitch_Recovery with An_Integer  = int_three
      endif

      if Reuse_First_Object.An_Integer = int_one then

         if Reuse_Second_Object.An_Integer = int_two then

            if Reuse_Third_Object.An_Integer = int_three then
               Failure_Code = 0
            else
               Failure_Code = -2
            endif

         else
            Failure_Code = -3
         endif

      else
         Failure_Code = -4
      endif

      delete Reuse_First_Object
      delete Reuse_Second_Object
      delete Reuse_Third_Object

   endif

   if Failure_Code = 0 then
      [] = RPT2:Test_Passed["Multiplicity glitch",The_Test_Number, Failure_Code]
   else
      [] = RPT3:Test_Failed["Multiplicity glitch",The_Test_Number, Failure_Code]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 3

#--------------------------------------------------------------------------
# Test 4
#--------------------------------------------------------------------------

   int_one = 10
   int_two = 20

   [] = RPT1:Start_Test[The_Test_Number, "1241-0000-01-0129", "Glitch Recovery", "Multiplicity", "Single multiplicity object"]
   [] = RPT8:Specify_Requid[The_Test_Number, "1241-0000-01-0130"]

   # Create three objects tagged MULTIPLICITY.
   Multi_Single_First_Object  = create Multiplicity_Single_Glitch_Recovery_Object with Attribute_One  = int_one & Attribute_Two = int_two

   if Multi_Single_First_Object = UNDEFINED then
      # Test has fallen at the first hurdle
      Failure_Code = -1
   else
      delete Multi_Single_First_Object

      # This is an attempt to simulate what will happen when the system restarts and glitch recovery
      # is invoked. Since a system restart can not be simulated here without an enormous
      # amount of buggering around, the created objects are deleted, and another created in its
      # place. Naming is not important at this stage, though, for completeness the same name could 
      # be used. For the purposes of this test, a different set of names shall be used.

      if Test_Environment = ''WACA'' then
         # For Ada runs on host or Target, only create this object without
         # specifying the attributes.
         Multi_Single_Second_Object = create Multiplicity_Single_Glitch_Recovery_Object
      else
         Multi_Single_Second_Object = create Multiplicity_Single_Glitch_Recovery_Object with Attribute_One  = int_one & Attribute_Two = int_two
      endif

      if Multi_Single_Second_Object.Attribute_One = int_one then

         if Multi_Single_Second_Object.Attribute_Two = int_two then
            Failure_Code = 0
         else
            Failure_Code = -2
         endif

      else
         Failure_Code = -3
      endif

      delete Multi_Single_Second_Object

   endif

   if Failure_Code = 0 then
      [] = RPT2:Test_Passed["Multiplicity single glitch",The_Test_Number, Failure_Code]
   else
      [] = RPT3:Test_Failed["Multiplicity single glitch",The_Test_Number, Failure_Code]
   endif

   The_Test_Number = The_Test_Number + 1

# End Test 4

#--------------------------------------------------------------------------

My_Test.Number = The_Test_Number',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,9 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000290","00000000-0000-0000-0000-000000000000",'Perform_Many_To_Many_Navigations',' Perform_Many_To_Many_Navigations
','[] = TAGS11::Perform_Passive_Many_To_Many_Tests[]

[] = TAGS13::Perform_Active_Many_To_Many_Tests[]',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,10 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000292","00000000-0000-0000-0000-000000000000",'Perform_Super_Sub_Tests',' Perform_Super_Sub_Tests
','[] = TAGS12::Perform_Passive_Super_Sub_Tests[]
[] = TAGS14::Perform_Active_Super_Sub_Tests[]',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,11 );
INSERT INTO S_SYNC VALUES ( "00000000-0000-0000-0000-000000000294","00000000-0000-0000-0000-000000000000",'Perform_Static_Tests',' Perform_Static_Tests
','[] = TAGS15::Perform_Static_Tests[]',"ba5eda7a-def5-0000-0000-000000000000",3,'',2,12 );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001aa","00000000-0000-0000-0000-0000000001a2",'Test',"ba5eda7a-def5-0000-0000-000000000002",0,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001ac","00000000-0000-0000-0000-0000000001a2",'Returned_Test_Number',"ba5eda7a-def5-0000-0000-000000000002",1,'',"00000000-0000-0000-0000-0000000001aa",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001ba","00000000-0000-0000-0000-0000000001b7",'Test',"ba5eda7a-def5-0000-0000-000000000002",0,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001bc","00000000-0000-0000-0000-0000000001b7",'Returned_Test_Number',"ba5eda7a-def5-0000-0000-000000000002",1,'',"00000000-0000-0000-0000-0000000001ba",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001c2","00000000-0000-0000-0000-0000000001bf",'Test_Number',"ba5eda7a-def5-0000-0000-000000000002",0,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001c4","00000000-0000-0000-0000-0000000001bf",'Testing_For',"ba5eda7a-def5-0000-0000-000000000004",0,'',"00000000-0000-0000-0000-0000000001c2",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001c6","00000000-0000-0000-0000-0000000001bf",'Failure',"ba5eda7a-def5-0000-0000-000000000002",0,'',"00000000-0000-0000-0000-0000000001c4",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001c8","00000000-0000-0000-0000-0000000001bf",'It_Is_Supported',"ba5eda7a-def5-0000-0000-000000000001",0,'',"00000000-0000-0000-0000-0000000001c6",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001ce","00000000-0000-0000-0000-0000000001cb",'Input_Test_Data',"00000000-0000-0000-0000-000000000064",0,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001d0","00000000-0000-0000-0000-0000000001cb",'Output_Test_Data',"00000000-0000-0000-0000-000000000064",1,'',"00000000-0000-0000-0000-0000000001ce",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001d6","00000000-0000-0000-0000-0000000001d3",'Start_Test_Number',"ba5eda7a-def5-0000-0000-000000000002",0,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001d8","00000000-0000-0000-0000-0000000001d3",'Supported',"ba5eda7a-def5-0000-0000-000000000001",0,'',"00000000-0000-0000-0000-0000000001d6",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001da","00000000-0000-0000-0000-0000000001d3",'Final_Test_Number',"ba5eda7a-def5-0000-0000-000000000002",1,'',"00000000-0000-0000-0000-0000000001d8",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001e0","00000000-0000-0000-0000-0000000001dd",'Start_Test_Number',"ba5eda7a-def5-0000-0000-000000000002",0,'',"00000000-0000-0000-0000-000000000000",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001e2","00000000-0000-0000-0000-0000000001dd",'Supported',"ba5eda7a-def5-0000-0000-000000000001",0,'',"00000000-0000-0000-0000-0000000001e0",'' );
INSERT INTO S_SPARM VALUES ( "00000000-0000-0000-0000-0000000001e4","00000000-0000-0000-0000-0000000001dd",'Final_Test_Number',"ba5eda7a-def5-0000-0000-000000000002",1,'',"00000000-0000-0000-0000-0000000001e2",'' );
INSERT INTO R_REL VALUES ( "00000000-0000-0000-0000-000000000296",1,' @@TAGS-01-0010
',"00000000-0000-0000-0000-000000000000" );
INSERT INTO R_REL VALUES ( "00000000-0000-0000-0000-0000000002ab",2,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO R_REL VALUES ( "00000000-0000-0000-0000-0000000002c0",3,' @@TAGS-01-0011
',"00000000-0000-0000-0000-000000000000" );
INSERT INTO R_REL VALUES ( "00000000-0000-0000-0000-0000000002e5",5,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO R_REL VALUES ( "00000000-0000-0000-0000-00000000030a",4,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO R_REL VALUES ( "00000000-0000-0000-0000-000000000328",6,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-00000000008c","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-00000000029a","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-0000000002a3","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002af","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002b8","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000b8","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002c4","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000c3","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002cd","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002e0","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002e9","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002f2","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-000000000305","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000d9","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-00000000030e","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000317","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000320","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000032c","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000335","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000033e","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_OIR VALUES ( "00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000347","00000000-0000-0000-0000-000000000000" );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-00000000008c","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-00000000029a",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002af",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-0000000000b8","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002c4",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-0000000000c3","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002cd",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002e9",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002f2",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-0000000000d9","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-00000000030e",0 );
INSERT INTO R_RTO VALUES ( "00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000032c",0 );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002e0" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-000000000305" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000317" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000320" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000335" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000033e" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000347" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002b8" );
INSERT INTO R_RGO VALUES ( "00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-0000000002a3" );
INSERT INTO R_SIMP VALUES ( "00000000-0000-0000-0000-000000000296" );
INSERT INTO R_SIMP VALUES ( "00000000-0000-0000-0000-0000000002ab" );
INSERT INTO R_PART VALUES ( "00000000-0000-0000-0000-00000000008c","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-00000000029a",0,0,'has' );
INSERT INTO R_PART VALUES ( "00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002af",0,0,'has' );
INSERT INTO R_FORM VALUES ( "00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000002ab","00000000-0000-0000-0000-0000000002b8",1,0,'has' );
INSERT INTO R_FORM VALUES ( "00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-000000000296","00000000-0000-0000-0000-0000000002a3",1,0,'has' );
INSERT INTO R_ASSOC VALUES ( "00000000-0000-0000-0000-0000000002c0" );
INSERT INTO R_ASSOC VALUES ( "00000000-0000-0000-0000-0000000002e5" );
INSERT INTO R_AONE VALUES ( "00000000-0000-0000-0000-0000000000b8","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002c4",1,0,'has' );
INSERT INTO R_AONE VALUES ( "00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002e9",1,0,'has' );
INSERT INTO R_AOTH VALUES ( "00000000-0000-0000-0000-0000000000c3","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002cd",1,0,'has' );
INSERT INTO R_AOTH VALUES ( "00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-0000000002f2",1,0,'has' );
INSERT INTO R_ASSR VALUES ( "00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-0000000002c0","00000000-0000-0000-0000-0000000002e0",0 );
INSERT INTO R_ASSR VALUES ( "00000000-0000-0000-0000-000000000126","00000000-0000-0000-0000-0000000002e5","00000000-0000-0000-0000-000000000305",0 );
INSERT INTO R_SUBSUP VALUES ( "00000000-0000-0000-0000-00000000030a" );
INSERT INTO R_SUBSUP VALUES ( "00000000-0000-0000-0000-000000000328" );
INSERT INTO R_SUPER VALUES ( "00000000-0000-0000-0000-0000000000d9","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-00000000030e" );
INSERT INTO R_SUPER VALUES ( "00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000032c" );
INSERT INTO R_SUB VALUES ( "00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000317" );
INSERT INTO R_SUB VALUES ( "00000000-0000-0000-0000-0000000000ef","00000000-0000-0000-0000-00000000030a","00000000-0000-0000-0000-000000000320" );
INSERT INTO R_SUB VALUES ( "00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000335" );
INSERT INTO R_SUB VALUES ( "00000000-0000-0000-0000-000000000147","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-00000000033e" );
INSERT INTO R_SUB VALUES ( "00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-000000000328","00000000-0000-0000-0000-000000000347" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000002d",0,"00000000-0000-0000-0000-000000000029" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000030",1,"00000000-0000-0000-0000-000000000029" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000038",0,"00000000-0000-0000-0000-000000000034" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000003b",1,"00000000-0000-0000-0000-000000000034" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000043",0,"00000000-0000-0000-0000-00000000003f" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000046",1,"00000000-0000-0000-0000-00000000003f" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000004e",0,"00000000-0000-0000-0000-00000000004a" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000051",1,"00000000-0000-0000-0000-00000000004a" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000059",0,"00000000-0000-0000-0000-000000000055" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000005c",1,"00000000-0000-0000-0000-000000000055" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000064",0,"00000000-0000-0000-0000-000000000060" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000067",1,"00000000-0000-0000-0000-000000000060" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000006f",0,"00000000-0000-0000-0000-00000000006b" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000072",1,"00000000-0000-0000-0000-00000000006b" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000007a",0,"00000000-0000-0000-0000-000000000076" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000007d",1,"00000000-0000-0000-0000-000000000076" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000085",0,"00000000-0000-0000-0000-000000000081" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000088",1,"00000000-0000-0000-0000-000000000081" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000090",0,"00000000-0000-0000-0000-00000000008c" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000093",1,"00000000-0000-0000-0000-00000000008c" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000009b",0,"00000000-0000-0000-0000-000000000097" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000009e",1,"00000000-0000-0000-0000-000000000097" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000a6",0,"00000000-0000-0000-0000-0000000000a2" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000a9",1,"00000000-0000-0000-0000-0000000000a2" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000b1",0,"00000000-0000-0000-0000-0000000000ad" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000b4",1,"00000000-0000-0000-0000-0000000000ad" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000bc",0,"00000000-0000-0000-0000-0000000000b8" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000bf",1,"00000000-0000-0000-0000-0000000000b8" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000c7",0,"00000000-0000-0000-0000-0000000000c3" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000ca",1,"00000000-0000-0000-0000-0000000000c3" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000d2",0,"00000000-0000-0000-0000-0000000000ce" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000d5",1,"00000000-0000-0000-0000-0000000000ce" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000dd",0,"00000000-0000-0000-0000-0000000000d9" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000e0",1,"00000000-0000-0000-0000-0000000000d9" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000e8",0,"00000000-0000-0000-0000-0000000000e4" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000eb",1,"00000000-0000-0000-0000-0000000000e4" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000f3",0,"00000000-0000-0000-0000-0000000000ef" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000f6",1,"00000000-0000-0000-0000-0000000000ef" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-0000000000fe",0,"00000000-0000-0000-0000-0000000000fa" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000101",1,"00000000-0000-0000-0000-0000000000fa" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000109",0,"00000000-0000-0000-0000-000000000105" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000010c",1,"00000000-0000-0000-0000-000000000105" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000114",0,"00000000-0000-0000-0000-000000000110" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000117",1,"00000000-0000-0000-0000-000000000110" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000011f",0,"00000000-0000-0000-0000-00000000011b" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000122",1,"00000000-0000-0000-0000-00000000011b" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000012a",0,"00000000-0000-0000-0000-000000000126" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000012d",1,"00000000-0000-0000-0000-000000000126" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000135",0,"00000000-0000-0000-0000-000000000131" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000138",1,"00000000-0000-0000-0000-000000000131" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000140",0,"00000000-0000-0000-0000-00000000013c" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000143",1,"00000000-0000-0000-0000-00000000013c" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000014b",0,"00000000-0000-0000-0000-000000000147" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000014e",1,"00000000-0000-0000-0000-000000000147" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000156",0,"00000000-0000-0000-0000-000000000152" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000159",1,"00000000-0000-0000-0000-000000000152" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000161",0,"00000000-0000-0000-0000-00000000015d" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000164",1,"00000000-0000-0000-0000-00000000015d" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000016c",0,"00000000-0000-0000-0000-000000000168" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000016f",1,"00000000-0000-0000-0000-000000000168" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000177",0,"00000000-0000-0000-0000-000000000173" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000017a",1,"00000000-0000-0000-0000-000000000173" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000182",0,"00000000-0000-0000-0000-00000000017e" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000185",1,"00000000-0000-0000-0000-00000000017e" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-00000000018d",0,"00000000-0000-0000-0000-000000000189" );
INSERT INTO S_IRDT VALUES ( "00000000-0000-0000-0000-000000000190",1,"00000000-0000-0000-0000-000000000189" );
INSERT INTO S_RANGE VALUES ( "00000000-0000-0000-0000-000000000196",'1','100' );
INSERT INTO C_C VALUES ( "00000000-0000-0000-0000-000000000023","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",'TAGS',' Bodges? We don need no stinkin bodges!
',0,"00000000-0000-0000-0000-000000000000",0,'','Tagging' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000001a4","00000000-0000-0000-0000-000000000000",'TAGS','' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000203","00000000-0000-0000-0000-000000000000",'TAGSTagged_Terminator','' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000220","00000000-0000-0000-0000-000000000000",'TAGSReport','' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000258","00000000-0000-0000-0000-000000000000",'TAGSEnv_Terminator','' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000267","00000000-0000-0000-0000-000000000000",'TAGSUntagged_Terminator','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000001a6",'','Unnamed_Interface','','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-000000000205",'','','Unnamed_Interface','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-000000000222",'','','Unnamed_Interface','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-00000000025a",'','','Unnamed_Interface','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-000000000269",'','','Unnamed_Interface','' );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001a8","00000000-0000-0000-0000-0000000001a4",0,'Perform_Unique_Passive_Singleton_Object_Tests','',1 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001b0","00000000-0000-0000-0000-0000000001a4",0,'Create_Report_Data','',2 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001b4","00000000-0000-0000-0000-0000000001a4",0,'Delete_Report_Domain','',3 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001b8","00000000-0000-0000-0000-0000000001a4",0,'Perform_Passive_Singleton_Object_Tests','',4 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001c0","00000000-0000-0000-0000-0000000001a4",0,'Report_Now','',5 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001cc","00000000-0000-0000-0000-0000000001a4",0,'Set_Environment','',6 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001d4","00000000-0000-0000-0000-0000000001a4",0,'Perform_Passive_Array_of_3_Objects_Tests','',7 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001de","00000000-0000-0000-0000-0000000001a4",0,'Perform_Passive_Array_of_1_Object_Tests','',8 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001e8","00000000-0000-0000-0000-0000000001a4",0,'Perform_One_To_Many_Tests','',9 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001ec","00000000-0000-0000-0000-0000000001a4",0,'Perform_Active_One_To_Many_Tests','',10 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001f0","00000000-0000-0000-0000-0000000001a4",0,'Perform_Passive_Many_To_Many_Tests','',11 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001f4","00000000-0000-0000-0000-0000000001a4",0,'Perform_Passive_Super_Sub_Tests','',12 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001f8","00000000-0000-0000-0000-0000000001a4",0,'Perform_Active_Many_To_Many_Tests','',13 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001fc","00000000-0000-0000-0000-0000000001a4",0,'Perform_Active_Super_Sub_Tests','',14 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000200","00000000-0000-0000-0000-0000000001a4",0,'Perform_Static_Tests','',15 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000207","00000000-0000-0000-0000-000000000203",0,'A_Tagged_Local_Terminator','',1 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000020b","00000000-0000-0000-0000-000000000203",0,'A_Tagged_Project_Terminator','',3 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000020f","00000000-0000-0000-0000-000000000203",0,'A_Tagged_Dummy_Terminator_One','',2 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000213","00000000-0000-0000-0000-000000000203",0,'A_Tagged_Dummy_Terminator_Two','',4 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000224","00000000-0000-0000-0000-000000000220",0,'Start_Test','',1 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000022b","00000000-0000-0000-0000-000000000220",0,'Test_Passed','',2 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000230","00000000-0000-0000-0000-000000000220",0,'Test_Failed','',3 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000235","00000000-0000-0000-0000-000000000220",0,'Test_Unsupported','',4 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000238","00000000-0000-0000-0000-000000000220",0,'Test_Text','',5 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000023c","00000000-0000-0000-0000-000000000220",0,'Domain_Test_Start','',6 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000023f","00000000-0000-0000-0000-000000000220",0,'Domain_Test_Finished','',7 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000243","00000000-0000-0000-0000-000000000220",0,'Specify_Requid','',8 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000025c","00000000-0000-0000-0000-000000000258",0,'Env_String','',1 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000025f","00000000-0000-0000-0000-000000000258",0,'Env_Number','',2 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000026b","00000000-0000-0000-0000-000000000267",0,'An_Untagged_Local_Terminator','',1 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000026f","00000000-0000-0000-0000-000000000267",0,'An_Untagged_Project_Terminator','',2 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000273","00000000-0000-0000-0000-000000000267",0,'Untagged_Operational_Terminator','',3 );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001a8","ba5eda7a-def5-0000-0000-000000000000",'Perform_Unique_Passive_Singleton_Object_Tests','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001b0","ba5eda7a-def5-0000-0000-000000000000",'Create_Report_Data','',0,'',"00000000-0000-0000-0000-0000000001a8" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001b4","ba5eda7a-def5-0000-0000-000000000000",'Delete_Report_Domain','',0,'',"00000000-0000-0000-0000-0000000001b0" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001b8","ba5eda7a-def5-0000-0000-000000000000",'Perform_Passive_Singleton_Object_Tests','',0,'',"00000000-0000-0000-0000-0000000001b4" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000000",'Report_Now','',0,'',"00000000-0000-0000-0000-0000000001b8" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001cc","ba5eda7a-def5-0000-0000-000000000000",'Set_Environment','',0,'',"00000000-0000-0000-0000-0000000001c0" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001d4","ba5eda7a-def5-0000-0000-000000000000",'Perform_Passive_Array_of_3_Objects_Tests','',0,'',"00000000-0000-0000-0000-0000000001cc" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001de","ba5eda7a-def5-0000-0000-000000000000",'Perform_Passive_Array_of_1_Object_Tests','',0,'',"00000000-0000-0000-0000-0000000001d4" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001e8","ba5eda7a-def5-0000-0000-000000000000",'Perform_One_To_Many_Tests','',0,'',"00000000-0000-0000-0000-0000000001de" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001ec","ba5eda7a-def5-0000-0000-000000000000",'Perform_Active_One_To_Many_Tests','',0,'',"00000000-0000-0000-0000-0000000001e8" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001f0","ba5eda7a-def5-0000-0000-000000000000",'Perform_Passive_Many_To_Many_Tests','',0,'',"00000000-0000-0000-0000-0000000001ec" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001f4","ba5eda7a-def5-0000-0000-000000000000",'Perform_Passive_Super_Sub_Tests','',0,'',"00000000-0000-0000-0000-0000000001f0" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001f8","ba5eda7a-def5-0000-0000-000000000000",'Perform_Active_Many_To_Many_Tests','',0,'',"00000000-0000-0000-0000-0000000001f4" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001fc","ba5eda7a-def5-0000-0000-000000000000",'Perform_Active_Super_Sub_Tests','',0,'',"00000000-0000-0000-0000-0000000001f8" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000200","ba5eda7a-def5-0000-0000-000000000000",'Perform_Static_Tests','',0,'',"00000000-0000-0000-0000-0000000001fc" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000207","ba5eda7a-def5-0000-0000-000000000000",'A_Tagged_Local_Terminator',' This is a tagged terminitor in an untagged terminator group.
',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000020b","ba5eda7a-def5-0000-0000-000000000000",'A_Tagged_Project_Terminator','',0,'',"00000000-0000-0000-0000-000000000207" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000020f","ba5eda7a-def5-0000-0000-000000000000",'A_Tagged_Dummy_Terminator_One',' Dummy tagged terminator with odd param names to get around possible I-SIM error
',0,'',"00000000-0000-0000-0000-00000000020b" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000213","ba5eda7a-def5-0000-0000-000000000000",'A_Tagged_Dummy_Terminator_Two','',0,'',"00000000-0000-0000-0000-00000000020f" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000224","ba5eda7a-def5-0000-0000-000000000000",'Start_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000022b","ba5eda7a-def5-0000-0000-000000000000",'Test_Passed','',0,'',"00000000-0000-0000-0000-000000000224" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000230","ba5eda7a-def5-0000-0000-000000000000",'Test_Failed','',0,'',"00000000-0000-0000-0000-00000000022b" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000235","ba5eda7a-def5-0000-0000-000000000000",'Test_Unsupported','',0,'',"00000000-0000-0000-0000-000000000230" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000238","ba5eda7a-def5-0000-0000-000000000000",'Test_Text','',0,'',"00000000-0000-0000-0000-000000000235" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000023c","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Start','',0,'',"00000000-0000-0000-0000-000000000238" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000023f","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Finished','',0,'',"00000000-0000-0000-0000-00000000023c" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000243","ba5eda7a-def5-0000-0000-000000000000",'Specify_Requid','',0,'',"00000000-0000-0000-0000-00000000023f" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000025c","ba5eda7a-def5-0000-0000-000000000000",'Env_String',' @@TAGS-01-0007
',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000025f","ba5eda7a-def5-0000-0000-000000000000",'Env_Number','',0,'',"00000000-0000-0000-0000-00000000025c" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000026b","ba5eda7a-def5-0000-0000-000000000000",'An_Untagged_Local_Terminator','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000026f","ba5eda7a-def5-0000-0000-000000000000",'An_Untagged_Project_Terminator','',0,'',"00000000-0000-0000-0000-00000000026b" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000273","ba5eda7a-def5-0000-0000-000000000000",'Untagged_Operational_Terminator','',0,'',"00000000-0000-0000-0000-00000000026f" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001ab","00000000-0000-0000-0000-0000000001a8","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001ad","00000000-0000-0000-0000-0000000001a8","ba5eda7a-def5-0000-0000-000000000002",'Returned_Test_Number','',1,'',"00000000-0000-0000-0000-0000000001ab" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001bb","00000000-0000-0000-0000-0000000001b8","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001bd","00000000-0000-0000-0000-0000000001b8","ba5eda7a-def5-0000-0000-000000000002",'Returned_Test_Number','',1,'',"00000000-0000-0000-0000-0000000001bb" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001c3","00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001c5","00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000004",'Testing_For','',0,'',"00000000-0000-0000-0000-0000000001c3" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001c7","00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000002",'Failure','',0,'',"00000000-0000-0000-0000-0000000001c5" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001c9","00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000001",'It_Is_Supported','',0,'',"00000000-0000-0000-0000-0000000001c7" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001cf","00000000-0000-0000-0000-0000000001cc","00000000-0000-0000-0000-000000000064",'Input_Test_Data','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d1","00000000-0000-0000-0000-0000000001cc","00000000-0000-0000-0000-000000000064",'Output_Test_Data','',1,'',"00000000-0000-0000-0000-0000000001cf" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d7","00000000-0000-0000-0000-0000000001d4","ba5eda7a-def5-0000-0000-000000000002",'Start_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d9","00000000-0000-0000-0000-0000000001d4","ba5eda7a-def5-0000-0000-000000000001",'Supported','',0,'',"00000000-0000-0000-0000-0000000001d7" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001db","00000000-0000-0000-0000-0000000001d4","ba5eda7a-def5-0000-0000-000000000002",'Final_Test_Number','',1,'',"00000000-0000-0000-0000-0000000001d9" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e1","00000000-0000-0000-0000-0000000001de","ba5eda7a-def5-0000-0000-000000000002",'Start_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e3","00000000-0000-0000-0000-0000000001de","ba5eda7a-def5-0000-0000-000000000001",'Supported','',0,'',"00000000-0000-0000-0000-0000000001e1" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e5","00000000-0000-0000-0000-0000000001de","ba5eda7a-def5-0000-0000-000000000002",'Final_Test_Number','',1,'',"00000000-0000-0000-0000-0000000001e3" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000209","00000000-0000-0000-0000-000000000207","ba5eda7a-def5-0000-0000-000000000002",'Incoming_Parameter_1','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000020a","00000000-0000-0000-0000-000000000207","ba5eda7a-def5-0000-0000-000000000002",'Outgoing_Parameter_1','',1,'',"00000000-0000-0000-0000-000000000209" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000020d","00000000-0000-0000-0000-00000000020b","ba5eda7a-def5-0000-0000-000000000002",'Incoming_Parameter_3','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000020e","00000000-0000-0000-0000-00000000020b","ba5eda7a-def5-0000-0000-000000000002",'Outgoing_Parameter_3','',1,'',"00000000-0000-0000-0000-00000000020d" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000211","00000000-0000-0000-0000-00000000020f","ba5eda7a-def5-0000-0000-000000000002",'Mickey_Mouse_Input_One','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000212","00000000-0000-0000-0000-00000000020f","ba5eda7a-def5-0000-0000-000000000002",'Minnie_Mouse_Output_One','',1,'',"00000000-0000-0000-0000-000000000211" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000215","00000000-0000-0000-0000-000000000213","ba5eda7a-def5-0000-0000-000000000002",'Input_Two','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000216","00000000-0000-0000-0000-000000000213","ba5eda7a-def5-0000-0000-000000000002",'Output_Two','',1,'',"00000000-0000-0000-0000-000000000215" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000226","00000000-0000-0000-0000-000000000224","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000227","00000000-0000-0000-0000-000000000224","ba5eda7a-def5-0000-0000-000000000004",'Requid','',0,'',"00000000-0000-0000-0000-000000000226" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000228","00000000-0000-0000-0000-000000000224","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Domain','',0,'',"00000000-0000-0000-0000-000000000227" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000229","00000000-0000-0000-0000-000000000224","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Object','',0,'',"00000000-0000-0000-0000-000000000228" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000022a","00000000-0000-0000-0000-000000000224","ba5eda7a-def5-0000-0000-000000000004",'Purpose','',0,'',"00000000-0000-0000-0000-000000000229" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000022d","00000000-0000-0000-0000-00000000022b","ba5eda7a-def5-0000-0000-000000000004",'Test_Object_Domain','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000022e","00000000-0000-0000-0000-00000000022b","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-00000000022d" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000022f","00000000-0000-0000-0000-00000000022b","ba5eda7a-def5-0000-0000-000000000002",'Test_Value','',0,'',"00000000-0000-0000-0000-00000000022e" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000232","00000000-0000-0000-0000-000000000230","ba5eda7a-def5-0000-0000-000000000004",'Failed_Domain_Object','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000233","00000000-0000-0000-0000-000000000230","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Number','',0,'',"00000000-0000-0000-0000-000000000232" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000234","00000000-0000-0000-0000-000000000230","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Value','',0,'',"00000000-0000-0000-0000-000000000233" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000237","00000000-0000-0000-0000-000000000235","ba5eda7a-def5-0000-0000-000000000002",'Unsupported_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000023a","00000000-0000-0000-0000-000000000238","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000023b","00000000-0000-0000-0000-000000000238","ba5eda7a-def5-0000-0000-000000000004",'Free_Text','',0,'',"00000000-0000-0000-0000-00000000023a" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000023e","00000000-0000-0000-0000-00000000023c","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000241","00000000-0000-0000-0000-00000000023f","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000242","00000000-0000-0000-0000-00000000023f","ba5eda7a-def5-0000-0000-000000000002",'This_Domain_Number','',0,'',"00000000-0000-0000-0000-000000000241" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000245","00000000-0000-0000-0000-000000000243","ba5eda7a-def5-0000-0000-000000000002",'Requid_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000246","00000000-0000-0000-0000-000000000243","ba5eda7a-def5-0000-0000-000000000004",'The_Requid_Itself','',0,'',"00000000-0000-0000-0000-000000000245" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000025e","00000000-0000-0000-0000-00000000025c","ba5eda7a-def5-0000-0000-000000000004",'Env_Text','',1,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000261","00000000-0000-0000-0000-00000000025f","ba5eda7a-def5-0000-0000-000000000002",'Env_Integer','',1,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000026d","00000000-0000-0000-0000-00000000026b","ba5eda7a-def5-0000-0000-000000000002",'Incoming_Parameter_2','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000026e","00000000-0000-0000-0000-00000000026b","ba5eda7a-def5-0000-0000-000000000002",'Outgoing_Parameter_2','',1,'',"00000000-0000-0000-0000-00000000026d" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000271","00000000-0000-0000-0000-00000000026f","ba5eda7a-def5-0000-0000-000000000002",'Incoming_Parameter_4','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000272","00000000-0000-0000-0000-00000000026f","ba5eda7a-def5-0000-0000-000000000002",'Outgoing_Parameter_4','',1,'',"00000000-0000-0000-0000-000000000271" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000001a6","00000000-0000-0000-0000-0000000001a4","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000001a7" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000205","00000000-0000-0000-0000-000000000203","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000206" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000222","00000000-0000-0000-0000-000000000220","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000223" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-00000000025a","00000000-0000-0000-0000-000000000258","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-00000000025b" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000269","00000000-0000-0000-0000-000000000267","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-00000000026a" );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000001a7","00000000-0000-0000-0000-000000000023",'TAGS',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000206","00000000-0000-0000-0000-000000000023",'Tagged_Terminator',0,0,'TT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000223","00000000-0000-0000-0000-000000000023",'Report',0,0,'RPT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-00000000025b","00000000-0000-0000-0000-000000000023",'Env_Terminator',0,0,'ET' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-00000000026a","00000000-0000-0000-0000-000000000023",'Untagged_Terminator',0,0,'UT' );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000217","00000000-0000-0000-0000-000000000207","00000000-0000-0000-0000-000000000205" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000219","00000000-0000-0000-0000-00000000020b","00000000-0000-0000-0000-000000000205" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-00000000021b","00000000-0000-0000-0000-00000000020f","00000000-0000-0000-0000-000000000205" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-00000000021d","00000000-0000-0000-0000-000000000213","00000000-0000-0000-0000-000000000205" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000247","00000000-0000-0000-0000-000000000224","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000249","00000000-0000-0000-0000-00000000022b","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-00000000024b","00000000-0000-0000-0000-000000000230","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-00000000024d","00000000-0000-0000-0000-000000000235","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-00000000024f","00000000-0000-0000-0000-000000000238","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000251","00000000-0000-0000-0000-00000000023c","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000253","00000000-0000-0000-0000-00000000023f","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000255","00000000-0000-0000-0000-000000000243","00000000-0000-0000-0000-000000000222" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000262","00000000-0000-0000-0000-00000000025c","00000000-0000-0000-0000-00000000025a" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000264","00000000-0000-0000-0000-00000000025f","00000000-0000-0000-0000-00000000025a" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000275","00000000-0000-0000-0000-00000000026b","00000000-0000-0000-0000-000000000269" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000277","00000000-0000-0000-0000-00000000026f","00000000-0000-0000-0000-000000000269" );
INSERT INTO SPR_REP VALUES ( "00000000-0000-0000-0000-000000000279","00000000-0000-0000-0000-000000000273","00000000-0000-0000-0000-000000000269" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b2c","00000000-0000-0000-0000-0000000001a8","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b2e","00000000-0000-0000-0000-0000000001b0","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b30","00000000-0000-0000-0000-0000000001b4","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b32","00000000-0000-0000-0000-0000000001b8","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b34","00000000-0000-0000-0000-0000000001c0","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b36","00000000-0000-0000-0000-0000000001cc","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b38","00000000-0000-0000-0000-0000000001d4","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b3a","00000000-0000-0000-0000-0000000001de","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b3c","00000000-0000-0000-0000-0000000001e8","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b3e","00000000-0000-0000-0000-0000000001ec","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b40","00000000-0000-0000-0000-0000000001f0","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b42","00000000-0000-0000-0000-0000000001f4","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b44","00000000-0000-0000-0000-0000000001f8","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b46","00000000-0000-0000-0000-0000000001fc","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000b48","00000000-0000-0000-0000-000000000200","00000000-0000-0000-0000-0000000001a6" );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000217",'','','# This is a tagged local terminator, and should not be translated into Ada.

Local_Variable = Incoming_Parameter_1

Outgoing_Parameter_1 = Local_Variable',3,2,1 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000219",'','','',3,2,3 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-00000000021b",'','','',3,2,2 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-00000000021d",'','','',3,2,4 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000247",'','','Local_Test_Number = Test_Number

#$INLINE

# fprintf(stderr, " \n");
# fprintf(stderr, "Test Number                 %d\n", Local_Test_Number);

#$ENDINLINE


#$ADA_INLINE
# with Ada.Text_IO;
#
# Ada.Text_IO.New_Line(1);
# Ada.Text_IO.Put_Line("Test Number " & integer''image(integer(Local_Test_Number)));
# Ada.Text_IO.New_Line(1);
#
#$END_ADAINLINE

',3,2,1 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000249",'','','
the_test = Test_Number

#$INLINE
#fprintf(stderr, "Test Number %d has PASSED \n", the_test);
#$ENDINLINE



',3,2,2 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-00000000024b",'','','
the_test = Failed_Test_Number
domain   = Failed_Domain_Object
fail_value = Failed_Test_Value

$INLINE
fprintf(stderr, "Test Number %d has FAILED with %d\n", the_test, fail_value);
fprintf(stderr, "Testing for %s\n", domain);
$ENDINLINE




',3,2,3 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-00000000024d",'','','
the_test = Unsupported_Test_Number

#$INLINE
#fprintf(stderr, "Test Number %d is UNSUPPORTED \n", the_test);
#$ENDINLINE


',3,2,4 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-00000000024f",'','','',3,2,5 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000251",'','','',3,2,6 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000253",'','','',3,2,7 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000255",'','','',3,2,8 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000262",'','','Env_Text = "ISIM"
',3,2,1 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000264",'','','# @@TAGS-01-0008
Env_Integer = 1
',3,2,2 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000275",'','','Local = Incoming_Parameter_2

Outgoing_Parameter_2 = Local
',3,2,1 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000277",'','','',3,2,2 );
INSERT INTO SPR_RO VALUES ( "00000000-0000-0000-0000-000000000279",'','','',3,2,3 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b2c",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b2e",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b30",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b32",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b34",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b36",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b38",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b3a",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b3c",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b3e",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b40",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b42",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b44",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b46",'','','',3,6,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000b48",'','','',3,6,0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-00000000035d",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000483",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000545",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-00000000058f",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000699",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-0000000007cc",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000820",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-0000000008ee",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000939",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000984",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-0000000009cf",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000a21",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000a79",'',0 );
INSERT INTO SM_SM VALUES ( "00000000-0000-0000-0000-000000000acb",'',0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'Act',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'Exterminate',3,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'Expire',4,1 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'Check_State',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'Self_Terminate',3,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-00000000054d","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000556","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000",'Tests_Complete',2,1 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'Do_Something',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'Delete_Self',3,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'Do_Some_More_Tests',4,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'Do_Something',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'Delete_One_Self',3,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'More_Tests',4,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000007d4","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000007dd","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000",'State_1',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000828","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000831","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000",'State_One',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000008f6","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000008ff","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000",'Active',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000941","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-00000000094a","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000",'Under_Power',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-00000000098c","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000995","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000",'Blast_Off',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000009d7","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-0000000009e0","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'Not_Idle',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000a35","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000a44","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000",'Sub_One_State',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000a87","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000a96","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000",'Sub_Two_State',2,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000ad9","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000",'Idle',1,0 );
INSERT INTO SM_STATE VALUES ( "00000000-0000-0000-0000-000000000ae8","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000",'Sub_Three_State',2,0 );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",1,'Start_Your_Engines',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",2,'Switch_Off',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",3,'Floor_It',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",4,'Crash_It',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",1,'Start',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",2,'Finish',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",3,'Reset',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000",1,'Tests_Are_Over',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",1,'Start',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",2,'Finish',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",3,'Lets_Test',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",4,'Phoenix',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",1,'Start',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",2,'Finish',0,'','',' @@TAGS-01-0006
' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",3,'Phoenix',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",4,'Do_More',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000",1,'Run',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000",1,'Go',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000",1,'Go',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000",1,'Go',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000",1,'Go',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",1,'Get_Off_Your_Arse',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000a29","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",1,'Get_Off_Your_Arse',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000",1,'Get_Off_Your_Arse',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000",1,'Get_Off_Your_Arse',0,'','','' );
INSERT INTO SM_EVT VALUES ( "00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000",1,'Get_Off_Your_Arse',0,'','','' );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000054d","00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000556","00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000007d4","00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000007dd","00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000828","00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000831","00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000008f6","00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000008ff","00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000941","00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000094a","00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-00000000098c","00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000995","00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000009d7","00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-0000000009e0","00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000a35","00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000a44","00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000a87","00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000a96","00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000ad9","00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEME VALUES ( "00000000-0000-0000-0000-000000000ae8","00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000403","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000041d","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000042b","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000439","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000450","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-0000000004fa","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000511","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000051f","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000571","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-00000000054d","00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000643","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000651","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000065f","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000066d","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000067b","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000074d","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000075b","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000769","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000777","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000785","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-0000000007fa","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-0000000007d4","00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000084e","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000828","00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-00000000091c","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-0000000008f6","00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000967","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000941","00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-0000000009b2","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-00000000098c","00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-0000000009fb","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-0000000009d7","00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000a53","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000a35","00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000aa5","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000a87","00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NSTXN VALUES ( "00000000-0000-0000-0000-000000000af7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000ad9","00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-0000000007dd","00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000831","00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-0000000009e0","00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000a44","00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000a96","00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_EIGN VALUES ( "00000000-0000-0000-0000-000000000ae8","00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000556","00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-0000000008ff","00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-00000000094a","00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_CH VALUES ( "00000000-0000-0000-0000-000000000995","00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000403","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000036e","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000041d","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000365","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000042b","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000377","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000439","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000450","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000380","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-0000000004fa","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000494","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000511","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-00000000049d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000051f","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-00000000048b","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000571","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000556","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000643","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005a0","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000651","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005b2","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000065f","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005a9","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000066d","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000067b","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000597","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000074d","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006aa","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000075b","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006b3","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000769","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006bc","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000777","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000785","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006a1","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-0000000007fa","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-0000000007dd","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000084e","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000831","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-00000000091c","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-0000000008ff","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000967","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-00000000094a","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-0000000009b2","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000995","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-0000000009fb","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-0000000009e0","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000a53","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000a44","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000aa5","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000a96","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TXN VALUES ( "00000000-0000-0000-0000-000000000af7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000ae8","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000545" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-0000000007cc" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000820" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-0000000008ee" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000939" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000984" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-0000000009cf" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000a21" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000a79" );
INSERT INTO SM_MOORE VALUES ( "00000000-0000-0000-0000-000000000acb" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000367","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000365" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000370","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000036e" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000379","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000377" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000382","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000380" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-00000000048d","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-00000000048b" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000496","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000494" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-00000000049f","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-00000000049d" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-00000000054f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-00000000054d" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000558","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000556" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000599","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000597" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000005a2","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005a0" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000005ab","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005a9" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000005b4","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-0000000005b2" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000006a3","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006a1" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000006ac","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006aa" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000006b5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006b3" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000006be","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-0000000006bc" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000007d6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-0000000007d4" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000007df","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-0000000007dd" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-00000000082a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000828" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000833","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000831" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000008f8","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-0000000008f6" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000901","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-0000000008ff" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000943","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000941" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-00000000094c","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-00000000094a" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-00000000098e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-00000000098c" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000997","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000995" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000009d9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-0000000009d7" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-0000000009e2","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-0000000009e0" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000a37","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000a35" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000a46","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000a44" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000a89","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000a87" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000a98","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000a96" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000adb","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000ad9" );
INSERT INTO SM_MOAH VALUES ( "00000000-0000-0000-0000-000000000aea","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000ae8" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000367","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000370","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000379","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000382","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000407","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000421","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000042f","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000043d","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000454","00000000-0000-0000-0000-00000000035d" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000048d","00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000496","00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000049f","00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000004fe","00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000515","00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000523","00000000-0000-0000-0000-000000000483" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000054f","00000000-0000-0000-0000-000000000545" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000558","00000000-0000-0000-0000-000000000545" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000575","00000000-0000-0000-0000-000000000545" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000599","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000005a2","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000005ab","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000005b4","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000647","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000655","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000663","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000671","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000067f","00000000-0000-0000-0000-00000000058f" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000006a3","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000006ac","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000006b5","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000006be","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000751","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000075f","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000076d","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000077b","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000789","00000000-0000-0000-0000-000000000699" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000007d6","00000000-0000-0000-0000-0000000007cc" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000007df","00000000-0000-0000-0000-0000000007cc" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000007fe","00000000-0000-0000-0000-0000000007cc" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000082a","00000000-0000-0000-0000-000000000820" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000833","00000000-0000-0000-0000-000000000820" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000852","00000000-0000-0000-0000-000000000820" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000008f8","00000000-0000-0000-0000-0000000008ee" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000901","00000000-0000-0000-0000-0000000008ee" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000920","00000000-0000-0000-0000-0000000008ee" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000943","00000000-0000-0000-0000-000000000939" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000094c","00000000-0000-0000-0000-000000000939" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000096b","00000000-0000-0000-0000-000000000939" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-00000000098e","00000000-0000-0000-0000-000000000984" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000997","00000000-0000-0000-0000-000000000984" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000009b6","00000000-0000-0000-0000-000000000984" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000009d9","00000000-0000-0000-0000-0000000009cf" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000009e2","00000000-0000-0000-0000-0000000009cf" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-0000000009ff","00000000-0000-0000-0000-0000000009cf" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000a37","00000000-0000-0000-0000-000000000a21" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000a46","00000000-0000-0000-0000-000000000a21" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000a57","00000000-0000-0000-0000-000000000a21" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000a89","00000000-0000-0000-0000-000000000a79" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000a98","00000000-0000-0000-0000-000000000a79" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000aa9","00000000-0000-0000-0000-000000000a79" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000adb","00000000-0000-0000-0000-000000000acb" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000aea","00000000-0000-0000-0000-000000000acb" );
INSERT INTO SM_AH VALUES ( "00000000-0000-0000-0000-000000000afb","00000000-0000-0000-0000-000000000acb" );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000367","00000000-0000-0000-0000-00000000035d",3,'# Update ''Result'' attribute to show that we have transitioned back here 
# from the ''act'' state

local_data = this.Result 

local_data = local_data + 100

this.Result = local_data','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000370","00000000-0000-0000-0000-00000000035d",3,'# Update the results attribute to show that we got here at least.

local_data = this.Result

local_data = local_data + Value_To_Add

this.Result = local_data

','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000379","00000000-0000-0000-0000-00000000035d",3,'# Show that we got here from the ''Act'' state

local_data = this.Result

local_data = local_data + 10

this.Result = local_data',' This state shall show that a tagged active instance can 
 arrive at this state, and this should therefore prevent 
 another instance of this object being created until it 
 is deleted, or by being forced into the Expire state.
',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000382","00000000-0000-0000-0000-00000000035d",3,'delete this',' This state shall delete this instance on the active object.
 The purpose of this is to prove that a tagged active object
 can be deleted by itself, and so can then be recreated
 later.
',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000407","00000000-0000-0000-0000-00000000035d",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000421","00000000-0000-0000-0000-00000000035d",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000042f","00000000-0000-0000-0000-00000000035d",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000043d","00000000-0000-0000-0000-00000000035d",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000454","00000000-0000-0000-0000-00000000035d",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000048d","00000000-0000-0000-0000-000000000483",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000496","00000000-0000-0000-0000-000000000483",3,'[] = RPT1:Start_Test[Test_Number, "Null Requid", "Tagged", "Active Object", Testing_For]

# Known bug in I-SIM

local_IH = Active_IH

if local_IH = UNDEFINED then

   if Your_Presence_Is_Required = FALSE then
      [] = RPT2:Test_Passed[Testing_For, Test_Number, 0]
   else
      [] = RPT3:Test_Failed[Testing_For, Test_Number, -1]
   endif

else

   # Can''t rely on the passed IH still being current (deep shallow copy etc)
   # The problem arises when the scenario generates the Crash_It event to 
   # the active object. This deletes the active object, but the instance handle
   # local to the scenario isn''t updated, as it is only a shallow copy of the 
   # instance.

   # So try to find the instance indicated by the passed IH

   My_Active_Object = find-one An_Active_Object where Unique_Identifier = local_IH.Unique_Identifier
   My_Test_Data     = find-one Test_Data

   # If it still exists
   if My_Active_Object != UNDEFINED then

      # and we want it to still exist
      if Your_Presence_Is_Required then

         The_Result = My_Active_Object.Result

         # and it has the correct result
         if Expected = The_Result then
            [] = RPT2:Test_Passed[Testing_For, Test_Number, Expected]
         else
            [] = RPT3:Test_Failed[Testing_For, Test_Number, The_Result]
         endif

      # else it still exists, but we weren''t expecting it to be
      else

         # Is this an I-SIM run
         if My_Test_Data.Environment = ''ISIM'' then
            [] = RPT4:Test_Unsupported[Test_Number]
            # Must be a WACA run, therefore this is a problem
         else
            [] = RPT3:Test_Failed[Testing_For, Test_Number, -2]
         endif

      endif

   # else it doesn''t exist
   else

      # but we expected it to
      if Your_Presence_Is_Required then
         # Active Object should have been found but wasn''t
         [] = RPT3:Test_Failed[Testing_For, Test_Number, -3]
      else
         # Active Object should not have been found, and wasn''t!
         [] = RPT2:Test_Passed[Testing_For, Test_Number, Expected]
      endif

   endif

endif


if Call_To_Reset then
   # Transition back into the idle state to check more Active object operations.
   generate CHECK3:Reset() to this
else
   # Final test in active test set. bTidy up and report
   generate CHECK2:Finish() to this
endif','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000049f","00000000-0000-0000-0000-000000000483",3,'#[] = TAGS3::Delete_Report_Domain[]

delete this
','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000004fe","00000000-0000-0000-0000-000000000483",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000515","00000000-0000-0000-0000-000000000483",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000523","00000000-0000-0000-0000-000000000483",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000054f","00000000-0000-0000-0000-000000000545",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000558","00000000-0000-0000-0000-000000000545",3,'[] = TAGS3::Delete_Report_Domain[]

delete this
','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000575","00000000-0000-0000-0000-000000000545",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000599","00000000-0000-0000-0000-00000000058f",3,'my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif


if this.Result = Final_Value then
   Failure_Value = 0
else
   Failure_Value = 1
endif

if Tell_Tales then
   [] = TAGS5::Report_Now[Test_Number, Purpose, Failure_Value, Supported]
endif

','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000005a2","00000000-0000-0000-0000-00000000058f",3,'[] = RPT1:Start_Test [Test_Number, "Null Requid", "Tagging", "Single Array Active Object", Purpose]

this.Result = Add

Test_Purpose = Purpose
Test_Expected_Result = Expected_Result
Number_Of_Test = Test_Number

generate AAAOOO2:Finish(Test_Expected_Result,Number_Of_Test,Test_Purpose, TRUE) to this



','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000005ab","00000000-0000-0000-0000-00000000058f",3,'my_test = find-one Test_Data

Test = my_test.Number

This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1 - This test shall prove that this instance can delete itself, and 
#          another created in it''s place.

#--------------------------------------------------------------------------

   [] = RPT1:Start_Test [Test, "Null Requid", "Tagging", "Single Array Active Object", "Delete self"]

   # There should be no more events queued to this instance, so delete it.
   delete this

   if this = UNDEFINED then
      Failure_Value = 0
   else
      Failure_Value = 1
   endif

   [] = TAGS5::Report_Now[Test, "Delete self", Failure_Value, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - Create new instance This is an asynchronous test.
#--------------------------------------------------------------------------

   New_Single = create unique An_Active_Array_Of_One_Object with Result = 0 & Current_State = ''Idle''

   Value_To_Add = 20
   Expected_Result_Value = 20

   generate AAAOOO1:Start(Test, Value_To_Add, "Create new instance", Expected_Result_Value) to New_Single

# End Test 2

#--------------------------------------------------------------------------
# Perhaps this will generate an event onto the queue, which will be processed after
# the finish event is generated from Replacement_Instance
#--------------------------------------------------------------------------
generate TD1:Tests_Are_Over() to my_test

Test = Test + 1

#--------------------------------------------------------------------------

my_test.Number = Test','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000005b4","00000000-0000-0000-0000-00000000058f",3,'# The array of 1 should be treated exactly the same way as an object tagged
# SINGLETON.

# Create first of the single active array objects.

my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1- This will be a synchronous test.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Single Array Active Object", "Inhibit second instance"]

   # This test shall prove that a second instance is not allowed. NB the first instance is actually
   # the instance we are currently in, ie. this state in ''this''

   # Second_Single = create unique An_Active_Array_Of_One_Object with Result = 0 & Current_State = ''Idle''

   # {Set_Of_Single_Array} = find-all An_Active_Array_Of_One_Object

   # Number_Of_Single_Array = countof {Set_Of_Single_Array}

   # Should only be 1, but reporter widget expects a zero in the Failure field for a pass.
   # So if there are more than one instances found, this should be reported as an
   # error.

   # Failure_Value = Number_Of_Single_Array - 1

   # [] = TAGS5::Report_Now[Test, "Inhibit second instance", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - Prove that the instance handle for the second instance is 
#          UNDEFINED, or in ada''s case, NULL.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Single Array Active Object", "Second instance is null"]

   # if Second_Single = UNDEFINED then
   #   Failure_Value = 0
   # else
   #   Failure_Value = 1
   # It isn''t supposed to be here, so get rid of it.
   #   delete Second_Single
   # endif

   # [] = TAGS5::Report_Now[Test, "Second instance is null", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------
my_test.Number = Test

# Transistion back into ''Idle'' state, but don''t report anything.
generate AAAOOO2:Finish(0,0,"null", FALSE) to this
','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000647","00000000-0000-0000-0000-00000000058f",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000655","00000000-0000-0000-0000-00000000058f",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000663","00000000-0000-0000-0000-00000000058f",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000671","00000000-0000-0000-0000-00000000058f",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000067f","00000000-0000-0000-0000-00000000058f",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000006a3","00000000-0000-0000-0000-000000000699",3,'my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

if this.Result = Final_Value then
   Failure_Value = 0
else
   Failure_Value = 1
endif

if Tell_Tales then
   [] = TAGS5::Report_Now[Test_Number, Purpose, Failure_Value, Supported]
endif

','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000006ac","00000000-0000-0000-0000-000000000699",3,'[] = RPT1:Start_Test [Test_Number, "Null Requid", "Tagging", "Multiple Array Active Object", Purpose]

this.Result = Add

Test_Purpose = Purpose
Test_Expected_Result = Expected_Result
Number_Of_Test = Test_Number

generate AAAOTO2:Finish(Test_Expected_Result,Number_Of_Test,Test_Purpose, TRUE) to this



','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000006b5","00000000-0000-0000-0000-000000000699",3,'my_test = find-one Test_Data

Test = my_test.Number

This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1 - This test shall prove that this instance can delete itself, and another
#          created in it''s place.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test [Test, "Null Requid", "Tagging", "Multiple Array Active Object", "Delete self"]

   # There should be no more events queued to this instance, so delete it.
   delete this

   # You would think that since ''this'' no longer exists, any further processing here is
   # at best irrelevant, or at worst illegal. However, further processing still takes place,
   # but any access to this.attributes or identifiers is prevented, and the generation of an event
   # to this is also prevented. This has been tested fully in the Events domain.

   if this = UNDEFINED then
      Failure_Value = 0
   else
      Failure_Value = 1
   endif

   [] = TAGS5::Report_Now[Test, "Delete self", Failure_Value, Supported]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - Create new instance This is an asynchronous test.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test [Test, "Null Requid", "Tagging", "Multiple Array Active Object", "Recreate self"]

   Replacement_Instance = create unique An_Active_Array_Of_Three_Objects with Result = 0 & Current_State = ''Idle''

   if Replacement_Instance != UNDEFINED then
      Failure_Value = 0
   else
      Failure_Value = 1
   endif

   # Creation instances are not supported yet by WACA.
   if This_Environment = ''WACA'' then 
      Supported = FALSE
   else
      Supported = TRUE
   endif

   [] = TAGS5::Report_Now[Test, "Recreate self", Failure_Value, Supported]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------

Value_To_Add = 20
Expected_Result_Value = 20

generate AAAOTO1:Start(Test, Value_To_Add, "Create new instance", Expected_Result_Value) to Replacement_Instance

#--------------------------------------------------------------------------

Test = Test + 1

my_test.Number = Test','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000006be","00000000-0000-0000-0000-000000000699",3,'
my_test = find-one Test_Data

Test = my_test.Number
This_Environment = my_test.Environment

if This_Environment = ''WACA'' then 
   Supported = TRUE
else
   Supported = FALSE
endif

#--------------------------------------------------------------------------
# Test 1 - This will be a synchronous test.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Multiple Array Active Object", "Inhibit fourth instance"]

   # This test shall prove that a fourth instance is not allowed. 
   # Fourth = create unique An_Active_Array_Of_Three_Objects with Result = 0 & Current_State = ''Idle''
   # {Set_Of_Multiple_Array} = find-all An_Active_Array_Of_Three_Objects
   # Number_Of_Multiple_Array = countof {Set_Of_Multiple_Array}
   # Should only be 3, but reporter widget expects a zero in the Failure field for a pass.
   # So if there are more than one instances found, this should be reported as an
   # error.
   # All three allowable instances have been created in the synch service BEFORE the event which
   # caused this operation was generated. 
   # So there should be three instances in existance when this bit is processed.
   # That''s the theory anyway. If this is not so, then a failure will be logged.
   # Failure_Value = Number_Of_Multiple_Array - 3
   # [] = TAGS5::Report_Now[Test, "Inhibit fourth instance", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 1

#--------------------------------------------------------------------------
# Test 2 - Prove that the instance handle for the fourth instance is 
#          UNDEFINED, or in ada''s case, NULL.
#--------------------------------------------------------------------------

   [] = RPT1:Start_Test[Test, "Null Requid", "Tagging", "Multiple Array Active Object", "Fourth instance is null"]

   # if Fourth = UNDEFINED then
   #   Failure_Value = 0
   # else
   #   Failure_Value = 1
   #   # It isn''t supposed to be here, so get rid of it.
   #   delete Fourth
   #endif

   #[] = TAGS5::Report_Now[Test, "Fourth instance is null", Failure_Value, Supported]

   [] = RPT4:Test_Unsupported[Test]

   Test = Test + 1

# End Test 2

#--------------------------------------------------------------------------

my_test.Number = Test

# Transition back into ''Idle'' state, but don''t report anything.
generate AAAOTO2:Finish(0,0,"null", FALSE) to this
','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000751","00000000-0000-0000-0000-000000000699",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000075f","00000000-0000-0000-0000-000000000699",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000076d","00000000-0000-0000-0000-000000000699",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000077b","00000000-0000-0000-0000-000000000699",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000789","00000000-0000-0000-0000-000000000699",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000007d6","00000000-0000-0000-0000-0000000007cc",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000007df","00000000-0000-0000-0000-0000000007cc",3,'[] = RPT1:Start_Test[The_Test_No, "Null Requid", "Tagging", "Active Tagged Single object", "Generate ATSO"]

{Lots_Of_Many_Objects} = this -> R2.Active_Tagged_Many_Objects

how_many = countof {Lots_Of_Many_Objects}

if how_many = 1 then
   [] = RPT2:Test_Passed["Active Tagged Single Object", The_Test_No, 0]
else
   [] = RPT3:Test_Failed["Active Tagged Single Object", The_Test_No, how_many]
endif','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000007fe","00000000-0000-0000-0000-0000000007cc",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000082a","00000000-0000-0000-0000-000000000820",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000833","00000000-0000-0000-0000-000000000820",3,'[] = RPT1:Start_Test[ATMO_Test_No, "Null Requid", "Tagging", "Active Many Tagged Object", "generate to Active Many"]

Single_End = this -> R2.Active_Tagged_Single_Object

if Single_End != UNDEFINED then

   if Single_End.Attribute_One = this.Attribute_Two then
      [] = RPT2:Test_Passed["generate ATMO", ATMO_Test_No, 0]
   else
      [] = RPT3:Test_Failed["generate ATMO", ATMO_Test_No, -2]
   endif

else
   [] = RPT3:Test_Failed["generate ATMO", ATMO_Test_No, -1]
endif
   ','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000852","00000000-0000-0000-0000-000000000820",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000008f8","00000000-0000-0000-0000-0000000008ee",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000901","00000000-0000-0000-0000-0000000008ee",3,'[] = RPT1:Start_Test[ATML_Test_No, "1241-0000-01-0128", "Tagging", "Active Tagged Many", "generate to ATML"]

# Navigate to the set of instances and the single associated instance.
{Set_Of_Right} = this -> R5.Active_Tagged_Many_Right
{Set_Of_Assoc} = this -> R5.Active_Tagged_Single_Assoc

Found_Assoc = FALSE

for individual_assoc in {Set_Of_Assoc} do

   if individual_assoc.Attribute_Three = this.Attribute_One then
      Found_Assoc = TRUE
      break
   endif

endfor

Found_Right = FALSE

for individual_right in {Set_Of_Right} do

   if individual_right.Attribute_Two = this.Attribute_One then
      Found_Right = TRUE
      break
   endif

endfor

how_many_in_right = countof {Set_Of_Right}
how_many_in_assoc = countof {Set_Of_Assoc}

if how_many_in_assoc > 0 then

   # There should always be one or more linked instances on the right side
   if how_many_in_right > 0 then

      if Found_Right then

         if Found_Assoc then
            [] = RPT2:Test_Passed["generate to ATML", ATML_Test_No, 0]
         else
            [] = RPT3:Test_Failed["generate to ATML", ATML_Test_No, -1]
         endif

      else
         [] = RPT3:Test_Failed["generate to ATML", ATML_Test_No, -2]
      endif

   else
      [] = RPT3:Test_Failed["generate to ATML", ATML_Test_No, -3]
   endif

else
   [] = RPT3:Test_Failed["generate to ATML", ATML_Test_No, -4]
endif','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000920","00000000-0000-0000-0000-0000000008ee",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000943","00000000-0000-0000-0000-000000000939",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000094c","00000000-0000-0000-0000-000000000939",3,'[] = RPT1:Start_Test[ATMR_Test_No, "1241-0000-01-0128", "Tagging", "Active Tagged Many", "generate to ATMR"]

# Navigate to the set of instances and the single associated instance.
{Set_Of_Left} = this -> R5.Active_Tagged_Many_Left
{Set_Of_Assoc} = this -> R5.Active_Tagged_Single_Assoc

Found_Assoc = FALSE

for individual_assoc in {Set_Of_Assoc} do

   if individual_assoc.Attribute_Three = this.Attribute_Two then
      Found_Assoc = TRUE
      break
   endif

endfor

Found_Left = FALSE

for individual_left in {Set_Of_Left} do

   if individual_left.Attribute_One = this.Attribute_Two then
      Found_Left = TRUE
      break
   endif

endfor

how_many_in_left = countof {Set_Of_Left}
how_many_in_assoc = countof {Set_Of_Assoc}

if how_many_in_assoc > 0 then

   # There should always be one or more linked instances on the left side
   if how_many_in_left > 0 then

      if Found_Left then

         if Found_Assoc then
            [] = RPT2:Test_Passed["generate to ATMR", ATMR_Test_No, 0]
         else
            [] = RPT3:Test_Failed["generate to ATMR", ATMR_Test_No, -1]
         endif

      else
         [] = RPT3:Test_Failed["generate to ATMR", ATMR_Test_No, -2]
      endif

   else
      [] = RPT3:Test_Failed["generate to ATMR", ATMR_Test_No, -3]
   endif

else
   [] = RPT3:Test_Failed["generate to ATMR", ATMR_Test_No, -4]
endif
','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000096b","00000000-0000-0000-0000-000000000939",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-00000000098e","00000000-0000-0000-0000-000000000984",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000997","00000000-0000-0000-0000-000000000984",3,'[] = RPT1:Start_Test[ATS_ASSOC_Test_No, "1241-0000-01-0128", "Tagging", "Active Tagged Many", "generate to ATS_ASSOC"]

The_Left = this -> R5.Active_Tagged_Many_Left
The_Right = this -> R5.Active_Tagged_Many_Right

if The_Left != UNDEFINED then

   if The_Right != UNDEFINED then

      # If the left and right objects were ment to be linked with this
      if The_Right.Attribute_Two = The_Left.Attribute_One then

         if The_Right.Attribute_Two = this.Attribute_Three then
            [] = RPT2:Test_Passed["generate to ATS_ASSOC", ATS_ASSOC_Test_No, 0]
         else
            [] = RPT3:Test_Failed["generate to ATS_ASSOC", ATS_ASSOC_Test_No, -1]
         endif

         # Else the left and right objects are not the same, therefore
         # we can''t expect the assoc object to share the attribute value.
         # At least it is linked to a left and a right instance.
      else
         [] = RPT2:Test_Passed["generate to ATS_ASSOC", ATS_ASSOC_Test_No, 1]
      endif

   else
      [] = RPT3:Test_Failed["generate to ATS_ASSOC", ATS_ASSOC_Test_No, -2]
   endif

else
   [] = RPT3:Test_Failed["generate to ATS_ASSOC", ATS_ASSOC_Test_No, -3]
endif
','',2 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000009b6","00000000-0000-0000-0000-000000000984",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000009d9","00000000-0000-0000-0000-0000000009cf",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000009e2","00000000-0000-0000-0000-0000000009cf",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-0000000009ff","00000000-0000-0000-0000-0000000009cf",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000a37","00000000-0000-0000-0000-000000000a21",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000a46","00000000-0000-0000-0000-000000000a21",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000a57","00000000-0000-0000-0000-000000000a21",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000a89","00000000-0000-0000-0000-000000000a79",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000a98","00000000-0000-0000-0000-000000000a79",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000aa9","00000000-0000-0000-0000-000000000a79",3,'','',6 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000adb","00000000-0000-0000-0000-000000000acb",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000aea","00000000-0000-0000-0000-000000000acb",3,'','',0 );
INSERT INTO SM_ACT VALUES ( "00000000-0000-0000-0000-000000000afb","00000000-0000-0000-0000-000000000acb",3,'','',6 );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000003a7","00000000-0000-0000-0000-00000000035d",'Value_To_Add','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000004be","00000000-0000-0000-0000-000000000483",'Test_Number','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000004c0","00000000-0000-0000-0000-000000000483",'Active_IH','',"00000000-0000-0000-0000-00000000002d",'',"00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-0000000004be" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000004c2","00000000-0000-0000-0000-000000000483",'Testing_For','',"ba5eda7a-def5-0000-0000-000000000004",'',"00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-0000000004c0" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000004c4","00000000-0000-0000-0000-000000000483",'Expected','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-0000000004c2" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000004c6","00000000-0000-0000-0000-000000000483",'Your_Presence_Is_Required','',"ba5eda7a-def5-0000-0000-000000000001",'',"00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-0000000004c4" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000004c8","00000000-0000-0000-0000-000000000483",'Call_To_Reset','',"ba5eda7a-def5-0000-0000-000000000001",'',"00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-0000000004c6" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000005d9","00000000-0000-0000-0000-00000000058f",'Test_Number','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000005db","00000000-0000-0000-0000-00000000058f",'Add','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-0000000005d9" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000005dd","00000000-0000-0000-0000-00000000058f",'Purpose','',"ba5eda7a-def5-0000-0000-000000000004",'',"00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-0000000005db" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000005df","00000000-0000-0000-0000-00000000058f",'Expected_Result','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-0000000005dd" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000005ff","00000000-0000-0000-0000-00000000058f",'Final_Value','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-000000000601","00000000-0000-0000-0000-00000000058f",'Test_Number','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-0000000005ff" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-000000000603","00000000-0000-0000-0000-00000000058f",'Purpose','',"ba5eda7a-def5-0000-0000-000000000004",'',"00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-000000000601" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-000000000605","00000000-0000-0000-0000-00000000058f",'Tell_Tales','',"ba5eda7a-def5-0000-0000-000000000001",'',"00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-000000000603" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000006e3","00000000-0000-0000-0000-000000000699",'Test_Number','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000006e5","00000000-0000-0000-0000-000000000699",'Add','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-0000000006e3" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000006e7","00000000-0000-0000-0000-000000000699",'Purpose','',"ba5eda7a-def5-0000-0000-000000000004",'',"00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-0000000006e5" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000006e9","00000000-0000-0000-0000-000000000699",'Expected_Result','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-0000000006e7" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-000000000709","00000000-0000-0000-0000-000000000699",'Final_Value','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-00000000070b","00000000-0000-0000-0000-000000000699",'Test_Number','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000709" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-00000000070d","00000000-0000-0000-0000-000000000699",'Purpose','',"ba5eda7a-def5-0000-0000-000000000004",'',"00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-00000000070b" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-00000000070f","00000000-0000-0000-0000-000000000699",'Tell_Tales','',"ba5eda7a-def5-0000-0000-000000000001",'',"00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-00000000070d" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000007f8","00000000-0000-0000-0000-0000000007cc",'The_Test_No','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-00000000084c","00000000-0000-0000-0000-000000000820",'ATMO_Test_No','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-00000000091a","00000000-0000-0000-0000-0000000008ee",'ATML_Test_No','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-000000000965","00000000-0000-0000-0000-000000000939",'ATMR_Test_No','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_EVTDI VALUES ( "00000000-0000-0000-0000-0000000009b0","00000000-0000-0000-0000-000000000984",'ATS_ASSOC_Test_No','',"ba5eda7a-def5-0000-0000-000000000002",'',"00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000029" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000055" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000060" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-00000000006b" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000076" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-0000000000a2" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-0000000000ad" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000110" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-00000000011b" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000126" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000131" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-00000000013c" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000147" );
INSERT INTO SM_ISM VALUES ( "00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000152" );
INSERT INTO SM_PEVT VALUES ( "00000000-0000-0000-0000-000000000a29","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'','','' );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_SEVT VALUES ( "00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_NLEVT VALUES ( "00000000-0000-0000-0000-0000000009e9","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000a29","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_NLEVT VALUES ( "00000000-0000-0000-0000-000000000a33","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000a29","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_NLEVT VALUES ( "00000000-0000-0000-0000-000000000a85","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000a29","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_NLEVT VALUES ( "00000000-0000-0000-0000-000000000ad7","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000a29","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-000000000000",'' );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-000000000389","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000003a9","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000003c7","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000003e5","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000004a6","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000004ca","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000004e2","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-00000000055f","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000005bb","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000005e1","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-000000000607","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-000000000625","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000006c5","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000006eb","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-000000000711","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-00000000072f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-0000000007e6","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-00000000083a","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-000000000908","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-000000000953","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_LEVT VALUES ( "00000000-0000-0000-0000-00000000099e","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-000000000000" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000407","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000403" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000421","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000041d" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000042f","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-00000000042b" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000043d","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000439" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000454","00000000-0000-0000-0000-00000000035d","00000000-0000-0000-0000-000000000450" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-0000000004fe","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-0000000004fa" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000515","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-000000000511" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000523","00000000-0000-0000-0000-000000000483","00000000-0000-0000-0000-00000000051f" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000575","00000000-0000-0000-0000-000000000545","00000000-0000-0000-0000-000000000571" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000647","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000643" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000655","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-000000000651" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000663","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-00000000065f" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000671","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-00000000066d" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000067f","00000000-0000-0000-0000-00000000058f","00000000-0000-0000-0000-00000000067b" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000751","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-00000000074d" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000075f","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-00000000075b" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000076d","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000769" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000077b","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000777" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000789","00000000-0000-0000-0000-000000000699","00000000-0000-0000-0000-000000000785" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-0000000007fe","00000000-0000-0000-0000-0000000007cc","00000000-0000-0000-0000-0000000007fa" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000852","00000000-0000-0000-0000-000000000820","00000000-0000-0000-0000-00000000084e" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000920","00000000-0000-0000-0000-0000000008ee","00000000-0000-0000-0000-00000000091c" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-00000000096b","00000000-0000-0000-0000-000000000939","00000000-0000-0000-0000-000000000967" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-0000000009b6","00000000-0000-0000-0000-000000000984","00000000-0000-0000-0000-0000000009b2" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-0000000009ff","00000000-0000-0000-0000-0000000009cf","00000000-0000-0000-0000-0000000009fb" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000a57","00000000-0000-0000-0000-000000000a21","00000000-0000-0000-0000-000000000a53" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000aa9","00000000-0000-0000-0000-000000000a79","00000000-0000-0000-0000-000000000aa5" );
INSERT INTO SM_TAH VALUES ( "00000000-0000-0000-0000-000000000afb","00000000-0000-0000-0000-000000000acb","00000000-0000-0000-0000-000000000af7" );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000004",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000006",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000009",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000000c",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000000f",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000012",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000015",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000018",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000001b",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000001e",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000021",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000023",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",2 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000025",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000023",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000027",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000029",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000002d",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000030",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000034",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000038",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000003b",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000003f",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000043",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000046",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000004a",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000004e",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000051",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000055",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000059",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000005c",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000060",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000064",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000067",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000006b",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000006f",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000072",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000076",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000007a",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000007d",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000081",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000085",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000088",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000008c",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000090",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000093",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000097",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000009b",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000009e",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000a2",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000a6",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000a9",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000ad",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000b1",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000b4",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000b8",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000bc",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000bf",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000c3",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000c7",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000ca",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000ce",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000d2",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000d5",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000d9",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000dd",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000e0",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000e4",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000e8",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000eb",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000ef",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000f3",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000f6",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000fa",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000fe",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000101",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000105",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000109",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000010c",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000110",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000114",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000117",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000011b",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000011f",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000122",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000126",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000012a",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000012d",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000131",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000135",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000138",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000013c",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000140",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000143",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000147",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000014b",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000014e",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000152",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000156",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000159",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000015d",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000161",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000164",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000168",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000016c",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000016f",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000173",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000177",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000017a",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000017e",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000182",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000185",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000189",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",4 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000018d",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000190",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000194",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000023",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000196",1,"00000000-0000-0000-0000-000000000194","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000019a",1,"00000000-0000-0000-0000-000000000194","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001a0",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000023",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001a2",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001a4",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001af",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001b3",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001b7",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001bf",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001cb",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001d3",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001dd",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001e7",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001eb",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001ef",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001f3",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001f7",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001fb",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001ff",1,"00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000203",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000220",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000258",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000267",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000027c",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000023",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000027e",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000280",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000282",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000284",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000286",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000288",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000028a",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000028c",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000028e",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000290",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000292",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000294",1,"00000000-0000-0000-0000-00000000027c","00000000-0000-0000-0000-000000000000",1 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000296",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",9 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000002ab",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",9 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000002c0",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",9 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000002e5",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",9 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000030a",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",9 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000328",1,"00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000",9 );
INSERT INTO model VALUES ( 'maslin' );
INSERT INTO option VALUES ( 'maslin','actiondialect','WASL' );
INSERT INTO option VALUES ( 'maslin','projectroot','./convertdir/TAGS/' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000006","00000000-0000-0000-0000-000000000000",'MASLtype','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000009","00000000-0000-0000-0000-000000000000",'MASLunique','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000000c","00000000-0000-0000-0000-000000000000",'device','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000000f","00000000-0000-0000-0000-000000000000",'duration','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000012","00000000-0000-0000-0000-000000000000",'wstring','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000015","00000000-0000-0000-0000-000000000000",'long_integer','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000018","00000000-0000-0000-0000-000000000000",'byte','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000001b","00000000-0000-0000-0000-000000000000",'wcharacter','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000001e","00000000-0000-0000-0000-000000000000",'character','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000002d","00000000-0000-0000-0000-000000000000",'inst_ref<An_Active_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000030","00000000-0000-0000-0000-000000000000",'inst_ref_set<An_Active_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000038","00000000-0000-0000-0000-000000000000",'inst_ref<A_Passive_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000003b","00000000-0000-0000-0000-000000000000",'inst_ref_set<A_Passive_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000043","00000000-0000-0000-0000-000000000000",'inst_ref<A_Passive_Array_Of_One_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000046","00000000-0000-0000-0000-000000000000",'inst_ref_set<A_Passive_Array_Of_One_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000004e","00000000-0000-0000-0000-000000000000",'inst_ref<Report_Data>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000051","00000000-0000-0000-0000-000000000000",'inst_ref_set<Report_Data>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000059","00000000-0000-0000-0000-000000000000",'inst_ref<Check_On_Active_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000005c","00000000-0000-0000-0000-000000000000",'inst_ref_set<Check_On_Active_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000064","00000000-0000-0000-0000-000000000000",'inst_ref<Test_Data>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000067","00000000-0000-0000-0000-000000000000",'inst_ref_set<Test_Data>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000006f","00000000-0000-0000-0000-000000000000",'inst_ref<An_Active_Array_Of_One_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000072","00000000-0000-0000-0000-000000000000",'inst_ref_set<An_Active_Array_Of_One_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000007a","00000000-0000-0000-0000-000000000000",'inst_ref<An_Active_Array_Of_Three_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000007d","00000000-0000-0000-0000-000000000000",'inst_ref_set<An_Active_Array_Of_Three_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000085","00000000-0000-0000-0000-000000000000",'inst_ref<A_Passive_Array_Of_Three_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000088","00000000-0000-0000-0000-000000000000",'inst_ref_set<A_Passive_Array_Of_Three_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000090","00000000-0000-0000-0000-000000000000",'inst_ref<Single_Tagged_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000093","00000000-0000-0000-0000-000000000000",'inst_ref_set<Single_Tagged_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000009b","00000000-0000-0000-0000-000000000000",'inst_ref<Many_Tagged_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000009e","00000000-0000-0000-0000-000000000000",'inst_ref_set<Many_Tagged_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000a6","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Single_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000a9","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Single_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000b1","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Many_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000b4","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Many_Objects>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000bc","00000000-0000-0000-0000-000000000000",'inst_ref<Tagged_Many_Left>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000bf","00000000-0000-0000-0000-000000000000",'inst_ref_set<Tagged_Many_Left>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000c7","00000000-0000-0000-0000-000000000000",'inst_ref<Tagged_Many_Right>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000ca","00000000-0000-0000-0000-000000000000",'inst_ref_set<Tagged_Many_Right>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000d2","00000000-0000-0000-0000-000000000000",'inst_ref<Tagged_Single_Assoc>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000d5","00000000-0000-0000-0000-000000000000",'inst_ref_set<Tagged_Single_Assoc>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000dd","00000000-0000-0000-0000-000000000000",'inst_ref<Tagged_Many_Supertype>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000e0","00000000-0000-0000-0000-000000000000",'inst_ref_set<Tagged_Many_Supertype>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000e8","00000000-0000-0000-0000-000000000000",'inst_ref<Subtype_1>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000eb","00000000-0000-0000-0000-000000000000",'inst_ref_set<Subtype_1>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000f3","00000000-0000-0000-0000-000000000000",'inst_ref<Subtype_2>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000f6","00000000-0000-0000-0000-000000000000",'inst_ref_set<Subtype_2>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-0000000000fe","00000000-0000-0000-0000-000000000000",'inst_ref<Singleton_Glitch_Recovery>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000101","00000000-0000-0000-0000-000000000000",'inst_ref_set<Singleton_Glitch_Recovery>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000109","00000000-0000-0000-0000-000000000000",'inst_ref<Multiplicity_Glitch_Recovery>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000010c","00000000-0000-0000-0000-000000000000",'inst_ref_set<Multiplicity_Glitch_Recovery>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000114","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Many_Left>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000117","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Many_Left>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000011f","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Many_Right>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000122","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Many_Right>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000012a","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Single_Assoc>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000012d","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Single_Assoc>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000135","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Supertype>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000138","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Supertype>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000140","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Subtype_One>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000143","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Subtype_One>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000014b","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Subtype_Two>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000014e","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Subtype_Two>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000156","00000000-0000-0000-0000-000000000000",'inst_ref<Active_Tagged_Subtype_Three>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000159","00000000-0000-0000-0000-000000000000",'inst_ref_set<Active_Tagged_Subtype_Three>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000161","00000000-0000-0000-0000-000000000000",'inst_ref<Multiplicity_Single_Glitch_Recovery_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000164","00000000-0000-0000-0000-000000000000",'inst_ref_set<Multiplicity_Single_Glitch_Recovery_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000016c","00000000-0000-0000-0000-000000000000",'inst_ref<A_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000016f","00000000-0000-0000-0000-000000000000",'inst_ref_set<A_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000177","00000000-0000-0000-0000-000000000000",'inst_ref<A_Single_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000017a","00000000-0000-0000-0000-000000000000",'inst_ref_set<A_Single_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000182","00000000-0000-0000-0000-000000000000",'inst_ref<A_Multiple_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000185","00000000-0000-0000-0000-000000000000",'inst_ref_set<A_Multiple_Static_Object>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000018d","00000000-0000-0000-0000-000000000000",'inst_ref<Just_Multiple>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000190","00000000-0000-0000-0000-000000000000",'inst_ref_set<Just_Multiple>','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000196","00000000-0000-0000-0000-000000000000",'A_Tagged_Integer_Type',' a tagged integer with range 1 to 100
','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000019a","00000000-0000-0000-0000-000000000000",'Environment_Type',' @@TAGS-01-0009
','' );
