-- root-types-contained: Package_c
-- BP 7.1 content: StreamData syschar: 3 persistence-version: 7.1.6

INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000006","ba5eda7a-def5-0000-0000-000000000004",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000009","00000000-0000-0000-0000-000000000006",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000000c","00000000-0000-0000-0000-000000000006",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000000f","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000012","ba5eda7a-def5-0000-0000-000000000004",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000015","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000018","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000001b","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-00000000001e","ba5eda7a-def5-0000-0000-000000000002",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000049","00000000-0000-0000-0000-000000000006",0,'' );
INSERT INTO S_UDT VALUES ( "00000000-0000-0000-0000-000000000054","00000000-0000-0000-0000-000000000006",0,'' );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000002","00000000-0000-0000-0000-000000000002",'types','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000002","00000000-0000-0000-0000-000000000002",'TSV2','masl_project',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000025","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'TSV2','',0 );
INSERT INTO EP_PKG VALUES ( "00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000002",'Shared','',0 );
INSERT INTO C_C VALUES ( "00000000-0000-0000-0000-000000000023","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",'TSV2','',0,"00000000-0000-0000-0000-000000000000",0,'','TSV2' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-00000000002e","00000000-0000-0000-0000-000000000000",'DomainANavigate','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000072","00000000-0000-0000-0000-000000000000",'DomainAReport','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000000a9","00000000-0000-0000-0000-000000000000",'DomainATerminatorA','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000000de","00000000-0000-0000-0000-000000000000",'DomainBNavigate','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000000fd","00000000-0000-0000-0000-000000000000",'DomainBReport','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-00000000013e","00000000-0000-0000-0000-000000000000",'Creation_DeletionEnumeration_Terminator','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000148","00000000-0000-0000-0000-000000000000",'Creation_DeletionReport_Terminator','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000185","00000000-0000-0000-0000-000000000000",'Find_and_SetsReport','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000001bc","00000000-0000-0000-0000-000000000000",'Find_and_SetsWhere_Are_We','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000001cb","00000000-0000-0000-0000-000000000000",'Function_CallsNav_To_Bridge','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-0000000001e0","00000000-0000-0000-0000-000000000000",'Function_CallsReport','masl_temporary' );
INSERT INTO C_I VALUES ( "00000000-0000-0000-0000-000000000217","00000000-0000-0000-0000-000000000000",'Function_CallsWhere_Are_We','masl_temporary' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-000000000030",'','DomainANavigate','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-000000000074",'','DomainAReport','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000000ab",'','DomainATerminatorA','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000000e0",'','DomainBNavigate','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000000ff",'','DomainBReport','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-000000000140",'','Creation_DeletionEnumeration_Terminator','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-00000000014a",'','Creation_DeletionReport_Terminator','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-000000000187",'','Find_and_SetsReport','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000001be",'','Find_and_SetsWhere_Are_We','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000001cd",'','Function_CallsNav_To_Bridge','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-0000000001e2",'','Function_CallsReport','','' );
INSERT INTO C_P VALUES ( "00000000-0000-0000-0000-000000000219",'','Function_CallsWhere_Are_We','','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-00000000002b",'','masl_formalize','DomainA','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-0000000000db",'','masl_formalize','DomainB','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-000000000136",'','masl_formalize','RP','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-00000000013b",'','masl_formalize','Creation_Deletion','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-000000000182",'','masl_formalize','Find_and_Sets','' );
INSERT INTO C_R VALUES ( "00000000-0000-0000-0000-0000000001c8",'','masl_formalize','Function_Calls','' );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000032","00000000-0000-0000-0000-00000000002e",0,'Single_Bridge_Navigate','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000035","00000000-0000-0000-0000-00000000002e",0,'Shared_Bridge_Navigate','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000038","00000000-0000-0000-0000-00000000002e",0,'One_to_One_Navigate','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000003b","00000000-0000-0000-0000-00000000002e",0,'One_to_Many_Navigate','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000003e","00000000-0000-0000-0000-00000000002e",0,'Many_to_Many_Navigate','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000041","00000000-0000-0000-0000-00000000002e",0,'Misc_Calls','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000044","00000000-0000-0000-0000-00000000002e",0,'Enum_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000004b","00000000-0000-0000-0000-00000000002e",0,'Big_Bridge_Navigation','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000004f","00000000-0000-0000-0000-00000000002e",0,'Pass_IH','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000056","00000000-0000-0000-0000-00000000002e",0,'Pass_Parameters','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000076","00000000-0000-0000-0000-000000000072",0,'Start_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000007d","00000000-0000-0000-0000-000000000072",0,'Test_Passed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000082","00000000-0000-0000-0000-000000000072",0,'Test_Failed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000087","00000000-0000-0000-0000-000000000072",0,'Test_Unsupported','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000008a","00000000-0000-0000-0000-000000000072",0,'Test_Text','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000008e","00000000-0000-0000-0000-000000000072",0,'Domain_Test_Start','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000091","00000000-0000-0000-0000-000000000072",0,'Domain_Test_Finished','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000094","00000000-0000-0000-0000-000000000072",0,'Specify_Requid','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000000a9",0,'Sync1A','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000b4","00000000-0000-0000-0000-0000000000a9",0,'Sync2A','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000bb","00000000-0000-0000-0000-0000000000a9",0,'Sync3A','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000c2","00000000-0000-0000-0000-0000000000a9",0,'Sync4A','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000c9","00000000-0000-0000-0000-0000000000a9",0,'Common_Named_Object_Usage','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000e2","00000000-0000-0000-0000-0000000000de",0,'Navigate_One_to_One','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000e5","00000000-0000-0000-0000-0000000000de",0,'Navigate_One_to_Many','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000e8","00000000-0000-0000-0000-0000000000de",0,'Navigate_Many_to_Many','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000eb","00000000-0000-0000-0000-0000000000de",0,'Misc_Calls','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000000ee","00000000-0000-0000-0000-0000000000de",0,'Enum_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000101","00000000-0000-0000-0000-0000000000fd",0,'Start_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000108","00000000-0000-0000-0000-0000000000fd",0,'Test_Passed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000010d","00000000-0000-0000-0000-0000000000fd",0,'Test_Failed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000112","00000000-0000-0000-0000-0000000000fd",0,'Test_Unsupported','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000115","00000000-0000-0000-0000-0000000000fd",0,'Test_Text','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000119","00000000-0000-0000-0000-0000000000fd",0,'Domain_Test_Start','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000011c","00000000-0000-0000-0000-0000000000fd",0,'Domain_Test_Finished','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000011f","00000000-0000-0000-0000-0000000000fd",0,'Specify_Requid','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000142","00000000-0000-0000-0000-00000000013e",0,'Big_Bridge_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000014c","00000000-0000-0000-0000-000000000148",0,'Start_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000153","00000000-0000-0000-0000-000000000148",0,'Test_Passed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000158","00000000-0000-0000-0000-000000000148",0,'Test_Failed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000015d","00000000-0000-0000-0000-000000000148",0,'Test_Unsupported','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000160","00000000-0000-0000-0000-000000000148",0,'Test_Text','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000164","00000000-0000-0000-0000-000000000148",0,'Domain_Test_Start','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000167","00000000-0000-0000-0000-000000000148",0,'Domain_Test_Finished','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000016b","00000000-0000-0000-0000-000000000148",0,'Specify_Requid','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000189","00000000-0000-0000-0000-000000000185",0,'Start_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000190","00000000-0000-0000-0000-000000000185",0,'Test_Passed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000195","00000000-0000-0000-0000-000000000185",0,'Test_Failed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000019a","00000000-0000-0000-0000-000000000185",0,'Test_Unsupported','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000019d","00000000-0000-0000-0000-000000000185",0,'Test_Text','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001a1","00000000-0000-0000-0000-000000000185",0,'Domain_Test_Start','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001a4","00000000-0000-0000-0000-000000000185",0,'Domain_Test_Finished','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001a7","00000000-0000-0000-0000-000000000185",0,'Specify_Requid','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001c0","00000000-0000-0000-0000-0000000001bc",0,'What_Env','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001cf","00000000-0000-0000-0000-0000000001cb",0,'Call_Domain_Sync_Service','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001d5","00000000-0000-0000-0000-0000000001cb",0,'Call_Object_Sync_Service','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001e4","00000000-0000-0000-0000-0000000001e0",0,'Start_Test','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001eb","00000000-0000-0000-0000-0000000001e0",0,'Test_Passed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001f0","00000000-0000-0000-0000-0000000001e0",0,'Test_Failed','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001f5","00000000-0000-0000-0000-0000000001e0",0,'Test_Unsupported','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001f8","00000000-0000-0000-0000-0000000001e0",0,'Test_Text','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001fc","00000000-0000-0000-0000-0000000001e0",0,'Domain_Test_Start','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-0000000001ff","00000000-0000-0000-0000-0000000001e0",0,'Domain_Test_Finished','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-000000000202","00000000-0000-0000-0000-0000000001e0",0,'Specify_Requid','',0 );
INSERT INTO C_EP VALUES ( "00000000-0000-0000-0000-00000000021b","00000000-0000-0000-0000-000000000217",0,'What_Env','',0 );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000032","ba5eda7a-def5-0000-0000-000000000000",'Single_Bridge_Navigate','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000035","ba5eda7a-def5-0000-0000-000000000000",'Shared_Bridge_Navigate','',0,'',"00000000-0000-0000-0000-000000000032" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000038","ba5eda7a-def5-0000-0000-000000000000",'One_to_One_Navigate','',0,'',"00000000-0000-0000-0000-000000000035" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000003b","ba5eda7a-def5-0000-0000-000000000000",'One_to_Many_Navigate','',0,'',"00000000-0000-0000-0000-000000000038" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000003e","ba5eda7a-def5-0000-0000-000000000000",'Many_to_Many_Navigate','',0,'',"00000000-0000-0000-0000-00000000003b" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000041","ba5eda7a-def5-0000-0000-000000000000",'Misc_Calls','',0,'',"00000000-0000-0000-0000-00000000003e" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000044","ba5eda7a-def5-0000-0000-000000000000",'Enum_Test','',0,'',"00000000-0000-0000-0000-000000000041" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000004b","ba5eda7a-def5-0000-0000-000000000000",'Big_Bridge_Navigation','',0,'',"00000000-0000-0000-0000-000000000044" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000004f","ba5eda7a-def5-0000-0000-000000000000",'Pass_IH','',0,'',"00000000-0000-0000-0000-00000000004b" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000056","ba5eda7a-def5-0000-0000-000000000000",'Pass_Parameters','',0,'',"00000000-0000-0000-0000-00000000004f" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000076","ba5eda7a-def5-0000-0000-000000000000",'Start_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000007d","ba5eda7a-def5-0000-0000-000000000000",'Test_Passed','',0,'',"00000000-0000-0000-0000-000000000076" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000082","ba5eda7a-def5-0000-0000-000000000000",'Test_Failed','',0,'',"00000000-0000-0000-0000-00000000007d" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000087","ba5eda7a-def5-0000-0000-000000000000",'Test_Unsupported','',0,'',"00000000-0000-0000-0000-000000000082" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000008a","ba5eda7a-def5-0000-0000-000000000000",'Test_Text','',0,'',"00000000-0000-0000-0000-000000000087" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000008e","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Start','',0,'',"00000000-0000-0000-0000-00000000008a" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000091","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Finished','',0,'',"00000000-0000-0000-0000-00000000008e" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000094","ba5eda7a-def5-0000-0000-000000000000",'Specify_Requid','',0,'',"00000000-0000-0000-0000-000000000091" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000ad","ba5eda7a-def5-0000-0000-000000000000",'Sync1A','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000b4","ba5eda7a-def5-0000-0000-000000000000",'Sync2A','',0,'',"00000000-0000-0000-0000-0000000000ad" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000bb","ba5eda7a-def5-0000-0000-000000000000",'Sync3A','',0,'',"00000000-0000-0000-0000-0000000000b4" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000c2","ba5eda7a-def5-0000-0000-000000000000",'Sync4A','',0,'',"00000000-0000-0000-0000-0000000000bb" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000c9","ba5eda7a-def5-0000-0000-000000000000",'Common_Named_Object_Usage','',0,'',"00000000-0000-0000-0000-0000000000c2" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000e2","ba5eda7a-def5-0000-0000-000000000000",'Navigate_One_to_One','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000e5","ba5eda7a-def5-0000-0000-000000000000",'Navigate_One_to_Many','',0,'',"00000000-0000-0000-0000-0000000000e2" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000e8","ba5eda7a-def5-0000-0000-000000000000",'Navigate_Many_to_Many','',0,'',"00000000-0000-0000-0000-0000000000e5" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000eb","ba5eda7a-def5-0000-0000-000000000000",'Misc_Calls','',0,'',"00000000-0000-0000-0000-0000000000e8" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000000ee","ba5eda7a-def5-0000-0000-000000000000",'Enum_Test','',0,'',"00000000-0000-0000-0000-0000000000eb" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000101","ba5eda7a-def5-0000-0000-000000000000",'Start_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000108","ba5eda7a-def5-0000-0000-000000000000",'Test_Passed','',0,'',"00000000-0000-0000-0000-000000000101" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000010d","ba5eda7a-def5-0000-0000-000000000000",'Test_Failed','',0,'',"00000000-0000-0000-0000-000000000108" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000112","ba5eda7a-def5-0000-0000-000000000000",'Test_Unsupported','',0,'',"00000000-0000-0000-0000-00000000010d" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000115","ba5eda7a-def5-0000-0000-000000000000",'Test_Text','',0,'',"00000000-0000-0000-0000-000000000112" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000119","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Start','',0,'',"00000000-0000-0000-0000-000000000115" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000011c","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Finished','',0,'',"00000000-0000-0000-0000-000000000119" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000011f","ba5eda7a-def5-0000-0000-000000000000",'Specify_Requid','',0,'',"00000000-0000-0000-0000-00000000011c" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000142","ba5eda7a-def5-0000-0000-000000000000",'Big_Bridge_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000014c","ba5eda7a-def5-0000-0000-000000000000",'Start_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000153","ba5eda7a-def5-0000-0000-000000000000",'Test_Passed','',0,'',"00000000-0000-0000-0000-00000000014c" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000158","ba5eda7a-def5-0000-0000-000000000000",'Test_Failed','',0,'',"00000000-0000-0000-0000-000000000153" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000015d","ba5eda7a-def5-0000-0000-000000000000",'Test_Unsupported','',0,'',"00000000-0000-0000-0000-000000000158" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000160","ba5eda7a-def5-0000-0000-000000000000",'Test_Text','',0,'',"00000000-0000-0000-0000-00000000015d" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000164","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Start','',0,'',"00000000-0000-0000-0000-000000000160" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000167","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Finished','',0,'',"00000000-0000-0000-0000-000000000164" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000016b","ba5eda7a-def5-0000-0000-000000000000",'Specify_Requid','',0,'',"00000000-0000-0000-0000-000000000167" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000189","ba5eda7a-def5-0000-0000-000000000000",'Start_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000190","ba5eda7a-def5-0000-0000-000000000000",'Test_Passed','',0,'',"00000000-0000-0000-0000-000000000189" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000195","ba5eda7a-def5-0000-0000-000000000000",'Test_Failed','',0,'',"00000000-0000-0000-0000-000000000190" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000019a","ba5eda7a-def5-0000-0000-000000000000",'Test_Unsupported','',0,'',"00000000-0000-0000-0000-000000000195" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000019d","ba5eda7a-def5-0000-0000-000000000000",'Test_Text','',0,'',"00000000-0000-0000-0000-00000000019a" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001a1","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Start','',0,'',"00000000-0000-0000-0000-00000000019d" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001a4","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Finished','',0,'',"00000000-0000-0000-0000-0000000001a1" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001a7","ba5eda7a-def5-0000-0000-000000000000",'Specify_Requid','',0,'',"00000000-0000-0000-0000-0000000001a4" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000000",'What_Env','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001cf","ba5eda7a-def5-0000-0000-000000000000",'Call_Domain_Sync_Service','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001d5","ba5eda7a-def5-0000-0000-000000000000",'Call_Object_Sync_Service','',0,'',"00000000-0000-0000-0000-0000000001cf" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001e4","ba5eda7a-def5-0000-0000-000000000000",'Start_Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001eb","ba5eda7a-def5-0000-0000-000000000000",'Test_Passed','',0,'',"00000000-0000-0000-0000-0000000001e4" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001f0","ba5eda7a-def5-0000-0000-000000000000",'Test_Failed','',0,'',"00000000-0000-0000-0000-0000000001eb" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001f5","ba5eda7a-def5-0000-0000-000000000000",'Test_Unsupported','',0,'',"00000000-0000-0000-0000-0000000001f0" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001f8","ba5eda7a-def5-0000-0000-000000000000",'Test_Text','',0,'',"00000000-0000-0000-0000-0000000001f5" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001fc","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Start','',0,'',"00000000-0000-0000-0000-0000000001f8" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-0000000001ff","ba5eda7a-def5-0000-0000-000000000000",'Domain_Test_Finished','',0,'',"00000000-0000-0000-0000-0000000001fc" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-000000000202","ba5eda7a-def5-0000-0000-000000000000",'Specify_Requid','',0,'',"00000000-0000-0000-0000-0000000001ff" );
INSERT INTO C_IO VALUES ( "00000000-0000-0000-0000-00000000021b","ba5eda7a-def5-0000-0000-000000000000",'What_Env','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000034","00000000-0000-0000-0000-000000000032","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000037","00000000-0000-0000-0000-000000000035","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000003a","00000000-0000-0000-0000-000000000038","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000003d","00000000-0000-0000-0000-00000000003b","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000040","00000000-0000-0000-0000-00000000003e","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000043","00000000-0000-0000-0000-000000000041","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000046","00000000-0000-0000-0000-000000000044","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000047","00000000-0000-0000-0000-000000000044","00000000-0000-0000-0000-000000000049",'Enum_Input','',0,'',"00000000-0000-0000-0000-000000000046" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000004d","00000000-0000-0000-0000-00000000004b","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000004e","00000000-0000-0000-0000-00000000004b","00000000-0000-0000-0000-000000000049",'Enum_Input','',0,'',"00000000-0000-0000-0000-00000000004d" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000051","00000000-0000-0000-0000-00000000004f","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000052","00000000-0000-0000-0000-00000000004f","00000000-0000-0000-0000-000000000054",'The_IH','',0,'',"00000000-0000-0000-0000-000000000051" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000058","00000000-0000-0000-0000-000000000056","ba5eda7a-def5-0000-0000-000000000002",'The_Int_Input','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000059","00000000-0000-0000-0000-000000000056","ba5eda7a-def5-0000-0000-000000000003",'The_Real_Input','',0,'',"00000000-0000-0000-0000-000000000058" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000005a","00000000-0000-0000-0000-000000000056","ba5eda7a-def5-0000-0000-000000000004",'The_Text_Input','',0,'',"00000000-0000-0000-0000-000000000059" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000005b","00000000-0000-0000-0000-000000000056","ba5eda7a-def5-0000-0000-000000000001",'The_Bool_Input','',0,'',"00000000-0000-0000-0000-00000000005a" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000005c","00000000-0000-0000-0000-000000000056","ba5eda7a-def5-0000-0000-000000000002",'The_Result','',1,'',"00000000-0000-0000-0000-00000000005b" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000078","00000000-0000-0000-0000-000000000076","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000079","00000000-0000-0000-0000-000000000076","ba5eda7a-def5-0000-0000-000000000004",'Requid','',0,'',"00000000-0000-0000-0000-000000000078" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000007a","00000000-0000-0000-0000-000000000076","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Domain','',0,'',"00000000-0000-0000-0000-000000000079" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000007b","00000000-0000-0000-0000-000000000076","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Object','',0,'',"00000000-0000-0000-0000-00000000007a" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000007c","00000000-0000-0000-0000-000000000076","ba5eda7a-def5-0000-0000-000000000004",'Purpose','',0,'',"00000000-0000-0000-0000-00000000007b" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000007f","00000000-0000-0000-0000-00000000007d","ba5eda7a-def5-0000-0000-000000000004",'Test_Object_Domain','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000080","00000000-0000-0000-0000-00000000007d","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-00000000007f" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000081","00000000-0000-0000-0000-00000000007d","ba5eda7a-def5-0000-0000-000000000002",'Test_Value','',0,'',"00000000-0000-0000-0000-000000000080" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000084","00000000-0000-0000-0000-000000000082","ba5eda7a-def5-0000-0000-000000000004",'Failed_Domain_Object','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000085","00000000-0000-0000-0000-000000000082","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Number','',0,'',"00000000-0000-0000-0000-000000000084" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000086","00000000-0000-0000-0000-000000000082","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Value','',0,'',"00000000-0000-0000-0000-000000000085" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000089","00000000-0000-0000-0000-000000000087","ba5eda7a-def5-0000-0000-000000000002",'Unsupported_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000008c","00000000-0000-0000-0000-00000000008a","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000008d","00000000-0000-0000-0000-00000000008a","ba5eda7a-def5-0000-0000-000000000004",'Free_Text','',0,'',"00000000-0000-0000-0000-00000000008c" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000090","00000000-0000-0000-0000-00000000008e","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000093","00000000-0000-0000-0000-000000000091","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000096","00000000-0000-0000-0000-000000000094","ba5eda7a-def5-0000-0000-000000000002",'Requid_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000097","00000000-0000-0000-0000-000000000094","ba5eda7a-def5-0000-0000-000000000004",'The_Requid_Itself','',0,'',"00000000-0000-0000-0000-000000000096" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000af","00000000-0000-0000-0000-0000000000ad","ba5eda7a-def5-0000-0000-000000000002",'inputA','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b0","00000000-0000-0000-0000-0000000000ad","ba5eda7a-def5-0000-0000-000000000002",'inputB','',0,'',"00000000-0000-0000-0000-0000000000af" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b1","00000000-0000-0000-0000-0000000000ad","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-0000000000b0" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b2","00000000-0000-0000-0000-0000000000ad","ba5eda7a-def5-0000-0000-000000000002",'outputA','',1,'',"00000000-0000-0000-0000-0000000000b1" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b3","00000000-0000-0000-0000-0000000000ad","ba5eda7a-def5-0000-0000-000000000002",'outputB','',1,'',"00000000-0000-0000-0000-0000000000b2" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b6","00000000-0000-0000-0000-0000000000b4","ba5eda7a-def5-0000-0000-000000000002",'inputA','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b7","00000000-0000-0000-0000-0000000000b4","ba5eda7a-def5-0000-0000-000000000002",'inputB','',0,'',"00000000-0000-0000-0000-0000000000b6" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b8","00000000-0000-0000-0000-0000000000b4","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-0000000000b7" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000b9","00000000-0000-0000-0000-0000000000b4","ba5eda7a-def5-0000-0000-000000000002",'outputA','',1,'',"00000000-0000-0000-0000-0000000000b8" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000ba","00000000-0000-0000-0000-0000000000b4","ba5eda7a-def5-0000-0000-000000000002",'outputB','',1,'',"00000000-0000-0000-0000-0000000000b9" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000bd","00000000-0000-0000-0000-0000000000bb","ba5eda7a-def5-0000-0000-000000000002",'InputA','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000be","00000000-0000-0000-0000-0000000000bb","ba5eda7a-def5-0000-0000-000000000002",'InputB','',0,'',"00000000-0000-0000-0000-0000000000bd" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000bf","00000000-0000-0000-0000-0000000000bb","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-0000000000be" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c0","00000000-0000-0000-0000-0000000000bb","ba5eda7a-def5-0000-0000-000000000002",'OutputA','',1,'',"00000000-0000-0000-0000-0000000000bf" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c1","00000000-0000-0000-0000-0000000000bb","ba5eda7a-def5-0000-0000-000000000002",'OutputB','',1,'',"00000000-0000-0000-0000-0000000000c0" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c4","00000000-0000-0000-0000-0000000000c2","ba5eda7a-def5-0000-0000-000000000002",'InputA','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c5","00000000-0000-0000-0000-0000000000c2","ba5eda7a-def5-0000-0000-000000000002",'InputB','',0,'',"00000000-0000-0000-0000-0000000000c4" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c6","00000000-0000-0000-0000-0000000000c2","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-0000000000c5" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c7","00000000-0000-0000-0000-0000000000c2","ba5eda7a-def5-0000-0000-000000000002",'OutputA','',1,'',"00000000-0000-0000-0000-0000000000c6" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000c8","00000000-0000-0000-0000-0000000000c2","ba5eda7a-def5-0000-0000-000000000002",'OutputB','',1,'',"00000000-0000-0000-0000-0000000000c7" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000cb","00000000-0000-0000-0000-0000000000c9","ba5eda7a-def5-0000-0000-000000000002",'Test_Number_Parameter','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000cc","00000000-0000-0000-0000-0000000000c9","ba5eda7a-def5-0000-0000-000000000001",'This_Test_Has_Failed','',1,'',"00000000-0000-0000-0000-0000000000cb" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000cd","00000000-0000-0000-0000-0000000000c9","ba5eda7a-def5-0000-0000-000000000002",'This_Test_Failure_Value','',1,'',"00000000-0000-0000-0000-0000000000cc" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000e4","00000000-0000-0000-0000-0000000000e2","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000e7","00000000-0000-0000-0000-0000000000e5","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000ea","00000000-0000-0000-0000-0000000000e8","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000ed","00000000-0000-0000-0000-0000000000eb","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000f0","00000000-0000-0000-0000-0000000000ee","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000000f1","00000000-0000-0000-0000-0000000000ee","00000000-0000-0000-0000-000000000049",'Enum_Input','',0,'',"00000000-0000-0000-0000-0000000000f0" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000103","00000000-0000-0000-0000-000000000101","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000104","00000000-0000-0000-0000-000000000101","ba5eda7a-def5-0000-0000-000000000004",'Requid','',0,'',"00000000-0000-0000-0000-000000000103" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000105","00000000-0000-0000-0000-000000000101","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Domain','',0,'',"00000000-0000-0000-0000-000000000104" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000106","00000000-0000-0000-0000-000000000101","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Object','',0,'',"00000000-0000-0000-0000-000000000105" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000107","00000000-0000-0000-0000-000000000101","ba5eda7a-def5-0000-0000-000000000004",'Purpose','',0,'',"00000000-0000-0000-0000-000000000106" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000010a","00000000-0000-0000-0000-000000000108","ba5eda7a-def5-0000-0000-000000000004",'Test_Object_Domain','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000010b","00000000-0000-0000-0000-000000000108","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-00000000010a" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000010c","00000000-0000-0000-0000-000000000108","ba5eda7a-def5-0000-0000-000000000002",'Test_Value','',0,'',"00000000-0000-0000-0000-00000000010b" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000010f","00000000-0000-0000-0000-00000000010d","ba5eda7a-def5-0000-0000-000000000004",'Failed_Domain_Object','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000110","00000000-0000-0000-0000-00000000010d","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Number','',0,'',"00000000-0000-0000-0000-00000000010f" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000111","00000000-0000-0000-0000-00000000010d","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Value','',0,'',"00000000-0000-0000-0000-000000000110" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000114","00000000-0000-0000-0000-000000000112","ba5eda7a-def5-0000-0000-000000000002",'Unsupported_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000117","00000000-0000-0000-0000-000000000115","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000118","00000000-0000-0000-0000-000000000115","ba5eda7a-def5-0000-0000-000000000004",'Free_Text','',0,'',"00000000-0000-0000-0000-000000000117" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000011b","00000000-0000-0000-0000-000000000119","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000011e","00000000-0000-0000-0000-00000000011c","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000121","00000000-0000-0000-0000-00000000011f","ba5eda7a-def5-0000-0000-000000000002",'Requid_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000122","00000000-0000-0000-0000-00000000011f","ba5eda7a-def5-0000-0000-000000000004",'The_Requid_Itself','',0,'',"00000000-0000-0000-0000-000000000121" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000144","00000000-0000-0000-0000-000000000142","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000014e","00000000-0000-0000-0000-00000000014c","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000014f","00000000-0000-0000-0000-00000000014c","ba5eda7a-def5-0000-0000-000000000004",'Requid','',0,'',"00000000-0000-0000-0000-00000000014e" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000150","00000000-0000-0000-0000-00000000014c","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Domain','',0,'',"00000000-0000-0000-0000-00000000014f" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000151","00000000-0000-0000-0000-00000000014c","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Object','',0,'',"00000000-0000-0000-0000-000000000150" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000152","00000000-0000-0000-0000-00000000014c","ba5eda7a-def5-0000-0000-000000000004",'Purpose','',0,'',"00000000-0000-0000-0000-000000000151" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000155","00000000-0000-0000-0000-000000000153","ba5eda7a-def5-0000-0000-000000000004",'Test_Object_Domain','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000156","00000000-0000-0000-0000-000000000153","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000155" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000157","00000000-0000-0000-0000-000000000153","ba5eda7a-def5-0000-0000-000000000002",'Test_Value','',0,'',"00000000-0000-0000-0000-000000000156" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000015a","00000000-0000-0000-0000-000000000158","ba5eda7a-def5-0000-0000-000000000004",'Failed_Domain_Object','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000015b","00000000-0000-0000-0000-000000000158","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Number','',0,'',"00000000-0000-0000-0000-00000000015a" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000015c","00000000-0000-0000-0000-000000000158","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Value','',0,'',"00000000-0000-0000-0000-00000000015b" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000015f","00000000-0000-0000-0000-00000000015d","ba5eda7a-def5-0000-0000-000000000002",'Unsupported_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000162","00000000-0000-0000-0000-000000000160","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000163","00000000-0000-0000-0000-000000000160","ba5eda7a-def5-0000-0000-000000000004",'Free_Text','',0,'',"00000000-0000-0000-0000-000000000162" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000166","00000000-0000-0000-0000-000000000164","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000169","00000000-0000-0000-0000-000000000167","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000016a","00000000-0000-0000-0000-000000000167","ba5eda7a-def5-0000-0000-000000000002",'This_Domain_Number','',0,'',"00000000-0000-0000-0000-000000000169" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000016d","00000000-0000-0000-0000-00000000016b","ba5eda7a-def5-0000-0000-000000000002",'Requid_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000016e","00000000-0000-0000-0000-00000000016b","ba5eda7a-def5-0000-0000-000000000004",'The_Requid_Itself','',0,'',"00000000-0000-0000-0000-00000000016d" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000018b","00000000-0000-0000-0000-000000000189","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000018c","00000000-0000-0000-0000-000000000189","ba5eda7a-def5-0000-0000-000000000004",'Requid','',0,'',"00000000-0000-0000-0000-00000000018b" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000018d","00000000-0000-0000-0000-000000000189","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Domain','',0,'',"00000000-0000-0000-0000-00000000018c" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000018e","00000000-0000-0000-0000-000000000189","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Object','',0,'',"00000000-0000-0000-0000-00000000018d" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000018f","00000000-0000-0000-0000-000000000189","ba5eda7a-def5-0000-0000-000000000004",'Purpose','',0,'',"00000000-0000-0000-0000-00000000018e" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000192","00000000-0000-0000-0000-000000000190","ba5eda7a-def5-0000-0000-000000000004",'Test_Object_Domain','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000193","00000000-0000-0000-0000-000000000190","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000192" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000194","00000000-0000-0000-0000-000000000190","ba5eda7a-def5-0000-0000-000000000002",'Test_Value','',0,'',"00000000-0000-0000-0000-000000000193" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000197","00000000-0000-0000-0000-000000000195","ba5eda7a-def5-0000-0000-000000000004",'Failed_Domain_Object','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000198","00000000-0000-0000-0000-000000000195","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Number','',0,'',"00000000-0000-0000-0000-000000000197" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000199","00000000-0000-0000-0000-000000000195","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Value','',0,'',"00000000-0000-0000-0000-000000000198" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000019c","00000000-0000-0000-0000-00000000019a","ba5eda7a-def5-0000-0000-000000000002",'Unsupported_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000019f","00000000-0000-0000-0000-00000000019d","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001a0","00000000-0000-0000-0000-00000000019d","ba5eda7a-def5-0000-0000-000000000004",'Free_Text','',0,'',"00000000-0000-0000-0000-00000000019f" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001a3","00000000-0000-0000-0000-0000000001a1","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001a6","00000000-0000-0000-0000-0000000001a4","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001a9","00000000-0000-0000-0000-0000000001a7","ba5eda7a-def5-0000-0000-000000000002",'Requid_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001aa","00000000-0000-0000-0000-0000000001a7","ba5eda7a-def5-0000-0000-000000000004",'The_Requid_Itself','',0,'',"00000000-0000-0000-0000-0000000001a9" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001c2","00000000-0000-0000-0000-0000000001c0","ba5eda7a-def5-0000-0000-000000000004",'Env_Text','',1,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d1","00000000-0000-0000-0000-0000000001cf","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d2","00000000-0000-0000-0000-0000000001cf","ba5eda7a-def5-0000-0000-000000000002",'InputValue1','',0,'',"00000000-0000-0000-0000-0000000001d1" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d3","00000000-0000-0000-0000-0000000001cf","ba5eda7a-def5-0000-0000-000000000002",'InputValue2','',0,'',"00000000-0000-0000-0000-0000000001d2" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d4","00000000-0000-0000-0000-0000000001cf","ba5eda7a-def5-0000-0000-000000000002",'InputValue3','',0,'',"00000000-0000-0000-0000-0000000001d3" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d7","00000000-0000-0000-0000-0000000001d5","ba5eda7a-def5-0000-0000-000000000002",'Test','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d8","00000000-0000-0000-0000-0000000001d5","ba5eda7a-def5-0000-0000-000000000004",'Text_Input','',0,'',"00000000-0000-0000-0000-0000000001d7" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001d9","00000000-0000-0000-0000-0000000001d5","ba5eda7a-def5-0000-0000-000000000002",'The_Integer','',0,'',"00000000-0000-0000-0000-0000000001d8" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001da","00000000-0000-0000-0000-0000000001d5","ba5eda7a-def5-0000-0000-000000000003",'The_Real','',0,'',"00000000-0000-0000-0000-0000000001d9" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e6","00000000-0000-0000-0000-0000000001e4","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e7","00000000-0000-0000-0000-0000000001e4","ba5eda7a-def5-0000-0000-000000000004",'Requid','',0,'',"00000000-0000-0000-0000-0000000001e6" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e8","00000000-0000-0000-0000-0000000001e4","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Domain','',0,'',"00000000-0000-0000-0000-0000000001e7" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001e9","00000000-0000-0000-0000-0000000001e4","ba5eda7a-def5-0000-0000-000000000004",'Invoking_Object','',0,'',"00000000-0000-0000-0000-0000000001e8" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001ea","00000000-0000-0000-0000-0000000001e4","ba5eda7a-def5-0000-0000-000000000004",'Purpose','',0,'',"00000000-0000-0000-0000-0000000001e9" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001ed","00000000-0000-0000-0000-0000000001eb","ba5eda7a-def5-0000-0000-000000000004",'Test_Object_Domain','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001ee","00000000-0000-0000-0000-0000000001eb","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-0000000001ed" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001ef","00000000-0000-0000-0000-0000000001eb","ba5eda7a-def5-0000-0000-000000000002",'Test_Value','',0,'',"00000000-0000-0000-0000-0000000001ee" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001f2","00000000-0000-0000-0000-0000000001f0","ba5eda7a-def5-0000-0000-000000000004",'Failed_Domain_Object','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001f3","00000000-0000-0000-0000-0000000001f0","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Number','',0,'',"00000000-0000-0000-0000-0000000001f2" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001f4","00000000-0000-0000-0000-0000000001f0","ba5eda7a-def5-0000-0000-000000000002",'Failed_Test_Value','',0,'',"00000000-0000-0000-0000-0000000001f3" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001f7","00000000-0000-0000-0000-0000000001f5","ba5eda7a-def5-0000-0000-000000000002",'Unsupported_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001fa","00000000-0000-0000-0000-0000000001f8","ba5eda7a-def5-0000-0000-000000000002",'Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001fb","00000000-0000-0000-0000-0000000001f8","ba5eda7a-def5-0000-0000-000000000004",'Free_Text','',0,'',"00000000-0000-0000-0000-0000000001fa" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-0000000001fe","00000000-0000-0000-0000-0000000001fc","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000201","00000000-0000-0000-0000-0000000001ff","ba5eda7a-def5-0000-0000-000000000004",'This_Domain_Name','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000204","00000000-0000-0000-0000-000000000202","ba5eda7a-def5-0000-0000-000000000002",'Requid_Test_Number','',0,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-000000000205","00000000-0000-0000-0000-000000000202","ba5eda7a-def5-0000-0000-000000000004",'The_Requid_Itself','',0,'',"00000000-0000-0000-0000-000000000204" );
INSERT INTO C_PP VALUES ( "00000000-0000-0000-0000-00000000021d","00000000-0000-0000-0000-00000000021b","ba5eda7a-def5-0000-0000-000000000004",'Env_Text','',1,'',"00000000-0000-0000-0000-000000000000" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-00000000002b","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-00000000002c" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000030","00000000-0000-0000-0000-00000000002e","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000031" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000074","00000000-0000-0000-0000-000000000072","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000075" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000000ab","00000000-0000-0000-0000-0000000000a9","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000000ac" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000000db","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000000dc" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000000e0","00000000-0000-0000-0000-0000000000de","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000000e1" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000000ff","00000000-0000-0000-0000-0000000000fd","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000100" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000136","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000137" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-00000000013b","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-00000000013c" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000140","00000000-0000-0000-0000-00000000013e","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000141" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-00000000014a","00000000-0000-0000-0000-000000000148","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-00000000014b" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000182","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000183" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000187","00000000-0000-0000-0000-000000000185","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000188" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000001be","00000000-0000-0000-0000-0000000001bc","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000001bf" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000001c8","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000001c9" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000001cd","00000000-0000-0000-0000-0000000001cb","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000001ce" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-0000000001e2","00000000-0000-0000-0000-0000000001e0","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-0000000001e3" );
INSERT INTO C_IR VALUES ( "00000000-0000-0000-0000-000000000219","00000000-0000-0000-0000-000000000217","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-00000000021a" );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-00000000002c","00000000-0000-0000-0000-000000000023",'DomainA',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000031","00000000-0000-0000-0000-000000000023",'DomainA__Navigate',0,0,'NAV' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000075","00000000-0000-0000-0000-000000000023",'DomainA__Report',0,0,'RPT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000000ac","00000000-0000-0000-0000-000000000023",'DomainA__TerminatorA',0,0,'termA' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000000dc","00000000-0000-0000-0000-000000000023",'DomainB',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000000e1","00000000-0000-0000-0000-000000000023",'DomainB__Navigate',0,0,'NAV' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000100","00000000-0000-0000-0000-000000000023",'DomainB__Report',0,0,'RPT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000137","00000000-0000-0000-0000-000000000023",'RP',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-00000000013c","00000000-0000-0000-0000-000000000023",'Creation_Deletion',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000141","00000000-0000-0000-0000-000000000023",'Creation_Deletion__Enumeration_Terminator',0,0,'ENUM' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-00000000014b","00000000-0000-0000-0000-000000000023",'Creation_Deletion__Report_Terminator',0,0,'RPT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000183","00000000-0000-0000-0000-000000000023",'Find_and_Sets',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-000000000188","00000000-0000-0000-0000-000000000023",'Find_and_Sets__Report',0,0,'RPT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000001bf","00000000-0000-0000-0000-000000000023",'Find_and_Sets__Where_Are_We',0,0,'WAW' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000001c9","00000000-0000-0000-0000-000000000023",'Function_Calls',0,0,'' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000001ce","00000000-0000-0000-0000-000000000023",'Function_Calls__Nav_To_Bridge',0,0,'NTB' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-0000000001e3","00000000-0000-0000-0000-000000000023",'Function_Calls__Report',0,0,'RPT' );
INSERT INTO C_PO VALUES ( "00000000-0000-0000-0000-00000000021a","00000000-0000-0000-0000-000000000023",'Function_Calls__Where_Are_We',0,0,'WAW' );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000005d","00000000-0000-0000-0000-000000000032","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000005f","00000000-0000-0000-0000-000000000035","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000061","00000000-0000-0000-0000-000000000038","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000063","00000000-0000-0000-0000-00000000003b","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000065","00000000-0000-0000-0000-00000000003e","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000067","00000000-0000-0000-0000-000000000041","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000069","00000000-0000-0000-0000-000000000044","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000006b","00000000-0000-0000-0000-00000000004b","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000006d","00000000-0000-0000-0000-00000000004f","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000006f","00000000-0000-0000-0000-000000000056","00000000-0000-0000-0000-000000000030" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000098","00000000-0000-0000-0000-000000000076","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000009a","00000000-0000-0000-0000-00000000007d","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000009c","00000000-0000-0000-0000-000000000082","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000009e","00000000-0000-0000-0000-000000000087","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000a0","00000000-0000-0000-0000-00000000008a","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000a2","00000000-0000-0000-0000-00000000008e","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000a4","00000000-0000-0000-0000-000000000091","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000a6","00000000-0000-0000-0000-000000000094","00000000-0000-0000-0000-000000000074" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000ce","00000000-0000-0000-0000-0000000000ad","00000000-0000-0000-0000-0000000000ab" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000d0","00000000-0000-0000-0000-0000000000b4","00000000-0000-0000-0000-0000000000ab" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000d2","00000000-0000-0000-0000-0000000000bb","00000000-0000-0000-0000-0000000000ab" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000d4","00000000-0000-0000-0000-0000000000c2","00000000-0000-0000-0000-0000000000ab" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000d6","00000000-0000-0000-0000-0000000000c9","00000000-0000-0000-0000-0000000000ab" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000f2","00000000-0000-0000-0000-0000000000e2","00000000-0000-0000-0000-0000000000e0" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000f4","00000000-0000-0000-0000-0000000000e5","00000000-0000-0000-0000-0000000000e0" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000f6","00000000-0000-0000-0000-0000000000e8","00000000-0000-0000-0000-0000000000e0" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000f8","00000000-0000-0000-0000-0000000000eb","00000000-0000-0000-0000-0000000000e0" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000000fa","00000000-0000-0000-0000-0000000000ee","00000000-0000-0000-0000-0000000000e0" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000123","00000000-0000-0000-0000-000000000101","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000125","00000000-0000-0000-0000-000000000108","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000127","00000000-0000-0000-0000-00000000010d","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000129","00000000-0000-0000-0000-000000000112","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000012b","00000000-0000-0000-0000-000000000115","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000012d","00000000-0000-0000-0000-000000000119","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000012f","00000000-0000-0000-0000-00000000011c","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000131","00000000-0000-0000-0000-00000000011f","00000000-0000-0000-0000-0000000000ff" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000145","00000000-0000-0000-0000-000000000142","00000000-0000-0000-0000-000000000140" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000016f","00000000-0000-0000-0000-00000000014c","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000171","00000000-0000-0000-0000-000000000153","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000173","00000000-0000-0000-0000-000000000158","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000175","00000000-0000-0000-0000-00000000015d","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000177","00000000-0000-0000-0000-000000000160","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000179","00000000-0000-0000-0000-000000000164","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000017b","00000000-0000-0000-0000-000000000167","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000017d","00000000-0000-0000-0000-00000000016b","00000000-0000-0000-0000-00000000014a" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001ab","00000000-0000-0000-0000-000000000189","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001ad","00000000-0000-0000-0000-000000000190","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001af","00000000-0000-0000-0000-000000000195","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001b1","00000000-0000-0000-0000-00000000019a","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001b3","00000000-0000-0000-0000-00000000019d","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001b5","00000000-0000-0000-0000-0000000001a1","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001b7","00000000-0000-0000-0000-0000000001a4","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001b9","00000000-0000-0000-0000-0000000001a7","00000000-0000-0000-0000-000000000187" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001c3","00000000-0000-0000-0000-0000000001c0","00000000-0000-0000-0000-0000000001be" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001db","00000000-0000-0000-0000-0000000001cf","00000000-0000-0000-0000-0000000001cd" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-0000000001dd","00000000-0000-0000-0000-0000000001d5","00000000-0000-0000-0000-0000000001cd" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000206","00000000-0000-0000-0000-0000000001e4","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000208","00000000-0000-0000-0000-0000000001eb","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000020a","00000000-0000-0000-0000-0000000001f0","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000020c","00000000-0000-0000-0000-0000000001f5","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000020e","00000000-0000-0000-0000-0000000001f8","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000210","00000000-0000-0000-0000-0000000001fc","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000212","00000000-0000-0000-0000-0000000001ff","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-000000000214","00000000-0000-0000-0000-000000000202","00000000-0000-0000-0000-0000000001e2" );
INSERT INTO SPR_PEP VALUES ( "00000000-0000-0000-0000-00000000021e","00000000-0000-0000-0000-00000000021b","00000000-0000-0000-0000-000000000219" );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000005d",'','','#------------------------------------------------------------------------#
# Call the non-shared bridge to navigate a relationship in domain_B
#------------------------------------------------------------------------#

   Locally_Held_Returned_Number = 99
   What_We_Got                  = 99

   My_Report = find-one Report_Data

   if My_Report = UNDEFINED then

      $USE RP
         [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
      $ENDUSE
 
   else
      This_Domain_Number = My_Report.Reported_Domain_Number

      $USE RP
         [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_A", "Bridge", "non shared bridge", This_Domain_Number]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1104"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1105"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1109"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1311"]
      $ENDUSE
 
      $USE DomainB
         an_object_C = find-one Object_C where idC = 1

         {set_of_object_D} = an_object_C -> R1.Object_D

         # Prove that the navigation was successful
         for the_object_D in {set_of_object_D} do
            Locally_Held_Returned_Number = the_object_D.D_Number
         endfor

      $ENDUSE

      # ASL won''t allow the calling of another bridge service in this one, so
      # fake it, and USE the relevent domain. Sneaky.

      $USE RP

         if Locally_Held_Returned_Number = What_We_Got then
            [] = RP2::Test_Failed["Bridge", Test, Locally_Held_Returned_Number, This_Domain_Number]
         else
            [] = RP1::Test_Passed["Bridge", Test, Locally_Held_Returned_Number, This_Domain_Number]
         endif

      $ENDUSE

   endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000005f",'','','#------------------------------------------------------------------------#
# Call the shared bridge to navigate a relationship in domain_B
#------------------------------------------------------------------------#

   Locally_Held_Returned_Number = 99
   What_We_Got                  = 99

   My_Report = find-one Report_Data

   if My_Report = UNDEFINED then

      $USE RP
         [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
      $ENDUSE

   else
      This_Domain_Number = My_Report.Reported_Domain_Number

      $USE RP
         [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_A", "Bridge", "shared bridge", This_Domain_Number]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1104"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1105"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1109"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1311"]         
      $ENDUSE

      $USE DomainB
         an_object_C = find-one Object_C where idC = 1
         {set_of_object_D} = an_object_C -> R1.Object_D

         # Prove that the navigation was successful
         for the_object_D in {set_of_object_D} do
            Locally_Held_Returned_Number = the_object_D.D_Number
         endfor

      $ENDUSE

      # ASL won''t allow the calling of another bridge service in this one, so
      # fake it, and USE the relevent domain. Sneaky.
      $USE RP

         if Locally_Held_Returned_Number = What_We_Got then
            [] = RP2::Test_Failed["Bridge", Test, Locally_Held_Returned_Number, This_Domain_Number]
         else
            [] = RP1::Test_Passed["Bridge", Test, Locally_Held_Returned_Number, This_Domain_Number]
         endif

      $ENDUSE

   endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000061",'','','#------------------------------------------------------------------------#
# Perform a navigation in THIS domain
#------------------------------------------------------------------------#

   Bridge_Test_Passed = FALSE
   Passed_Value       = 0
   Failure_Value      = -1

   My_Report = find-one Report_Data

   if My_Report = UNDEFINED then
      $USE RP
         [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
      $ENDUSE

   else
      This_Domain_Number = My_Report.Reported_Domain_Number
   
      left_side = find-one One_To_One_Left_Side where otols_id = Test

      if left_side != UNDEFINED then
         a_right_side = left_side -> R1.One_To_One_Right_Side

         if a_right_side.otors_id = Test then
            Bridge_Test_Passed = TRUE
            Passed_Value = a_right_side.otors_id
         endif

      else
         Failure_Value = -2
      endif

      $USE RP

         [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_A", "Bridge", "local one to one nav", This_Domain_Number]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]

         if Bridge_Test_Passed = TRUE then
            [] = RP1::Test_Passed["Bridge", Test, Passed_Value, This_Domain_Number]
         else
            [] = RP2::Test_Failed["Bridge", Test, Failure_Value, This_Domain_Number]
         endif

      $ENDUSE

   endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000063",'','','#------------------------------------------------------------------------#
# Perform a navigation in THIS domain
#------------------------------------------------------------------------#

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number

   Bridge_Test_Passed = FALSE

   $USE RP
      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_A", "Bridge", "local one to many nav", This_Domain_Number]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]
   $ENDUSE

   # Only local variables and input parameters are in scope within a bridge
   local_id = 0

   left_side = find-one One_To_Many_Left_Side where otmls_id = Test

   {a_set_of_right_sides} = left_side -> R2.One_To_Many_Right_Side

   for a_right_side in {a_set_of_right_sides} do

      if a_right_side.otmrs_id = Test then
         Bridge_Test_Passed = TRUE

         # Copy id to local variable
         local_id = a_right_side.otmrs_id

      endif

   endfor

   $USE RP

      if Bridge_Test_Passed = TRUE then
         [] = RP1::Test_Passed["Bridge", Test, local_id, This_Domain_Number]
      else
         [] = RP2::Test_Failed["Bridge", Test, local_id, This_Domain_Number]
      endif

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000065",'','','# Perform a navigation in THIS domain

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]

   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number

   Bridge_Test_Passed = FALSE

   local_id = 0

   $USE RP

      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_A", "Bridge", "local many to many nav", This_Domain_Number]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]
   $ENDUSE

   left_side = find-one Many_To_Many_Left_Side where mtmls_id = Test

   {a_set_of_right_sides} = left_side -> R3.Many_To_Many_Right_Side



   for a_right_side in {a_set_of_right_sides} do

      if a_right_side.mtmrs_id = Test then
         Bridge_Test_Passed = TRUE

         local_id = a_right_side.mtmrs_id

      endif

   endfor


   $USE RP

      if Bridge_Test_Passed = TRUE then

         [] = RP1::Test_Passed["Bridge", Test, local_id, This_Domain_Number]

      else
 
         [] = RP2::Test_Failed["Bridge", Test, local_id, This_Domain_Number]

      endif

   $ENDUSE

endif
 ',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000067",'','','# Misc bridge.
# Used for pulling any extra tests into one scenario called test.

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number

   Has_Passed = FALSE

   Failure_Code = 0

   $USE RP
      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "DomainA", "Bridge", "Super sub navigation", This_Domain_Number]
   $ENDUSE


   $USE DomainB
      My_Super = find-one Domain_B_Object_Super where idSUPER_B = 1

      if My_Super = UNDEFINED then
         Failure_Code = -1
      else
         # Navigate to the sub type
         The_Sub = My_Super -> R4.Domain_B_Object_SubA

         if The_Sub = UNDEFINED then
            Failure_Code = -1
         else

            if The_Sub.SubA_Attribute = 1 then
               Has_Passed = TRUE
            else
               Failure_Code = -2
            endif

         endif

      endif

   $ENDUSE

   $USE RP

      if Has_Passed = FALSE then
         [] = RP2::Test_Failed["Super sub navigation", Test, -1, This_Domain_Number]
      else
         [] = RP1::Test_Passed["Super sub navigation", Test,  0, This_Domain_Number]
      endif

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000069",'','','My_Report = find-one Report_Data

if My_Report = UNDEFINED then
   $USE RP

      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]

   $ENDUSE


else

   This_Domain_Number = My_Report.Reported_Domain_Number

   Which_Domain = 0
 
   loop

      Which_Domain = Which_Domain + 1
 
      switch Which_Domain

         case 1

            [The_DomainA_Val] = DomainA3::Check_Enum[''Sly'']
   
         case 2
         
            $USE DomainB

               [The_DomainB_Val] = DomainB7::Check_Enum[''Sandy'']
 
            $ENDUSE

         default

            Which_Domain = Which_Domain + 1


      endswitch

      breakif Which_Domain > 1

   endloop 

   $USE RP

      [] = RP4::Test_Description[Test, "Null Requid", "Domain_A", "Bridge", "Check Enumeration across bridge", This_Domain_Number]
        
      if The_DomainA_Val = 11 then

         if The_DomainB_Val = 22 then

            [] = RP1::Test_Passed["Bridge", Test, The_DomainB_Val, This_Domain_Number]  

         else
 
            [] = RP2::Test_Failed["Bridge", Test, The_DomainB_Val, This_Domain_Number]

         endif

      else

         [] = RP2::Test_Failed["Bridge", Test, The_DomainA_Val, This_Domain_Number]

      endif

   $ENDUSE


 endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000006b",'','','My_Report = find-one Report_Data

if My_Report = UNDEFINED then
   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else
   This_Domain_Number = My_Report.Reported_Domain_Number
   Which_Domain       = 0
 
   Total_Val = 0

   loop
      Which_Domain = Which_Domain + 1
 
      switch Which_Domain

         case 1
            [DomainA_Val] = DomainA3::Check_Enum[''Sly'']

            if DomainA_Val = 11 then
               Total_Val = Total_Val + DomainA_Val
            else          
               Which_Domain = 7
               Total_Val = DomainA_Val
            endif
            
         case 2
            switch Enum_Input

               case ''Sly''
                  DomainA_Enum_Val of Test_Enum_Type = ''Sly''
               case ''Sandy''
                  DomainA_Enum_Val of Test_Enum_Type = ''Sandy''
               case ''Wes''
                  DomainA_Enum_Val of Test_Enum_Type = ''Wes''
            endswitch

            $USE DomainB

               switch Enum_Input
                  case ''Sly''
                     DomainB_Enum_Val of Test_Enum_Type = ''Sly''
                  case ''Sandy''
                     DomainB_Enum_Val of Test_Enum_Type = ''Sandy''
                  case ''Wes''
                     DomainB_Enum_Val of Test_Enum_Type = ''Wes''
               endswitch

               [DomainB_Val] = DomainB7::Check_Enum[DomainB_Enum_Val]
    
            $ENDUSE          

            [DomainA_Val] = DomainA3::Check_Enum[DomainA_Enum_Val]

            if DomainB_Val = 22 then
               Total_Val = Total_Val + DomainB_Val

               if DomainA_Val = 12 then
                  Total_Val = Total_Val + DomainA_Val
               else
                  Total_Val = DomainA_Val
                  Which_Domain = 7
               endif              

            else
               Total_Val = DomainB_Val
               Which_Domain = 7
            endif
 

         case 3

            $USE Creation_Deletion
               [Creation_Deletion_Val] = Creation_Deletion3::Check_Enum[''Sly'']
            $ENDUSE

            if Creation_Deletion_Val = 31 then
               Total_Val = Total_Val + Creation_Deletion_Val
            else
               Total_Val = Creation_Deletion_Val
               Which_Domain = 7
            endif
 
         case 4 

            $USE Find_and_Sets
               [Find_and_Sets_Val] = Find_and_Sets4::Check_Enum[''Sly'']
            $ENDUSE

            $USE Creation_Deletion
               [Creation_Deletion_Val] = Creation_Deletion3::Check_Enum[''Sandy'']
            $ENDUSE

            if Find_and_Sets_Val = 41 then
                Total_Val = Total_Val + Find_and_Sets_Val

                if Creation_Deletion_Val = 32 then
                   Total_Val = Total_Val + Creation_Deletion_Val
                else

                   Total_Val = Creation_Deletion_Val
                   Which_Domain = 7
 
                endif

            else
               Total_Val = Find_and_Sets_Val
               Which_Domain = 7
            endif
 
         case 5

            $USE Creation_Deletion

               switch Enum_Input
                  case ''Sly''
                     Creation_Deletion_Enum_Val of Test_Enum_Type = ''Sly''
                  case ''Sandy''
                     Creation_Deletion_Enum_Val of Test_Enum_Type = ''Sandy''
                  case ''Wes''
                     Creation_Deletion_Enum_Val of Test_Enum_Type = ''Wes''
               endswitch

               [Creation_Deletion_Val] = Creation_Deletion3::Check_Enum[Creation_Deletion_Enum_Val]
            $ENDUSE

            $USE DomainB

               switch Enum_Input
                  case ''Sly''
                     DomainB_Enum_Val of Test_Enum_Type = ''Sly''
                  case ''Sandy''
                     DomainB_Enum_Val of Test_Enum_Type = ''Sandy''
                  case ''Wes''
                     DomainB_Enum_Val of Test_Enum_Type = ''Wes''
               endswitch


               [DomainB_Val] = DomainB7::Check_Enum[DomainB_Enum_Val]
            $ENDUSE          

               switch Enum_Input
                  case ''Sly''
                     DomainA_Enum_Val of Test_Enum_Type = ''Sly''
                  case ''Sandy''
                     DomainA_Enum_Val of Test_Enum_Type = ''Sandy''
                  case ''Wes''
                     DomainA_Enum_Val of Test_Enum_Type = ''Wes''
               endswitch

            [DomainA_Val] = DomainA3::Check_Enum[DomainA_Enum_Val]

            if Creation_Deletion_Val = 32 then
                Total_Val = Total_Val + Creation_Deletion_Val

                if DomainB_Val = 22 then
                   Total_Val = Total_Val + DomainB_Val

                   if DomainA_Val = 12 then
                      Total_Val = Total_Val + DomainA_Val
                   else
                      Total_Val = DomainA_Val
                      Which_Domain = 7
                   endif

                else
                   Total_Val = DomainB_Val
                   Which_Domain = 7
                endif

            else
               Total_Val = Creation_Deletion_Val
               Which_Domain = 7
            endif


         case 6

            $USE Function_Calls

               [Func_Calls_Val] = Function_Calls7::Nav_Enum_Over_Bridge[''Sly'']
               if Func_Calls_Val = ''Slys_Mum'' then
                  Total_Val = Total_Val + 51
               else
                  Total_Val = -51
                  Which_Domain = 7
               endif

            $ENDUSE
 
         default

            Which_Domain = Which_Domain + 1

      endswitch

      breakif Which_Domain > 5

   endloop 

   $USE RP

      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_A", "Bridge", "Enumeration across lots of bridges", This_Domain_Number]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1107"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1109"]
      switch Total_Val

         case 266

            [] = RP1::Test_Passed["Bridge", Test, Total_Val, This_Domain_Number]

         case -11

            [] = RP2::Test_Failed["Bridge", Test, -11, This_Domain_Number]

         case -21

            [] = RP2::Test_Failed["Bridge", Test, -21, This_Domain_Number]

         case -31

            [] = RP2::Test_Failed["Bridge", Test, -31, This_Domain_Number]

         case -41

            [] = RP2::Test_Failed["Bridge", Test, -41, This_Domain_Number]

         case -51

            [] = RP2::Test_Failed["Bridge", Test, -51, This_Domain_Number]


         default
           [] = RP2::Test_Failed["Bridge", Test, -51, This_Domain_Number]

      endswitch

   $ENDUSE


 endif

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000006d",'','','#------------------------------------------------------------------------#
# Recieve an instance handle of Object A from domain A
#------------------------------------------------------------------------#

   My_Report = find-one Report_Data

   Has_Failed = TRUE

   if My_Report = UNDEFINED then

      $USE RP
         [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
      $ENDUSE
 
   else
      This_Domain_Number = My_Report.Reported_Domain_Number

      $USE RP
         [] = RP4::Test_Description[Test, "1241-0000-01-1108", "Domain_A", "Bridge", "Recieve IH via bridge", This_Domain_Number]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1109"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1021"]
      $ENDUSE
 
      if The_IH.idA = 100 then

         if The_IH.ResultA = 100 then

#            if The_IH.Current_State = ''Sync_service_invocation_to_event'' then
               Has_Failed = FALSE
#            else
#               Failure_Code = -10
#            endif

         else
            Failure_Code = -20
         endif

      else
         Failure_Code = -30
      endif


      # ASL won''t allow the calling of another bridge service in this one, so
      # fake it, and USE the relevent domain. Sneaky.

      $USE RP

         if Has_Failed then
            [] = RP2::Test_Failed["Bridge", Test, Failure_Code, This_Domain_Number]
         else
            [] = RP1::Test_Passed["Bridge", Test, 0, This_Domain_Number]
         endif

      $ENDUSE

   endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000006f",'','','$USE DomainB
   [The_Result] = DomainB8::Service_Params[The_Int_Input, The_Real_Input, The_Text_Input, The_Bool_Input]
$ENDUSE

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000098",'','','local_test_number = Test_Number
local_requid = Requid
local_invoking_domain = Invoking_Domain
local_invoking_object = Invoking_Object
local_purpose = Purpose

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["ST Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP
  
      [] = RP4::Test_Description[local_test_number, local_requid, local_invoking_domain, local_invoking_object, local_purpose, Unique_Domain_ID]

   $ENDUSE


endif

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000009a",'','','local_test_number = Test_Number
local_test_value = Test_Value
local_object_domain = Test_Object_Domain

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP1::Test_Passed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000009c",'','','local_test_number = Failed_Test_Number
local_test_value = Failed_Test_Value
local_object_domain = Failed_Domain_Object

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TF Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number


   $USE RP

   [] = RP2::Test_Failed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000009e",'','','local_test_number = Unsupported_Test_Number


# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TU Calling domain has not created Report_Data"]

   $ENDUSE
else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP

   [] = RP3::Test_Unsupported[local_test_number, Unique_Domain_ID];

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000a0",'','','local_test_number = Test_Number
local_text = Free_Text

#$USE RP

#   [] = RP5::Test_Text[local_test_number, local_text]

#$ENDUSE

#-----------------------------------------------
# New stuff
#-----------------------------------------------

# Find the reporter object for this domain, there will be only one.
The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]
   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP
      [] = RP5::Test_Text[Unique_Domain_ID, local_test_number, local_text]
   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000a2",'','','local_text = This_Domain_Name


$USE RP

   [New_Domain_Number] = RP6::Create_New_Domain_Test[local_text]

$ENDUSE


# Can''t create in a bridge, so find this object and update it. Rely on the invoker
# domain to have created this object prior to this call.

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTS Calling domain has not created Report_Data"]

   $ENDUSE

else

   My_Report.Reported_Domain_Number = New_Domain_Number

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000a4",'','','local_text = This_Domain_Name

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTF Calling domain has not created Report_Data"]

   $ENDUSE

else

   local_domain_number = My_Report.Reported_Domain_Number

endif


$USE RP

   [] = RP8::Domain_Tests_Have_Finished[local_text, local_domain_number]


$ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000a6",'','','local_test_number = Requid_Test_Number
local_requid_value = The_Requid_Itself

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP10::Specify_Requid [Unique_Domain_ID, local_test_number, local_requid_value]

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000ce",'','','   $USE DomainB
     [returnA, returnB] = DomainB1::Sync1B[inputA, inputB, Test]

      outputA = returnA
      outputB = returnB

   $ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000d0",'','','  $USE DomainB
     [returnA, returnB] = DomainB2::Sync2B[inputA, inputB, Test]

      outputA = returnA
      outputB = returnB

   $ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000d2",'','','  $USE DomainB
     [ReturnA, ReturnB] = DomainB3::Sync3B[InputA, InputB, Test]

      OutputA = ReturnA
      OutputB = ReturnB

   $ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000d4",'','','   $USE DomainB

      if (InputA != 1)|(InputB != 2) then
         # Input values are incorrect do not send an event to DomainB
         OutputA = 1
         OutputB = 2
      else
         # Input values are correct and send an event to DomainB
         OutputA = 3
         OutputB = 4
         an_instanceB = find-one Object_B where idB = 2
         generate objB1:event1_from_DomainA(3, 4, Test) to an_instanceB
      endif

   $ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000d6",'','','# This test shall prove that an object in the other domain can be seen 
# and read from, even though an object with the same name and attributes 
# exists in this.

# Luckily, every domain in the test suite has a Test_Data object with an
# attribute known as This_Test_Number. So hijack it for the purposes of this test,
# being careful not to corrupt it for later tests!

my_test = find-one Test_Data

Failure_Value = 0
Has_Failed = FALSE

# Quick test to prove that the common local object in this domain can be seen, 
# and is accurate.

if my_test = UNDEFINED then

   Failure_Value = -1
   Has_Failed = TRUE

else

   if Test_Number_Parameter != my_test.This_Test_Number then

      Failure_Value = my_test.This_Test_Number
 
      Has_Failed = TRUE

   else

      This_View_Of_Domain_B_Test_Number = 999

      $USE DomainB

         Domain_B_Test_Data = find-one Test_Data

         if Domain_B_Test_Data != UNDEFINED then

            # If the Test_Data object can not be seen from here or can be seen and is 
            # something strange like 999, leave the default 
            # domain version of the domainB test number at 999, thus the test will fail.

            Has_Failed    = FALSE
            Failure_Value = Domain_B_Test_Data.This_Test_Number

         else

            Has_Failed = TRUE
            Failure_Value = -2

         endif

      $ENDUSE


   endif

endif

This_Test_Has_Failed = Has_Failed
This_Test_Failure_Value = Failure_Value

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000f2",'','','#------------------------------------------------------------------------#
# Perform a navigation in domainA
#------------------------------------------------------------------------#

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number
   Bridge_Test_Passed = FALSE
   Passed_Value       = 0
   Failure_Value      = -1

   $USE DomainA

      left_side = find-one One_To_One_Left_Side 

      if left_side != UNDEFINED then

         a_right_side = left_side -> R1.One_To_One_Right_Side

         if a_right_side != UNDEFINED then
            Bridge_Test_Passed = TRUE
            Passed_Value       = a_right_side.otors_id
         endif

      else
         Failure_Value = -2
      endif

   $ENDUSE

   $USE RP
      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_B", "DomainB DomainA", "one to one nav", This_Domain_Number]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1104"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1105"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1109"]
         [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1311"]
      if Bridge_Test_Passed = TRUE then
         [] = RP1::Test_Passed["DomainB DomainA", Test, Passed_Value, This_Domain_Number]
      else
         [] = RP2::Test_Failed["DomainB DomainA", Test, Failure_Value, This_Domain_Number]
      endif

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000f4",'','','#------------------------------------------------------------------------#
# Perform a navigation in domainA
#------------------------------------------------------------------------#

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number
   Bridge_Test_Passed = FALSE

   $USE RP
      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_B", "DomainB DomainA", "one to many nav", This_Domain_Number]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1104"]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1105"]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1109"]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1103-0000-01-1311"]
   $ENDUSE

   # Only local variables and input parameters are in scope within a bridge
   local_id = 0

   $USE DomainA
      left_side = find-one One_To_Many_Left_Side 

      #where otmls_id = Test

      if left_side != UNDEFINED then

         {a_set_of_right_sides} = left_side -> R2.One_To_Many_Right_Side

         for a_right_side in {a_set_of_right_sides} do

            if a_right_side != UNDEFINED then

               Bridge_Test_Passed = TRUE

               # Copy id to local variable
               local_id = a_right_side.otmrs_id

            endif

         endfor

      else 
         Bridge_Test_Passed = FALSE
         local_id = -1
      endif


   $ENDUSE

   $USE RP

      if Bridge_Test_Passed = TRUE then
         [] = RP1::Test_Passed["DomainB DomainA", Test, local_id, This_Domain_Number]
      else
         [] = RP2::Test_Failed["DomainB DomainA", Test, local_id, This_Domain_Number]
      endif

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000f6",'','','#------------------------------------------------------------------------#
# Perform a navigation in domainA
#------------------------------------------------------------------------#

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number
   Bridge_Test_Passed = FALSE

   local_id = 0

   $USE RP
      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_B", "DomainB DomainA", "many to many nav", This_Domain_Number]
   $ENDUSE

   $USE DomainA

      left_side = find-one Many_To_Many_Left_Side 
 
      #where mtmls_id = Test

      if left_side != UNDEFINED then
         {a_set_of_right_sides} = left_side -> R3.Many_To_Many_Right_Side

         for a_right_side in {a_set_of_right_sides} do

            if a_right_side != UNDEFINED then
               Bridge_Test_Passed = TRUE
               local_id           = a_right_side.mtmrs_id
            endif

         endfor

      else
         local_id           = -1
         Bridge_Test_Passed = FALSE
      endif
 
   $ENDUSE


   $USE RP

      if Bridge_Test_Passed = TRUE then
         [] = RP1::Test_Passed["DomainB DomainA", Test, local_id, This_Domain_Number]
      else
         [] = RP2::Test_Failed["DomainB DomainA", Test, local_id, This_Domain_Number]
      endif

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000f8",'','','#------------------------------------------------------------------------#
# Misc bridge.
# Used for pulling any extra tests into one scenario called test.
#------------------------------------------------------------------------#

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number

   Has_Passed = FALSE

   Failure_Code = 0

   $USE RP
      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "DomainB", "Bridge", "Super sub navigation", This_Domain_Number]
   $ENDUSE

   $USE DomainA
      My_Super = find-one Domain_A_Object_Super where idSUPER = 1

      if My_Super = UNDEFINED then
         Failure_Code = -1
      else
         # Navigate to the sub type
         The_Sub = My_Super -> R4.Domain_A_Object_SubA

         if The_Sub = UNDEFINED then
            Failure_Code = -1
         else

            if The_Sub.SubA_Attribute = 1 then
               Has_Passed = TRUE
            else
               Failure_Code = -2
            endif

         endif
 
      endif

   $ENDUSE

   $USE RP

      if Has_Passed = FALSE then
         [] = RP2::Test_Failed["Super sub navigation", Test, -1, This_Domain_Number]
      else
         [] = RP1::Test_Passed["Super sub navigation", Test,  0, This_Domain_Number]
      endif

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000000fa",'','','My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["Calling domain has not created Report_Data"]
   $ENDUSE

else

   This_Domain_Number = My_Report.Reported_Domain_Number

   switch Enum_Input
      case ''Sly''
         DomainB_Enum_Val of Test_Enum_Type = ''Sly''
      case ''Sandy''      
         DomainB_Enum_Val of Test_Enum_Type = ''Sandy''
      case ''Wes''
         DomainB_Enum_Val of Test_Enum_Type = ''Wes''
   endswitch

   [The_DomainB_Val] = DomainB7::Check_Enum[DomainB_Enum_Val]

   $USE DomainA

      switch Enum_Input
         case ''Sly''
            DomainA_Enum_Val of Test_Enum_Type = ''Sly''
         case ''Sandy''
            DomainA_Enum_Val of Test_Enum_Type = ''Sandy''
         case ''Wes''
            DomainA_Enum_Val of Test_Enum_Type = ''Wes''
      endswitch

      [The_DomainA_Val] = DomainA3::Check_Enum[DomainA_Enum_Val] 

   $ENDUSE

   $USE Creation_Deletion

      switch Enum_Input
         case ''Sly''
            Creation_Deletion_Enum_Val of Test_Enum_Type = ''Sly''
         case ''Sandy''
            Creation_Deletion_Enum_Val of Test_Enum_Type = ''Sandy''
         case ''Wes''
            Creation_Deletion_Enum_Val of Test_Enum_Type = ''Wes''
      endswitch

      [The_Creation_Deletion_Val] = Creation_Deletion3::Check_Enum[Creation_Deletion_Enum_Val] 


   $ENDUSE

   $USE Find_and_Sets

      switch Enum_Input
         case ''Sly''
            Find_and_Sets_Enum_Val of New_Enum_Type = ''Sly''
         case ''Sandy''
            Find_and_Sets_Enum_Val of New_Enum_Type = ''Sandy''
         case ''Wes''
            Find_and_Sets_Enum_Val of New_Enum_Type = ''Wes''
      endswitch

      [The_Find_and_Sets_Val] = Find_and_Sets4::Check_Enum[Find_and_Sets_Enum_Val]

   $ENDUSE

   $USE Function_Calls

      switch Enum_Input
         case ''Sly''
            Function_Calls_Enum_Val of New_Enum_Type = ''Sly''
         case ''Sandy''
            Function_Calls_Enum_Val of New_Enum_Type = ''Sandy''
         case ''Wes''
            Function_Calls_Enum_Val of New_Enum_Type = ''Wes''
      endswitch

      [The_Function_Calls_Val] = Function_Calls7::Nav_Enum_Over_Bridge[Function_Calls_Enum_Val]

   $ENDUSE

   $USE RP

      [] = RP4::Test_Description[Test, "1241-0000-01-1102", "Domain_B", "Bridge", "Check Enumeration across bridge", This_Domain_Number]
      [] = RP10::Specify_Requid[This_Domain_Number, Test, "1241-0000-01-1107"]
      if The_DomainA_Val = 12 then

         if The_DomainB_Val = 22 then

            if The_Creation_Deletion_Val = 32 then

               if The_Find_and_Sets_Val = 42 then
                  [] = RP1::Test_Passed["Bridge", Test, 42, This_Domain_Number]
               else
                  [] = RP2::Test_Failed["Bridge", Test, The_Find_and_Sets_Val, This_Domain_Number]
               endif

            else
               [] = RP2::Test_Failed["Bridge", Test, The_Creation_Deletion_Val, This_Domain_Number]
            endif

         else
            [] = RP2::Test_Failed["Bridge", Test, The_DomainB_Val, This_Domain_Number]
         endif

      else
         [] = RP2::Test_Failed["Bridge", Test, The_DomainA_Val, This_Domain_Number]
      endif

   $ENDUSE

 endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000123",'','','local_test_number = Test_Number
local_requid = Requid
local_invoking_domain = Invoking_Domain
local_invoking_object = Invoking_Object
local_purpose = Purpose

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["ST Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP
  
      [] = RP4::Test_Description[local_test_number, local_requid, local_invoking_domain, local_invoking_object, local_purpose, Unique_Domain_ID]

   $ENDUSE


endif

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000125",'','','local_test_number = Test_Number
local_test_value = Test_Value
local_object_domain = Test_Object_Domain

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP1::Test_Passed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000127",'','','local_test_number = Failed_Test_Number
local_test_value = Failed_Test_Value
local_object_domain = Failed_Domain_Object

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TF Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number


   $USE RP

   [] = RP2::Test_Failed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000129",'','','local_test_number = Unsupported_Test_Number


# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TU Calling domain has not created Report_Data"]

   $ENDUSE
else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP

   [] = RP3::Test_Unsupported[local_test_number, Unique_Domain_ID];

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000012b",'','','local_test_number = Test_Number
local_text = Free_Text

#$USE RP

#   [] = RP5::Test_Text[local_test_number, local_text]

#$ENDUSE

#-----------------------------------------------
# New stuff
#-----------------------------------------------

# Find the reporter object for this domain, there will be only one.
The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]
   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP
      [] = RP5::Test_Text[Unique_Domain_ID, local_test_number, local_text]
   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000012d",'','','local_text = This_Domain_Name


$USE RP

   [New_Domain_Number] = RP6::Create_New_Domain_Test[local_text]

$ENDUSE


# Can''t create in a bridge, so find this object and update it. Rely on the invoker
# domain to have created this object prior to this call.

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTS Calling domain has not created Report_Data"]

   $ENDUSE

else

   My_Report.Reported_Domain_Number = New_Domain_Number

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000012f",'','','local_text = This_Domain_Name

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTF Calling domain has not created Report_Data"]

   $ENDUSE

else

   local_domain_number = My_Report.Reported_Domain_Number

endif


$USE RP

   [] = RP8::Domain_Tests_Have_Finished[local_text, local_domain_number]


$ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000131",'','','local_test_number = Requid_Test_Number
local_requid_value = The_Requid_Itself

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP10::Specify_Requid [Unique_Domain_ID, local_test_number, local_requid_value]

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000145",'','','# Hello',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000016f",'','','local_test_number = Test_Number
local_requid = Requid
local_invoking_domain = Invoking_Domain
local_invoking_object = Invoking_Object
local_purpose = Purpose

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["ST Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP
  
      [] = RP4::Test_Description[local_test_number, local_requid, local_invoking_domain, local_invoking_object, local_purpose, Unique_Domain_ID]

   $ENDUSE


endif

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000171",'','','local_test_number = Test_Number
local_test_value = Test_Value
local_object_domain = Test_Object_Domain

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP1::Test_Passed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000173",'','','local_test_number = Failed_Test_Number
local_test_value = Failed_Test_Value
local_object_domain = Failed_Domain_Object

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TF Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number


   $USE RP

   [] = RP2::Test_Failed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000175",'','','local_test_number = Unsupported_Test_Number


# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TU Calling domain has not created Report_Data"]

   $ENDUSE
else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP

   [] = RP3::Test_Unsupported[local_test_number, Unique_Domain_ID];

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000177",'','','local_test_number = Test_Number
local_text = Free_Text

#$USE RP

#   [] = RP5::Test_Text[local_test_number, local_text]

#$ENDUSE

#-----------------------------------------------
# New stuff
#-----------------------------------------------

# Find the reporter object for this domain, there will be only one.
The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]
   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP
      [] = RP5::Test_Text[Unique_Domain_ID, local_test_number, local_text]
   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000179",'','','local_text = This_Domain_Name


$USE RP

   [New_Domain_Number] = RP6::Create_New_Domain_Test[local_text]

$ENDUSE


# Can''t create in a bridge, so find this object and update it. Rely on the invoker
# domain to have created this object prior to this call.

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTS Calling domain has not created Report_Data"]

   $ENDUSE

else

   My_Report.Reported_Domain_Number = New_Domain_Number

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000017b",'','','local_text = This_Domain_Name

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTF Calling domain has not created Report_Data"]

   $ENDUSE

else

   local_domain_number = My_Report.Reported_Domain_Number

endif


$USE RP

   [] = RP8::Domain_Tests_Have_Finished[local_text, local_domain_number]


$ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000017d",'','','local_test_number = Requid_Test_Number
local_requid_value = The_Requid_Itself

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP10::Specify_Requid [Unique_Domain_ID, local_test_number, local_requid_value]

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001ab",'','','local_test_number = Test_Number
local_requid = Requid
local_invoking_domain = Invoking_Domain
local_invoking_object = Invoking_Object
local_purpose = Purpose

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["ST Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP
  
      [] = RP4::Test_Description[local_test_number, local_requid, local_invoking_domain, local_invoking_object, local_purpose, Unique_Domain_ID]

   $ENDUSE


endif

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001ad",'','','local_test_number = Test_Number
local_test_value = Test_Value
local_object_domain = Test_Object_Domain

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP1::Test_Passed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001af",'','','local_test_number = Failed_Test_Number
local_test_value = Failed_Test_Value
local_object_domain = Failed_Domain_Object

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TF Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number


   $USE RP

   [] = RP2::Test_Failed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001b1",'','','local_test_number = Unsupported_Test_Number


# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TU Calling domain has not created Report_Data"]

   $ENDUSE
else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP

   [] = RP3::Test_Unsupported[local_test_number, Unique_Domain_ID];

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001b3",'','','local_test_number = Test_Number
local_text = Free_Text

#$USE RP

#   [] = RP5::Test_Text[local_test_number, local_text]

#$ENDUSE

#-----------------------------------------------
# New stuff
#-----------------------------------------------

# Find the reporter object for this domain, there will be only one.
The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]
   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP
      [] = RP5::Test_Text[Unique_Domain_ID, local_test_number, local_text]
   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001b5",'','','local_text = This_Domain_Name


$USE RP

   [New_Domain_Number] = RP6::Create_New_Domain_Test[local_text]

$ENDUSE


# Can''t create in a bridge, so find this object and update it. Rely on the invoker
# domain to have created this object prior to this call.

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTS Calling domain has not created Report_Data"]

   $ENDUSE

else

   My_Report.Reported_Domain_Number = New_Domain_Number

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001b7",'','','local_text = This_Domain_Name

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTF Calling domain has not created Report_Data"]

   $ENDUSE

else

   local_domain_number = My_Report.Reported_Domain_Number

endif


$USE RP

   [] = RP8::Domain_Tests_Have_Finished[local_text, local_domain_number]


$ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001b9",'','','local_test_number = Requid_Test_Number
local_requid_value = The_Requid_Itself

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP10::Specify_Requid [Unique_Domain_ID, local_test_number, local_requid_value]

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001c3",'','','Env_Text = "WACA"',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001db",'','','[] = Function_Calls9::Add_Values_From_Bridge[Test, InputValue1, InputValue2, InputValue3]',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-0000000001dd",'','','[] = OBJONE1:Get_From_Bridge[Test, Text_Input, The_Integer, The_Real]',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000206",'','','local_test_number = Test_Number
local_requid = Requid
local_invoking_domain = Invoking_Domain
local_invoking_object = Invoking_Object
local_purpose = Purpose

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["ST Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP
  
      [] = RP4::Test_Description[local_test_number, local_requid, local_invoking_domain, local_invoking_object, local_purpose, Unique_Domain_ID]

   $ENDUSE


endif

',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000208",'','','local_test_number = Test_Number
local_test_value = Test_Value
local_object_domain = Test_Object_Domain

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP1::Test_Passed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000020a",'','','local_test_number = Failed_Test_Number
local_test_value = Failed_Test_Value
local_object_domain = Failed_Domain_Object

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TF Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number


   $USE RP

   [] = RP2::Test_Failed[local_object_domain, local_test_number, local_test_value, Unique_Domain_ID];

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000020c",'','','local_test_number = Unsupported_Test_Number


# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TU Calling domain has not created Report_Data"]

   $ENDUSE
else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number

   $USE RP

   [] = RP3::Test_Unsupported[local_test_number, Unique_Domain_ID];

   $ENDUSE

endif
',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000020e",'','','local_test_number = Test_Number
local_text = Free_Text

#$USE RP

#   [] = RP5::Test_Text[local_test_number, local_text]

#$ENDUSE

#-----------------------------------------------
# New stuff
#-----------------------------------------------

# Find the reporter object for this domain, there will be only one.
The_Reporter_Object = find-one Report_Data

if The_Reporter_Object = UNDEFINED then

   $USE RP
      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]
   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP
      [] = RP5::Test_Text[Unique_Domain_ID, local_test_number, local_text]
   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000210",'','','local_text = This_Domain_Name


$USE RP

   [New_Domain_Number] = RP6::Create_New_Domain_Test[local_text]

$ENDUSE


# Can''t create in a bridge, so find this object and update it. Rely on the invoker
# domain to have created this object prior to this call.

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTS Calling domain has not created Report_Data"]

   $ENDUSE

else

   My_Report.Reported_Domain_Number = New_Domain_Number

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000212",'','','local_text = This_Domain_Name

My_Report = find-one Report_Data

if My_Report = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["DTF Calling domain has not created Report_Data"]

   $ENDUSE

else

   local_domain_number = My_Report.Reported_Domain_Number

endif


$USE RP

   [] = RP8::Domain_Tests_Have_Finished[local_text, local_domain_number]


$ENDUSE',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-000000000214",'','','local_test_number = Requid_Test_Number
local_requid_value = The_Requid_Itself

# Find the reporter object for this domain, there will be only one.

The_Reporter_Object = find-one Report_Data


if The_Reporter_Object = UNDEFINED then

   $USE RP

      [] = RP7::Report_Run_Time_Error["TP Calling domain has not created Report_Data"]

   $ENDUSE

else

   Unique_Domain_ID =  The_Reporter_Object.Reported_Domain_Number
 
   $USE RP

   [] = RP10::Specify_Requid [Unique_Domain_ID, local_test_number, local_requid_value]

   $ENDUSE

endif',3,2,0 );
INSERT INTO SPR_PO VALUES ( "00000000-0000-0000-0000-00000000021e",'','','Env_Text = "WACA"',3,2,0 );
INSERT INTO CL_IC VALUES ( "00000000-0000-0000-0000-000000000029","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",0,'','DomainA','name:DomainA
' );
INSERT INTO CL_IC VALUES ( "00000000-0000-0000-0000-0000000000d9","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",0,'','DomainB','name:DomainB
' );
INSERT INTO CL_IC VALUES ( "00000000-0000-0000-0000-000000000134","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",0,'','RP','name:RP
' );
INSERT INTO CL_IC VALUES ( "00000000-0000-0000-0000-000000000139","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",0,'','Creation_Deletion','name:Creation_Deletion
' );
INSERT INTO CL_IC VALUES ( "00000000-0000-0000-0000-000000000180","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",0,'','Find_and_Sets','name:Find_and_Sets
' );
INSERT INTO CL_IC VALUES ( "00000000-0000-0000-0000-0000000001c6","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",0,'','Function_Calls','name:Function_Calls
' );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000004",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000006",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000009",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000000c",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000000f",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000012",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000015",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000018",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000001b",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000001e",1,"00000000-0000-0000-0000-000000000004","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000021",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000023",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",2 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000025",1,"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000023",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000027",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",7 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000029",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",21 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000002e",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000049",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000054",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",3 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000072",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000a9",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000d9",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",21 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000de",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000000fd",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000134",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",21 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000139",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",21 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-00000000013e",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000148",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000180",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",21 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000185",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001bc",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001c6",1,"00000000-0000-0000-0000-000000000021","00000000-0000-0000-0000-000000000000",21 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001cb",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-0000000001e0",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO PE_PE VALUES ( "00000000-0000-0000-0000-000000000217",1,"00000000-0000-0000-0000-000000000027","00000000-0000-0000-0000-000000000000",6 );
INSERT INTO model VALUES ( 'maslin' );
INSERT INTO option VALUES ( 'maslin','actiondialect','WASL' );
INSERT INTO option VALUES ( 'maslin','projectroot','output/TSV2_10_42/' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000006","00000000-0000-0000-0000-000000000000",'MASLtype','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000009","00000000-0000-0000-0000-000000000000",'MASLunique','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000000c","00000000-0000-0000-0000-000000000000",'device','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000000f","00000000-0000-0000-0000-000000000000",'duration','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000012","00000000-0000-0000-0000-000000000000",'wstring','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000015","00000000-0000-0000-0000-000000000000",'long_integer','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000018","00000000-0000-0000-0000-000000000000",'byte','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000001b","00000000-0000-0000-0000-000000000000",'wcharacter','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-00000000001e","00000000-0000-0000-0000-000000000000",'character','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000049","00000000-0000-0000-0000-000000000000",'Test_Enum_Type','','' );
INSERT INTO S_DT VALUES ( "00000000-0000-0000-0000-000000000054","00000000-0000-0000-0000-000000000000",'inst_ref<Object_A>','','' );
